ÄÙsetupParentDatacomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinecomputeDryLayoutperformLayoutcomputeSizeForNoChildhitTestChildrenapplyPaintTransformpaintdeferToChildopaquetranslucentbehaviorhitTesthitTestSelfdebugFillPropertiesadditionalConstraints_additionalConstraintsdebugPaintSizemaxWidth	_maxWidth	maxHeight
_maxHeight_limitConstraints_computeSizeaspectRatio_aspectRatio_applyAspectRatio	stepWidth
_stepWidth
stepHeight_stepHeight
_applyStepalwaysNeedsCompositing_alphaopacity_opacityalwaysIncludeSemantics_alwaysIncludeSemanticspaintsChildvisitChildrenForSemanticsisRepaintBoundary_currentlyIsRepaintBoundaryupdateCompositedLayerattachdetach_updateOpacitylayershaderCallback_shaderCallback	blendMode
_blendModefilter_filter_reclipaddListenerremoveListenergetClipgetApproximateClipRectshouldRecliptoStringshapetextDirectionclipper_clipper_markNeedsClip_defaultClip_clipclipBehavior_clipBehavior_updateClipdescribeApproximatePaintClip_debugPaint
_debugTextborderRadius_borderRadius_textDirection_cachedRect_cachedPath_getClipPath	elevation
_elevationshadowColor_shadowColorcolor_colordescribeSemanticsConfiguration_shape
background
foreground_painter
decoration_decorationposition	_positionconfiguration_configurationorigin_origin	alignment
_alignmenttransformHitTests
_transform	transformfilterQuality_filterQualitysetIdentityrotateXrotateYrotateZ	translatescale_effectiveTransform_resolvedAlignment_resolve_markNeedResolution_fitAffectsLayoutfit_fit_hasVisualOverflow_clearPaintData_updatePaintData_paintChildWithTransformtranslation_translationonPointerDownonPointerMoveonPointerUponPointerHoveronPointerCancelonPointerPanZoomStartonPointerPanZoomUpdateonPointerPanZoomEndonPointerSignalhandleEvent_opaquehitTestBehavioronEnteronHoveronExitcursor_cursorvalidForMouseTracker_validForMouseTrackertoImagedebugSymmetricPaintCount_debugSymmetricPaintCountdebugAsymmetricPaintCount_debugAsymmetricPaintCountdebugResetMetrics!debugRegisterRepaintBoundaryPaintignoring	_ignoringignoringSemantics_ignoringSemantics_effectiveIgnoringSemanticsoffstage	_offstagesizedByParentperformResizedebugDescribeChildren	absorbing
_absorbingmetaDatavalidActions_validActionsonTap_onTaponLongPress_onLongPressonHorizontalDragUpdate_onHorizontalDragUpdateonVerticalDragUpdate_onVerticalDragUpdatescrollFactor_isValidAction_performSemanticScrollLeft_performSemanticScrollRight_performSemanticScrollUp_performSemanticScrollDown
properties_properties	container
_containerexplicitChildNodes_explicitChildNodesexcludeSemantics_excludeSemantics_updateAttributedFields_effectiveAttributedLabel_effectiveAttributedValue"_effectiveAttributedIncreasedValue"_effectiveAttributedDecreasedValue_effectiveAttributedHint_attributedLabel_attributedValue_attributedIncreasedValue_attributedDecreasedValue_attributedHint_performTap_performLongPress_performDismiss_performScrollLeft_performScrollRight_performScrollUp_performScrollDown_performIncrease_performDecrease_performCopy_performCut_performPaste$_performMoveCursorForwardByCharacter%_performMoveCursorBackwardByCharacter_performMoveCursorForwardByWord _performMoveCursorBackwardByWord_performSetSelection_performSetText!_performDidGainAccessibilityFocus!_performDidLoseAccessibilityFocusblocking	_blocking	excluding
_excludingindex_indexlink_link_previousLayoutSizeshowWhenUnlinked_showWhenUnlinkedoffset_offsetleaderAnchor_leaderAnchorfollowerAnchor_followerAnchorgetCurrentTransformvalue_valuesized_sized7RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityShaderCallbackRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBase_transparentPaintRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationPointerDownEventListenerPointerMoveEventListenerPointerUpEventListenerPointerCancelEventListener PointerPanZoomStartEventListener!PointerPanZoomUpdateEventListenerPointerPanZoomEndEventListenerPointerSignalEventListenerRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegionÅÔImageFilterGradientImageColorPointerEventPointerDownEventPointerMoveEventPointerUpEventPointerCancelEventRenderProxySliver	RenderBoxRenderObjectWithChildMixinchildoptionalTypeArgsToverridevoidRenderObject
parentData
ParentDatadoublegetMinIntrinsicWidthgetMaxIntrinsicWidthgetMinIntrinsicHeightgetMaxIntrinsicHeightTextBaselinegetDistanceToActualBaselinecomputeDistanceToActualBaselineSizeBoxConstraintsgetDryLayoutcomputeSizeForNoChildlayoutconstraintsparentUsesSizesizesmallestboolBoxHitTestResultOffsethitTestpositionMatrix4PaintingContext
paintChilddeferToChildcontainshitTestChildrentranslucentaddBoxHitTestEntryopaqueDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertydefaultValuedebugAssertIsValidmarkNeedsLayouthasBoundedWidthhasTightWidthminWidthcomputeMinIntrinsicWidthisFinitehasInfiniteWidthconstrainWidthcomputeMaxIntrinsicWidthhasBoundedHeighthasTightHeight	minHeightcomputeMinIntrinsicHeighthasInfiniteHeightconstrainHeightcomputeMaxIntrinsicHeightenforce	constrainzerodebugPaintSizePaintisEmptycolorcanvasdrawRectDiagnosticsPropertymaxWidth	maxHeightinfinityChildLayouterlayoutChildChildLayoutHelperdryLayoutChildDoublePropertyFlutterErrorruntimeTypeisTighttightAlignRowCrossAxisAlignmentstretchceiltightenwidthheightColumngetAlphaFromOpacityintmarkNeedsCompositingBitsUpdatemarkNeedsPaintmarkNeedsSemanticsUpdateparentlayerneedsCompositingpushOpacitypaintoldLayerOpacityLayerdebugCreatorRenderObjectVisitorFlagPropertyvalueifTrueRenderSliverAnimatedOpacityRenderSliver_currentlyIsRepaintBoundaryOffsetLayeralpha_alpha	Animation_opacityattachedopacityremoveListener_updateOpacityaddListener_alwaysIncludeSemanticsPipelineOwnerattachdetachmarkNeedsCompositedLayerUpdatealwaysIncludeSemanticsShaderRect
ShaderMasklinear	BlendModemodulateShaderMaskLayershadermaskRect	blendMode	pushLayersrcOverBackdropFilterLayerblurfilterClipRectClipPath	ClipRRectClipOvalShapeBorder
ListenablereclipVoidCallbackStringobjectRuntimeTypePathTextDirectiongetOuterPathtextDirectionshapeClip	antiAliasshouldRecliphasSizeperformLayoutgetClipnonehardEdgeantiAliasWithSaveLayergetApproximateClipRectTextPainterTileModerepeatedstrokeWidthstylePaintingStylestroketextTextSpan	TextStylefontSizertlclipperclipBehavior_clipper_updateClip_clippushClipRectClipRectLayershift_debugPaint
_debugTextRRectBorderRadiusBorderRadiusGeometry_markNeedsClipresolvetoRRectpushClipRRect	outerRectClipRRectLayer	drawRRect	tlRadiusXaddOvalcenterdxdydistanceSquaredpushClipPathClipPathLayerdrawPathaddRectdebugDisableShadowsalwaysNeedsCompositingSemanticsConfigurationdescribeSemanticsConfiguration	elevationColorPropertyshadowColorBoxShape	rectanglecircle
fromRectXYrectaddRRectCanvasinflate
drawShadow	drawPaint
DecorationImageConfiguration
backgroundempty
BoxPainterBoxDecorationdisposeImageProvidercreateBoxPaintercopyWithgetSaveCount	fromPartsDiagnosticsNodeErrorSummaryErrorDescriptionDiagnosticsTreeStyleerrorProperty	isComplexsetIsComplexHint
foregroundtoDiagnosticsNodenameAlignmentGeometryFilterQuality	transform	alignmentfilterQualityoriginAlignmentDirectionalcenterStart	Alignmentxltr	centerEndlocalToGlobalglobalToLocalcopysetIdentityrotateXrotateYrotateZ	translateyzscaleidentity	alongSizemultiplyaddWithPaintTransformMatrixUtilsgetAsTranslationdeterminantpushTransformTransformLayertranslationValuesmatrixstorageImageFilterLayerimageFilterTransformPropertyBoxFitcontain	scaleDowncoverfill	fitHeightfitWidthdebugCheckingIntrinsicsdebugCannotComputeDryLayoutreasonloosensizeConstraints,constrainSizeAndAttemptToPreserveAspectRatiounconstrainedSizeFittedSizesapplyBoxFitdestinationsourceinscribelefttopeverysetZerodebugNeedsLayoutaddWithPaintOffsetoffsetListenerPointerPanZoomStartEventPointerPanZoomUpdateEventPointerPanZoomEndEventPointerSignalEventbehaviorPointerHoverEventListenerbiggestHitTestEntrydebugHandleEventcallPointerHoverEventFlagsSummaryFunctionifEmptyMouseRegionMouseTrackerAnnotationMouseCursordeferPointerEnterEventListenerPointerExitEventListenerifFalsedebugDumpRenderTree
pixelRatiodebugNeedsPainttoImageFutureincludedParentincludedChildMessagePropertyPercentPropertyunittooltipmessageSemanticsNodedescription%markNeedsLayoutForSizedByParentChangecomputeDryLayoutperformResizevisitChildrenForSemanticsListoffstagesparsedynamicGestureTapCallbackGestureLongPressCallbackGestureDragUpdateCallbackSemanticsActiontap
scrollLeftscrollRightSet	setEqualsonTap	longPressonLongPressonScrollRightonScrollLeftscrollUp
onScrollUp
scrollDownonScrollDownDragUpdateDetailsdeltaprimaryDeltaglobalPositionIterablePropertySemanticsPropertiesattributedLabelisSemanticBoundaryExcludeSemantics	SemanticsAttributedStringlabelattributedValueattributedIncreasedValueincreasedValueattributedDecreasedValuedecreasedValueattributedHinthintexplicitChildNodesscopesRoutetoggledcheckedenabled	isEnabled	isChecked	isToggledselected
isSelectedbuttonisButtonlinkisLinksliderisSliderkeyboardKeyisKeyboardKeyheaderisHeader	textFieldisTextFieldreadOnly
isReadOnly	focusableisFocusablefocused	isFocusedinMutuallyExclusiveGroupisInMutuallyExclusiveGroupobscured
isObscured	multilineisMultilinehiddenisHiddenimageisImagehintOverrides
isNotEmpty
namesRoute
liveRegionmaxValueLengthcurrentValueLengthsortKeytagForChildrenaddTagForChildren	onDismiss
onIncrease
onDecreaseonCopyonCutonPasteonMoveCursorForwardByCharacteronMoveCursorBackwardByCharacteronMoveCursorForwardByWordonMoveCursorBackwardByWordonSetSelection	onSetTextonDidGainAccessibilityFocusonDidLoseAccessibilityFocuscustomSemanticsActionsTextSelection+isBlockingSemanticsOfPreviouslyPaintedNodesisMergingSemanticsOfDescendants
ScrollViewscrollIndexCustomScrollViewindexInParentCompositedTransformTargetLeaderLayer	LayerLink
leaderSizeCompositedTransformFollowerFollowerLayertopLeft
bottomLeftgetLastTransformleadershowWhenUnlinkedlinkedOffsetunlinkedOffsetchildPaintBoundsfromLTRBnegativeInfinityAnnotatedRegionLayerLayerfindObject	RenderBoxRenderObjectWithChildMixinRenderProxyBoxMixinRenderProxyBoxRenderAnimatedOpacityMixin
ListenableCustomClipper_RenderCustomClip_RenderPhysicalModelBase!RenderProxyBoxWithHitTestBehaviorMouseTrackerAnnotationõﬁk’»’ÔX%«Ù˜  package:flutter/gestures.dart  dart:ui  package:flutter/animation.dart  package:flutter/foundation.dart  package:flutter/gestures.dart  package:flutter/semantics.dart  package:flutter/services.dart  box.dart  
layer.dart  layout_helper.dart  object.dart  	dart:core¿Pf ¿Ç°ì∞ <ÄÜÄ§Ä•ÄÊÄÁÅÅ:ÅbÅãÅ≥Å¥Å«Å‹Å˘ÇÇÇ<ÇLÇ`ÇtÇÜÇúÇùÇ›Ç·É1ÉÉŒÑÑÑeÑ∂ÖÖÖÖ+Ö/ÖÖêÜÜ&Ü,Ü{Ü»Ü⁄ááááá áHáLáâá‘ààzàåàÈàıâ"ânâëâºâ„âÈâÌâÓâ˙ä-äFäxä~äéäíäìäüä“äÎãã#ã3ã7ã8ãDãwãêã¬ã»ãÿã‹ã›ãÈåå5ågåmå}åÅåÇåéå—åÍç%ç+çgçkçlçxçÆç«çˆç¸é+é/é0é<éUéné¶é¿éÕé˛èèè	èRèñè—èÚèˆè˜êêSêìêóêòê§êÍêÎê˜ë.ëGëqëwë{ë}ë~ë¢ëπííCíSíTíüíÓììììcìûì≠ìØì∞ìÔî	îSîÜîåî–îˆï(ï>ïSïTï|ïòïôï•ïÌñ	ñ,ñÑñ∆ñ˚óó	óó#ó$ó0ó{ó|óàóÕó¯òUòYò[ò\òçòëò‡ô)ôyôÜôäô⁄ö#ö@ötö™ö∞öˇõõ.õaõèõ úúúúWúùú∆ú˙ùù=ùhùvù|ù†ù∑ùªùºù»ù˚ûUûÉûâû ûÊüüUü[ümüqürü~ü±††9†?†Ä†ú†–°°°#°'°(°4°g°√°Ú°¯¢:¢W¢å¢…¢œ¢‚¢Ê¢Á¢Û£&£Ç£±£∑£˘§§K§à§é§°§•§¶§≤§À•••u•è•ú•Î•Ò•ı•ˆ¶¶8¶Q¶†¶≠¶¸ßßßßßSß~ßéßßßŸßÒ®®U®]®p®z®~®®ã®–®˚©d©h©j©k©§©Á©Î™8™É™Œ´´6´:´Ö´À´€¨¨\¨ë¨ó¨ﬁ¨Ú≠≠≠D≠l≠†≠÷≠ÛÆÆ'Æ(Æ}Æ°ÆµÆ‘ÆˇØØ+Ø1ØHØ_ØcØdØªØ·Øˆ∞∞A∞`∞n∞t∞å∞£∞ß∞®∞È±±*±ï±Ω≤-≤4≤8≤9≤õ≤¥≥≥5≥;≥{≥≥Ä≥å≥¬≥€≥˚¥0¥7¥;¥<¥H¥a¥z¥ö¥Ã¥”¥◊¥ÿ¥‰µ)µTµ≠∂∂∂∂∂J∂N∂ö∂È∑7∑;∑É∑”∏∏∏\∏™∏˘π@πDπêπ·∫2∫Ä∫Œªªjª∏ººKºãººº˘ºˇΩBΩXΩnΩèΩ≥Ω’Ω˙ææ2æ3æ]æcæ≥æ˙ø$ø;ø]øxøëø≠øŒø‹ø‚ø¸¿ @¿ @¿ @¿ @$¿ @W¿ @r¿ @ñ¿ @ú¿ @µ¿ @Á¿ @Ì¿ @˝¿ A¿ A¿ A¿ AA¿ A\¿ AÄ¿ AÜ¿ Aü¿ A—¿ A◊¿ AÁ¿ AÎ¿ AÏ¿ A¯¿ B+¿ BE¿ Bh¿ Bn¿ Bá¿ Bπ¿ Bø¿ Bœ¿ B”¿ B‘¿ B‡¿ C¿ C-¿ CP¿ CV¿ Co¿ C°¿ Cß¿ C∑¿ Cª¿ Cº¿ CÛ¿ D!¿ D1¿ D|¿ Dò¿ DŒ¿ E%¿ Ev¿ E»¿ EÊ¿ EÒ¿ E˘¿ F¿ F¿ F¿ F6¿ FY¿ F_¿ F`¿ Fâ¿ Fú¿ Fù¿ FÍ¿ G6¿ GM¿ Gg¿ Gå¿ Gô¿ Gø¿ G‰¿ GÍ¿ GÎ¿ H9¿ HÉ¿ Hœ¿ HÊ¿ HÁ¿ I¿ I3¿ IX¿ I^¿ I_¿ Iâ¿ IØ¿ I‘¿ I⁄¿ I€¿ J¿ J'¿ JL¿ JR¿ JS¿ J}¿ J£¿ J»¿ JŒ¿ Jœ¿ K¿ K
¿ K¿ K¿ KM¿ Kx¿ K|¿ K}¿ Kâ¿ K¢¿ KÃ¿ KÂ¿ L¿ L¿ L ¿ L!¿ L-¿ Lr¿ Lù¿ L›¿ L·¿ L„¿ L‰¿ M ¿ M$¿ Mq¿ M¡¿ Mı¿ M˘¿ NE¿ Nï¿ N·¿ O+¿ Ox¿ O†¿ O§¿ OÙ¿ P@¿ P~¿ PÇ¿ Pœ¿ Q¿ Ql¿ QÉ¿ Qá¿ Qï¿ Qô¿ QË¿ R/¿ R}¿ Rê¿ R‹¿ S¿ Sl¿ S†¿ S‘¿ T$¿ T*¿ Tz¿ Tõ¿ T¥¿ TÀ¿ T„¿ T˘¿ U.¿ Ue¿ UÑ¿ U•¿ U∫¿ Uª¿ V¿ V¿ V4¿ V[¿ Vq¿ Ví¿ Vº¿ V€¿ VÈ¿ VÔ¿ W¿ W¿ W"¿ W#¿ Wo¿ Wu¿ Wù¿ W∆¿ W›¿ Wˇ¿ X)¿ XI¿ XW¿ X]¿ Xv¿ Xç¿ Xë¿ Xí¿ XÀ¿ XÁ¿ Xˇ¿ Y¿ Y¿ YB¿ YF¿ YG¿ YS¿ YÜ¿ Y≥¿ Y∑¿ Y∏¿ Yƒ¿ Y˜¿ Z¿ Z"¿ Z(¿ Zf¿ Zê¿ Zî¿ Zï¿ Z°¿ Z‘¿ ZÌ¿ Zˇ¿ [¿ [ ¿ [Y¿ [_¿ [{¿ [∫¿ [Ê¿ [Í¿ [Î¿ [˜¿ \*¿ \C¿ \U¿ \[¿ \v¿ \Ø¿ \µ¿ \—¿ ]¿ ]<¿ ]@¿ ]A¿ ]¢¿ ]ª¿ ]„¿ ^4¿ ^T¿ ^•¿ ^≠¿ ^Œ¿ _ ¿ _A¿ _ï¿ _ù¿ _Ã¿ _Ÿ¿ _¸¿ `¿ `¿ `¿ `¿ `I¿ `b¿ `ó¿ `∑¿ `æ¿ `¬¿ `√¿ `œ¿ `Ë¿ a¿ a3¿ aS¿ aZ¿ a^¿ a_¿ ak¿ a∞¿ a€¿ b¿ bU¿ bY¿ b[¿ b\¿ bë¿ bï¿ b„¿ c3¿ ch¿ cl¿ c∏¿ d¿ dV¿ d°¿ dÔ¿ e¿ e¿ ei¿ e∑¿ f¿ f¿ f!¿ f/¿ f3¿ fÇ¿ f ¿ g¿ g,¿ g{¿ gø¿ h¿ hC¿ hx¿ h…¿ h„¿ h˘¿ i¿ i¿ i¿ iN¿ ig¿ iy¿ i¿ iõ¿ iŸ¿ iﬂ¿ i¸¿ j,¿ j0¿ j1¿ j=¿ jp¿ jâ¿ jõ¿ j°¿ jΩ¿ j˚¿ k¿ k¿ kN¿ kR¿ kS¿ k_¿ kí¿ kø¿ k√¿ kƒ¿ l%¿ l>¿ lg¿ lπ¿ l⁄¿ m¿ m¿ mL¿ mY¿ m|¿ mÇ¿ mÜ¿ má¿ mì¿ m…¿ m‚¿ n¿ n7¿ n>¿ nB¿ nC¿ nO¿ nh¿ nÅ¿ n≥¿ n”¿ n⁄¿ nﬁ¿ n‡¿ n·¿ o¿ o¿ o`¿ oï¿ oô¿ o‰¿ p.¿ p}¿ pÕ¿ p˙¿ q/¿ q5¿ qz¿ qå¿ q¶¿ qœ¿ qÂ¿ r¿ r6¿ re¿ rÄ¿ rπ¿ r¿ s¿ s¿ s¿ sT¿ sU¿ sc¿ sd¿ sô¿ sü¿ sÔ¿ t¿ t¿ t2¿ t8¿ t|¿ t√¿ t‘¿ tˆ¿ u	¿ u'¿ uB¿ ul¿ uâ¿ uó¿ uù¿ uŸ¿ v¿ v¿ vM¿ vÖ¿ v≠¿ v≥¿ v…¿ w¿ w-¿ w3¿ w7¿ w8¿ w~¿ wÑ¿ w¬¿ w»¿ w·¿ x¿ x?¿ xj¿ xñ¿ x§¿ x™¿ xœ¿ xÔ¿ xÛ¿ xÙ¿ y ¿ y&¿ yH¿ y_¿ yc¿ yd¿ yp¿ yß¿ y¿¿ yŒ¿ y‘¿ yÎ¿ z4¿ zH¿ zV¿ z\¿ z]¿ z{¿ z€¿ zÎ¿ {¿ {(¿ {2¿ {6¿ {7¿ {C¿ {É¿ {«¿ {ﬁ¿ {‰¿ {Ë¿ {È¿ {ı¿ |:¿ |e¿ |ù¿ }¿ }¿ } ¿ }!¿ }r¿ }v¿ }≈¿ ~¿ ~\¿ ~∏¿ ~«¿ ~»¿ ~‘¿ #¿ H¿ I¿ U¿ ®¿ Í¿ Ä¿ Ä$¿ Ä(¿ Ä)¿ Äg¿ Äm¿ ÄΩ¿ Ä÷¿ Ä‹¿ Å%¿ ÅM¿ ÅS¿ Å£¿ ÅÍ¿ Ç¿ Ç7¿ Ç`¿ Ç{¿ Çò¿ Ç¶¿ Ç¨¿ Ç‘¿ É¿ É¿ É¿ É2¿ É]¿ Éc¿ Éy¿ É}¿ É~¿ Éƒ¿ É ¿ Ñ¿ Ñ¿ Ñ'¿ Ñ-¿ Ñ}¿ Ñƒ¿ Ö¿ Ö$¿ ÖO¿ Ö{¿ Öâ¿ Öè¿ Ö¥¿ Ö‘¿ Öÿ¿ ÖŸ¿ ÖÂ¿ Ü
¿ Ü#¿ ÜL¿ Üì¿ Üó¿ Üò¿ Ü§¿ Ü∂¿ Ü‚¿ Üˆ¿ Ü˙¿ Ü˚¿ á¿ á7¿ áq¿ áè¿ á”¿ à¿ àT¿ à~¿ àÜ¿ àÆ¿ àÿ¿ à¸¿ â¿ â
¿ â¿ â¿ â¿ âD¿ âf¿ âÑ¿ âà¿ ââ¿ âï¿ âÃ¿ â„¿ âÒ¿ â˜¿ ä¿ ä¿ ä¿ ä*¿ äj¿ äÆ¿ ä≈¿ äÀ¿ äœ¿ ä–¿ ä‹¿ ã!¿ ãL¿ ãú¿ å¿ å¿ å¿ å ¿ åg¿ åk¿ åº¿ åË¿ ç]¿ çí¿ çò¿ ç«¿ ç·¿ é	¿ é2¿ éH¿ éh¿ éó¿ é≠¿ é…¿ è¿ è¿ è	¿ è
¿ èS¿ èW¿ èì¿ è ¿ èÀ¿ ê¿ ê¿ êW¿ êå¿ êº¿ ë¿ ë¿ ëa¿ ëv¿ ëå¿ ë∏¿ ëÊ¿ í¿ í/¿ íX¿ íw¿ íå¿ íç¿ íô¿ í⁄¿ í€¿ ì¿ ì¿ ìn¿ ì∑¿ ìΩ¿ ì˝¿ î¿ îe¿ îù¿ î’¿ î˜¿ ï$¿ ï?¿ ïc¿ ïq¿ ïw¿ ïî¿ ï™¿ ïÆ¿ ïØ¿ ïÛ¿ ï˘¿ ñH¿ ñì¿ ñº¿ ñ‘¿ ñ˜¿ ó¿ ó1¿ ó?¿ óE¿ ó]¿ ós¿ ów¿ óx¿ óÑ¿ ó∏¿ óπ¿ ó≈¿ ó¸¿ ò¿ ò5¿ òX¿ òe¿ òú¿ òø¿ ò·¿ ô¿ ô)¿ ôU¿ ôj¿ ôv¿ ôÉ¿ ôó¿ ôù¿ ô°¿ ô£¿ ô§¿ ôÚ¿ ôˆ¿ öF¿ öZ¿ öé¿ öØ¿ öµ¿ ö„¿ õ!¿ õP¿ õ∆¿ õ‰¿ ú¿ ú¿ ú;¿ úO¿ úP¿ ú\¿ ú•¿ ú¶¿ úˆ¿ ù¿ ù¿ ùZ¿ ùm¿ ùï¿ ùØ¿ ù‘¿ ùÔ¿ û¿ û¿ û¿ û4¿ ûJ¿ ûN¿ ûO¿ û®¿ û∑¿ ûΩ¿ ûı¿ ü¿ ü6¿ üY¿ üt¿ üì¿ ü°¿ üß¿ üø¿ ü’¿ üŸ¿ ü⁄¿ üÊ¿ †¿ †¿ †'¿ †^¿ †w¿ †ó¿ †æ¿ †›¿ °¿ °8¿ °J¿ °v¿ °ã¿ °ó¿ °§¿ °∏¿ °æ¿ °¬¿ °ƒ¿ °≈¿ °Ú¿ °ˆ¿ ¢?¿ ¢P¿ ¢T¿ ¢•¿ ¢©¿ ¢Ú¿ £>¿ £O¿ £S¿ £û¿ £Ï¿ §=¿ §ç¿ §ë¿ §ü¿ §£¿ §Ï¿ •7¿ •Ä¿ •…¿ ¶¿ ¶M¿ ¶m¿ ¶s¿ ¶ƒ¿ ß¿ ß¿ ß$¿ ß%¿ ßh¿ ßn¿ ßΩ¿ ®¿ ®$¿ ®0¿ ®}¿ ®~¿ ®Œ¿ ®ˇ¿ ©¿ ©T¿ ©§¿ ©ª¿ ©«¿ ™¿ ™¿ ™f¿ ™ä¿ ™¢¿ ™£¿ ™Ë¿ ´+¿ ´_¿ ´e¿ ´©¿ ´¿ ¨3¿ ¨z¿ ¨∫¿ ¨ª¿ ≠¿ ≠Y¿ ≠™¿ ≠˚¿ Æ¿ ÆI¿ Æò¿ Æ•¿ Æ´¿ Æ˘¿ Ø¿ Ø¿ ØQ¿ Øù¿ Ø—¿ ∞¿ ∞¿ ∞¿ ∞[¿ ∞]¿ ∞^¿ ∞•¿ ∞‹¿ ±¿ ±	¿ ±6¿ ±<¿ ±Ñ¿ ±”¿ ≤ ¿ ≤c¿ ≤Ä¿ ≤ô¿ ≤±¿ ≤œ¿ ≤–¿ ≥¿ ≥*¿ ≥+¿ ≥s¿ ≥y¿ ≥ƒ¿ ≥Î¿ ¥¿ ¥¿ ¥G¿ ¥S¿ ¥o¿ ¥¿¿ ¥ƒ¿ ¥≈¿ ¥—¿ µ¿ µ?¿ µR¿ µX¿ µ©¿ µ”¿ ∂¿ ∂¿ ∂¿ ∂¿ ∂R¿ ∂h¿ ∂~¿ ∂ù¿ ∂≈¿ ∂Í¿ ∑¿ ∑*¿ ∑?¿ ∑@¿ ∑~¿ ∑´¿ ∑…¿ ∑˜¿ ∏¿ ∏'¿ ∏-¿ ∏`¿ ∏{¿ ∏±¿ ∏Â¿ π!¿ πP¿ πh¿ πn¿ πÇ¿ π¥¿ π„¿ πÈ¿ πÌ¿ πÓ¿ π˙¿ ∫¿ ∫8¿ ∫c¿ ∫g¿ ∫h¿ ∫t¿ ∫Ü¿ ∫¥¿ ∫»¿ ∫Ã¿ ∫Õ¿ ∫Á¿ ∫˘¿ ª¿ ª/¿ ª3¿ ª4¿ ªJ¿ ªV¿ ªW¿ ªÅ¿ ª¢¿ ªƒ¿ ª·¿ ª˘¿ ªˇ¿ º¿ º¿ º¿ º&¿ º?¿ ºp¿ ºã¿ º¶¿ º∫¿ º¿¿ ºƒ¿ º≈¿ º‹¿ Ω¿ Ω¿ Ω¿ Ω$¿ Ω_¿ Ω{¿ Ωë¿ Ω¶¿ Ω¿¿ Ω€¿ æ¿ æP¿ æV¿ æZ¿ æ[¿ æq¿ æå¿ æò¿ æÿ¿ æË¿ ø¿ ø-¿ øD¿ øh¿ øﬂ¿ ¿¿ ¿(¿ ¿2¿ ¿N¿ ¿v¿ ¿ò¿ ¿∂¿ ¿À¿ ¿Á¿ ¡¿ ¡+¿ ¡:¿ ¡G¿ ¡ô¿ ¡£¿ ¡∑¿ ¡ ¿ ¡‘¿ ¡ÿ¿ ¡⁄¿ ¡€¿ ¬¿ ¬¿ ¬T¿ ¬•¿ ¬ª¿ ¬Ú¿ √¿ √¿ √j¿ √{¿ √Å¿ √¡¿ √Ò¿ ƒ¿ ƒ¿ ƒ(¿ ƒ@¿ ƒe¿ ƒf¿ ƒr¿ ƒ°¿ ƒ¢¿ ƒÆ¿ ƒˆ¿ ≈¿ ≈'¿ ≈D¿ ≈l¿ ≈Ç¿ ≈ä¿ ≈ê¿ ≈∆¿ ≈ ¿ ≈À¿ ≈◊¿ ∆¿ ∆'¿ ∆N¿ ∆e¿ ∆ã¿ ∆ß¿ ∆π¿ ∆À¿ ∆‚¿ «¿ «5¿ «@¿ «O¿ «{¿ «ë¿ «ô¿ «¶¿ «∫¿ «¿¿ «ƒ¿ «≈¿ «—¿ »¿ »!¿ »<¿ »k¿ »î¿ »€¿ …X¿ …b¿ …j¿ …}¿ …á¿ …ã¿ …ç¿ …é¿ …Ω¿ …¡¿  ¿  _¿  u¿  Æ¿  ÿ¿  ﬁ¿ À.¿ ÀJ¿ ÀP¿ Àê¿ Àñ¿ Àﬂ¿ Ã¿ Ã#¿ Ã4¿ Ão¿ Ãí¿ Ã™¿ ÃÃ¿ ÃÒ¿ Õ¿ Õ=¿ Õ^¿ Õî¿ Õò¿ Õô¿ Õ…¿ Õœ¿ Œ¿ Œ5¿ Œ;¿ Œq¿ Œ´¿ Œ—¿ œ¿ œ¿ œ?¿ œM¿ œS¿ œn¿ œÑ¿ œà¿ œâ¿ œ»¿ œ˛¿ –¿ –K¿ –n¿ –|¿ –Ç¿ –û¿ –¥¿ –∏¿ –π¿ –≈¿ —#¿ —$¿ —0¿ —x¿ —î¿ —©¿ —∆¿ —Ó¿ “¿ “¿ “¿ “H¿ “L¿ “M¿ “Y¿ “ê¿ “©¿ “–¿ “Á¿ ”¿ ”*¿ ”<¿ ”X¿ ”j¿ ”Å¿ ”ß¿ ”’¿ ”‡¿ ”Ô¿ ‘¿ ‘1¿ ‘9¿ ‘F¿ ‘Z¿ ‘`¿ ‘d¿ ‘e¿ ‘q¿ ‘±¿ ‘¡¿ ‘‹¿ ’¿ ’4¿ ’|¿ ’˜¿ ÷¿ ÷	¿ ÷¿ ÷&¿ ÷*¿ ÷,¿ ÷-¿ ÷P¿ ÷T¿ ÷¢¿ ÷Î¿ ◊5¿ ◊l¿ ◊è¿ ◊ï¿ ◊Â¿ ÿ¿ ÿ¿ ÿQ¿ ÿÅ¿ ÿî¿ ÿ•¿ ÿ∏¿ ÿ–¿ ÿı¿ ÿˆ¿ Ÿ¿ Ÿ$¿ Ÿ%¿ ŸF¿ Ÿe¿ Ÿ¿ Ÿ≤¿ Ÿ∏¿ Ÿ–¿ Ÿ‘¿ Ÿ’¿ Ÿ·¿ ⁄¿ ⁄¿ ⁄¿ ⁄e¿ ⁄x¿ ⁄ì¿ ⁄º¿ €¿ €*¿ €Z¿ €ã¿ €í¿ €«¿ ‹¿ ‹¿ ‹¿ ‹S¿ ‹W¿ ‹X¿ ‹d¿ ‹õ¿ ‹¥¿ ‹€¿ ‹Ú¿ ›¿ ›4¿ ›F¿ ›X¿ ›x¿ ›è¿ ›µ¿ ›‚¿ ›Ì¿ ›¸¿ ﬁ(¿ ﬁ>¿ ﬁF¿ ﬁS¿ ﬁg¿ ﬁm¿ ﬁq¿ ﬁr¿ ﬁ~¿ ﬁæ¿ ﬁŒ¿ ﬁÈ¿ ﬂ¿ ﬂA¿ ﬂñ¿ ‡)¿ ‡3¿ ‡;¿ ‡N¿ ‡X¿ ‡\¿ ‡^¿ ‡_¿ ‡Å¿ ‡Ö¿ ‡ ¿ ·¿ ·¿ ·M¿ ·k¿ ·o¿ ·©¿ ·È¿ ‚,¿ ‚c¿ ‚~¿ ‚Ñ¿ ‚’¿ „"¿ „r¿ „Ö¿ „ã¿ „‘¿ ‰¿ ‰¿ ‰(¿ ‰;¿ ‰S¿ ‰x¿ ‰y¿ ‰Ö¿ ‰≈¿ ‰∆¿ ‰“¿ Â¿ Â6¿ ÂK¿ Âh¿ Âê¿ Â¶¿ ÂÆ¿ Â¥¿ ÂÍ¿ ÂÓ¿ ÂÔ¿ Â˚¿ Ê2¿ ÊK¿ Êr¿ Êâ¿ ÊØ¿ ÊÀ¿ Ê›¿ Ê˚¿ Á¿ Á$¿ ÁJ¿ Áw¿ ÁÇ¿ Áë¿ ÁΩ¿ Á”¿ Á€¿ ÁË¿ Á¸¿ Ë¿ Ë¿ Ë¿ Ë¿ ËS¿ Ëc¿ Ë~¿ Ë≠¿ Ë÷¿ È¿ ÈR¿ È\¿ Èd¿ Èw¿ ÈÅ¿ ÈÖ¿ Èá¿ Èà¿ ÈÃ¿ È–¿ Í!¿ ÍW¿ Í°¿ ÍÓ¿ Î(¿ ÎE¿ Î_¿ Î~¿ Îò¿ Î∏¿ Î‹¿ ÎÔ¿ Ï%¿ ÏC¿ Ïg¿ Ïå¿ Ï´¿ Ï¬¿ ÏÂ¿ ÏÊ¿ Ì5¿ Ì;¿ Ì\¿ Ìb¿ Ì∞¿ Ìﬁ¿ Ó¿ Ó¿ Ó9¿ Ód¿ ÓÇ¿ Óê¿ Óñ¿ Ó“¿ ÓÍ¿ Ô"¿ ÔJ¿ ÔP¿ Ôf¿ Ôj¿ Ôk¿ ÔÉ¿ Ô¨¿ Ô¬¿ Ô„¿ Ô˛¿ ¿ ,¿ 2¿ L¿ b¿ f¿ g¿ É¿ †¿ ∞¿ À¿ Ê¿ Ò ¿ Ò¿ Ò¿ Ò(¿ Ò>¿ ÒB¿ ÒC¿ ÒO¿ Òñ¿ Ò»¿ ÒÍ¿ ÒÓ¿ ÒÔ¿ Ò˚¿ ÚA¿ Úm¿ Ú™¿ Úﬁ¿ Û¿ Û¿ Û¿ Û¿ Ûi¿ Ûj¿ ÛØ¿ Ûæ¿ Û¬¿ Ù¿ ÙJ¿ Ùt¿ Ùz¿ Ùô¿ Ùü¿ ÙÍ¿ ı2¿ ıF¿ ı^¿ ıo¿ ıò¿ ı∞¿ ı–¿ ıÎ¿ ˆ¿ ˆ6¿ ˆT¿ ˆy¿ ˆØ¿ ˆÕ¿ ˆÒ¿ ˜¿ ˜-¿ ˜.¿ ˜L¿ ˜R¿ ˜°¿ ˜π¿ ˜Ÿ¿ ˜Ï¿ ¯
¿ ¯%¿ ¯?¿ ¯M¿ ¯S¿ ¯g¿ ¯}¿ ¯Å¿ ¯Ç¿ ¯≤¿ ¯∏¿ ˘¿ ˘¿ ˘$¿ ˘o¿ ˘u¿ ˘Ø¿ ˘‚¿ ˙¿ ˙+¿ ˙L¿ ˙Z¿ ˙`¿ ˙{¿ ˙ë¿ ˙ï¿ ˙ñ¿ ˙¢¿ ˙Ω¿ ˙“¿ ˙Ó¿ ˚¿ ˚#¿ ˚s¿ ˚è¿ ˚Ω¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸d¿ ¸Ä¿ ¸ï¿ ¸≤¿ ¸⁄¿ ¸¿ ¸¯¿ ¸˛¿ ˝4¿ ˝8¿ ˝9¿ ˝E¿ ˝|¿ ˝ï¿ ˝©¿ ˝∑¿ ˝Ω¿ ˝æ¿ ˝—¿ ˛¿ ˛:¿ ˛|¿ ˛ö¿ ˛™¿ ˛À¿ ˛Í¿ ˇ¿ ˇ'¿ ˇ;¿ ˇ_¿ ˇå¿ ˇª¿ ˇ»¿ ˇ“¿ ˇ¿ ˇ¯¿ ¿ ¿ ¿ @¿ l¿ µ¿ ¿?¿~¿ï¿π¿‘¿›¿ˆ¿¿&¿9¿V¿_¿e¿±¿À¿„¿¯¿¿ ¿&¿I¿a¿o¿â¿ó¿»¿Â¿!¿p¿ø¿¿@¿J¿p¿y¿£¿≈¿Ã¿Õ¿›¿¿¿$¿(¿)¿5¿{¿ß¿Î¿A¿E¿G¿H¿ç¿ë¿’¿Ÿ¿Á¿Î¿7¿G¿ä¿±¿∑¿¿ˆ¿	D¿	~¿	ñ¿	ß¿	◊¿	Ô¿

¿
$¿
U¿
u¿
´¿
…¿
Ì¿
Ó¿
˙¿:¿;¿G¿è¿´¿¿¿›¿¿¿#¿)¿_¿c¿d¿p¿ß¿¿¿‘¿‚¿Ë¿È¿¸¿)¿[¿y¿â¿™¿…¿Ï¿¿¿<¿i¿ò¿•¿Ø¿Õ¿’¿Ë¿Ú¿Û¿¿I¿í¿›¿¿[¿r¿ñ¿±¿∫¿”¿Á¿¸¿¿,¿5¿;¿á¿°¿∏¿Ã¿Î¿Ù¿˙¿¿4¿B¿\¿j¿õ¿∏¿Ù¿C¿í¿÷¿¿¿C¿L¿u¿ó¿û¿ü¿Ø¿Ÿ¿Ï¿ˆ¿˙¿˚¿¿M¿y¿Ã¿–¿“¿”¿¯¿¿F¿T¿U¿é¿ú¿û¿ü¿‚¿¿3¿9¿á¿∆¿Ã¿¿F¿]¿Å¿¬¿¿¿<¿]¿É¿§¿¡¿Ë¿˝¿˛¿¿¿7¿=¿_¿ã¿•¿ ¿Â¿¿¿¿2¿G¿`¿v¿z¿{¿∆¿ˆ¿¿A¿\¿z¿à¿é¿•¿ª¿ø¿¿¿¿O¿i¿o¿≤¿¯¿2¿W¿á¿¢¿≈¿”¿Ÿ¿ı¿¿¿¿¿.¿G¿\¿p¿µ¿˛¿ J¿ ñ¿ —¿ Á¿ Î¿ Ï¿ ¯¿!¿!z¿!~¿!¿!ã¿!¬¿!‚¿"¿"B¿"ô¿"Œ¿"È¿"˚¿#3¿#H¿#T¿#ò¿#™¿#È¿$#¿$ã¿$©¿%¿%e¿%¬¿%—¿&K¿&¿¿&Œ¿&ÿ¿&Ì¿&˘¿'¿'?¿'G¿'M¿'o¿'§¿'Ë¿(
¿(.¿(6¿(<¿(@¿(A¿(M¿(í¿(Ω¿)¿)a¿)e¿)g¿)h¿)†¿)œ¿*¿*¿*?¿*S¿*s¿*á¿*©¿*À¿*Ó¿+¿+&¿+H¿+^¿+~¿+û¿+∆¿+Ó¿,¿,¿,¿,]¿,ï¿,õ¿,Í¿--¿-N¿-a¿-¿-õ¿-©¿-Ø¿-ƒ¿-⁄¿-˙¿-˛¿-ˇ¿.C¿.I¿.ï¿.ﬂ¿.Â¿/5¿/u¿/≈¿0¿0S¿0§¿0÷¿0˜¿1#¿1B¿1P¿1V¿1n¿1Ñ¿1§¿1®¿1©¿1Â¿1Î¿2:¿2r¿2®¿2…¿2ı¿3¿3&¿3,¿3H¿3^¿3~¿3Ç¿3É¿3è¿3›¿3ﬁ¿4+¿4t¿4ó¿4ù¿4Ì¿5>¿5X¿5Y¿5p¿5ø¿5ﬁ¿5‰¿60¿6¿6§¿6Ó¿7	¿7(¿76¿7<¿7b¿7x¿7ò¿7ú¿7ù¿7Ô¿7ı¿85¿8k¿8å¿8∏¿8€¿8È¿8Ô¿9+¿9G¿9¿9ß¿9≠¿9√¿9«¿9»¿9˘¿:¿:/¿:E¿:e¿:i¿:j¿:≠¿:Œ¿:¿;¿;&¿;*¿;+¿;n¿;è¿;±¿;«¿;Á¿;Î¿;Ï¿</¿<P¿<r¿<à¿<®¿<¨¿<≠¿<Ô¿=0¿=T¿=j¿=ä¿=é¿=è¿=æ¿=Ò¿>¿>'¿>G¿>K¿>L¿>q¿>Ω¿>ı¿?¿?¿?C¿?^¿?ê¿?ñ¿?Ø¿?‘¿@¿@C¿@I¿@k¿@ê¿@À¿@—¿@Ï¿A ¿A&¿A9¿A=¿A>¿AJ¿Aí¿A…¿B¿BD¿B^¿Bñ¿Bö¿Bõ¿Bß¿B˜¿C6¿C_¿C†¿C∫¿Cˆ¿D8¿DA¿DH¿DL¿DM¿DY¿Dê¿D©¿Dﬂ¿E¿EO¿Er¿E«¿F¿FA¿Fl¿FÜ¿Fö¿F¶¿Fœ¿FÌ¿G¿G¿G1¿GÇ¿Gè¿G†¿G÷¿GÓ¿G¯¿H¿Hg¿H´¿HË¿I¿I7¿IB¿Ik¿I∂¿I‚¿IÛ¿J,¿J6¿Jn¿JÇ¿J∞¿J«¿J’¿J›¿J„¿JÁ¿JË¿JÙ¿K5¿Kc¿Kg¿Kh¿Kt¿Kπ¿K‰¿L+¿Ln¿L¬¿M'¿M~¿MÇ¿MÑ¿MÖ¿M ¿M˘¿N-¿N3¿No¿NÉ¿N§¿Nÿ¿N˙¿O¿O3¿OO¿Oq¿Oñ¿O©¿O»¿OÔ¿P¿P)¿P*¿PK¿PL¿P`¿PÜ¿Pî¿Pö¿P’¿PŸ¿P⁄¿P˘¿Q¿Q.¿Q2¿Q3¿QZ¿Qm¿Qä¿Qü¿Q∫¿Q”¿QÎ¿R¿R$¿R<¿RR¿RX¿R\¿R]¿R•¿Rø¿RŒ¿RË¿S¿S¿S*¿S0¿SQ¿Sc¿S•¿Sæ¿SÀ¿S‰¿S¸¿T¿T¿T¿T@¿TF¿Tñ¿TÁ¿U¿U¿U\¿UÑ¿Uµ¿U’¿V ¿V¿V:¿VH¿VN¿Vf¿V}¿Vò¿Vú¿Vù¿VŸ¿Vﬂ¿W.¿Wf¿Wú¿WΩ¿WÈ¿X¿X¿X ¿X<¿XS¿Xn¿Xr¿Xs¿X¥¿Xµ¿X¡¿X˜¿Y¿YZ¿Y[¿Yß¿Yı¿ZA¿Zb¿Zá¿Zô¿Z˙¿[¿['¿[<¿[H¿[f¿[í¿[“¿[ﬁ¿[¯¿\ ¿\¿\¿\5¿\|¿\Ó¿])¿]F¿]a¿]{¿]ö¿]∏¿]“¿^(¿^0¿^=¿^`¿^f¿^j¿^k¿^w¿^ê¿^©¿^Ï¿_¿_ ¿_g¿_€¿`¿`'¿`D¿`_¿`y¿`ò¿`∂¿`–¿a(¿a9¿aA¿aZ¿ag¿aä¿aê¿aî¿aï¿a±¿a»¿a…¿aˇ¿b¿b:¿bd¿bÜ¿bß¿b¬¿b‰¿c¿c¿c;¿cA¿cE¿cF¿ca¿cÄ¿có¿cõ¿cú¿c∏¿c÷¿c‰¿cÍ¿cÎ¿d¿d&¿dM¿dZ¿dl¿dñ¿d⁄¿e$¿ep¿e”¿f;¿f¢¿f‘¿g1¿gV¿gé¿gŸ¿gﬂ¿g„¿g‰¿h9¿hÑ¿h£¿h«¿h·¿hÒ¿i¿i¿ih¿iq¿i~¿i∞¿i∂¿i«¿iÀ¿iÃ¿iÿ¿j¿jO¿j]¿jc¿j{¿jñ¿j“¿jˆ¿k¿k ¿k<¿k^¿k©¿kÕ¿k÷¿k„¿l¿l"¿l&¿l'¿l3¿lÉ¿lΩ¿l—¿l◊¿lÔ¿m¿m5¿mO¿mã¿mÕ¿m÷¿m›¿m·¿m‚¿mÓ¿n¿n6¿ng¿nk¿nl¿nx¿nπ¿nÿ¿nÛ¿o ¿o¿oA¿oG¿oK¿oL¿oX¿où¿o»¿o˛¿pR¿p∑¿pª¿pΩ¿pæ¿q¿q¿qV¿qü¿q÷¿q⁄¿r¿rd¿rw¿r≤¿rˆ¿r¸¿s/¿sO¿sp¿sì¿s©¿sÕ¿s¿t¿t¿tO¿tU¿t§¿t›¿u¿u¿u@¿u[¿u|¿uä¿uê¿u™¿u¿¿u‡¿u‰¿uÂ¿uÒ¿v9¿v|¿vπ¿v˜¿w¿wI¿wM¿wN¿wõ¿w‰¿x¿x¿x]¿xÆ¿x»¿x…¿x’¿y%¿yD¿yj¿yä¿yÿ¿yÍ¿z¿z@¿zÇ¿zã¿zí¿zñ¿zó¿z£¿z⁄¿z˘¿{¿{5¿{f¿{ò¿{¢¿{®¿{¨¿{≠¿{π¿{˙¿|¿|6¿|Z¿|a¿|e¿|f¿|r¿|∑¿|‚¿}/¿}Ü¿}ä¿}å¿}ç¿}«¿}À¿}ˇ¿~I¿~J¿~Ñ¿~à¿~º¿¿¿?¿C¿w¿Ω¿æ¿˙¿˛¿Ä2¿ÄÄ¿ÄÅ¿Ä√¿Ä«¿Ä˚¿ÅU¿ÅV¿Åô¿Åù¿Å—¿Ç-¿Ç.¿Çn¿Çr¿Ç¶¿Ç¸¿Ç˝¿É9¿É=¿Éq¿Éø¿É¿¿É˙¿É˛¿ÑF¿Ñí¿Ññ¿ÑÊ¿Ö,¿ÖW¿Ö[¿Öõ¿Öü¿ÖÓ¿Ü6¿Ü¿ÜÖ¿Üœ¿ÜÈ¿á¿á¿á/¿áH¿áb¿áÇ¿á£¿á¡¿á€¿áÔ¿à ¿à¿à¿àQ¿à¢¿à≤¿à›¿àﬁ¿â.¿âY¿âZ¿â®¿â«¿âÓ¿âÔ¿ä=¿äj¿äk¿äª¿äÎ¿ã¿ã¿ã`¿ãõ¿ãú¿ã≈¿å¿å¿å*¿åa¿åb¿åû¿åÕ¿åŒ¿å⁄¿ç¿ç5¿ç9¿ç:¿çF¿çÉ¿çØ¿ç‘¿ç˝¿é¿é(¿éQ¿éW¿éz¿é°¿éß¿éÕ¿é˜¿é˝¿è$¿èO¿èU¿èÇ¿è≥¿èπ¿èÁ¿ê¿ê¿êJ¿êy¿ê¿ê¶¿ê—¿ê◊¿ê€¿ê‹¿êË¿ë-¿ëX¿ëÑ¿ëó¿ë≤¿ë—¿ë¿í¿í,¿íO¿í~¿íØ¿í⁄¿í˝¿ì¿ì¿ì'¿ì+¿ì-¿ì.¿ì|¿ìÄ¿ìÃ¿î¿î7¿î;¿îä¿î⁄¿î˚¿îˇ¿ïB¿ïF¿ïò¿ïú¿ï™¿ïÆ¿ï¿ñ¿ñr¿ñª¿ñ¡¿ó¿ó\¿ó}¿óì¿ó•¿ó∑¿ó»¿óÙ¿ò¿ò2¿òC¿òÇ¿ò°¿ò¿¿òŸ¿ô¿ô'¿ôj¿ôk¿ôw¿ôø¿ö ¿ö¿ö¿ö¿öN¿öz¿ö≥¿ö—¿ö◊¿ö€¿ö‹¿õ-¿õ~¿õô¿õü¿õË¿ú0¿úx¿ú≥¿úπ¿ù
¿ùU¿ùz¿ùÄ¿ùù¿ùª¿ùÀ¿ùÊ¿û¿û¿ûf¿û~¿ûÑ¿ûà¿ûâ¿û±¿û∑¿û¿ü$¿üT¿üö¿ü∫¿ü’¿†"¿†:¿†@¿†D¿†E¿†Q¿†w¿†x¿†√¿†⁄¿†‡¿°$¿°J¿°K¿°W¿°{¿°|¿°à¿°≠¿°ƒ¿°Ê¿¢¿¢¿¢]¿¢ö¿¢≤¿¢∏¿¢º¿¢Ω¿¢…¿£¿£!¿£"¿£.¿£S¿£l¿£é¿£í¿£ì¿£ü¿£±¿£¸¿§W¿§¿§¢¿§∂¿§∫¿§ª¿§«¿•¿•"¿•&¿•'¿•3¿•x¿•£¿•œ¿•‚¿•˝¿¶¿¶1¿¶I¿¶R¿¶k¿¶s¿¶‹¿ß1¿ß¡¿ß≈¿ß«¿ß»¿ß˚¿ßˇ¿®K¿®ó¿®‰¿©0¿©~¿©œ¿©Í¿©Ó¿™=¿™ã¿™‹¿´+¿´v¿´∆¿¨¿¨W¿¨[¿¨°¿¨Ó¿≠:¿≠â¿≠–¿Æ¿ÆR¿ÆÉ¿Æ¡¿Æ¬¿ÆŒ¿ÆÙ¿Æı¿Ø?¿ØO¿ØU¿Ø•¿Ø·¿ØÁ¿∞8¿∞f¿∞l¿∞∫¿∞Û¿±B¿±ë¿±≥¿±π¿±œ¿±’¿≤¿≤>¿≤D¿≤R¿≤¿≤£¿≤©¿≤ª¿≤Ù¿≤¸¿≥¿≥5¿≥`¿≥f¿≥ë¿¥
¿¥E¿¥¢¿¥Á¿µ¿µ¿µ¿µ$¿µQ¿µs¿µè¿µ™¿µÀ¿µÛ¿∂G¿∂X¿∂g¿∂t¿∂~¿∂Ü¿∂ê¿∂¢¿∂®¿∂∏¿∂æ¿∑¿∑S¿∑ç¿∑´¿∑Ê¿∏2¿∏6¿∏7¿∏á¿∏÷¿π$¿πo¿πu¿π¬¿πŒ¿π‘¿∫"¿∫o¿∫Ñ¿∫≈¿∫Í¿∫Î¿ª:¿ªà¿ª‘¿º!¿ºi¿ºü¿º•¿ºÚ¿º˛¿Ω¿ΩU¿Ω†¿Ω∏¿Ω˚¿æ!¿æ"¿æn¿æÑ¿æä¿æ’¿æÚ¿ø¿ø'¿øM¿ø`¿øj¿øn¿øo¿ø{¿ø‚¿øÚ¿¿¿¿G¿¿V¿¿¿¿á¿¿ö¿¿§¿¿®¿¿©¿¿µ¿¿˙¿¡%¿¡D¿¡T¿¡q¿¡∏¿¬!¿¬0¿¬§¿¬ƒ¿√¿√d¿√â¿√Ò¿ƒ¿ƒd¿ƒä¿≈'¿≈L¿≈∂¿≈Î¿∆L¿∆]¿∆¡¿∆À¿«f¿«ß¿«Ø¿«¬¿«Ã¿«Â¿»R¿»X¿»\¿»^¿»_¿»ô¿»ù¿»Ï¿…;¿…å¿…µ¿…π¿  ¿ @¿ Ç¿ Ü¿ î¿ ò¿ Ê¿À¿ÀG¿Àá¿Àç¿À›¿Ã+¿ÃC¿ÃY¿Ãs¿Ãê¿Ã≠¿Ã‹¿ÃÚ¿Õ¿Õ¿Õ¿ÕV¿Õ\¿Õ≠¿Õ˙¿Œ¿Œ.¿ŒK¿Œf¿ŒÑ¿Œí¿Œò¿ŒØ¿ŒÌ¿œ¿œ¿œ¿œ¿œz¿œÄ¿œ∞¿œ∂¿–¿–:¿–V¿–}¿–§¿–≤¿–∏¿–¯¿—¿—T¿—v¿—|¿—Ä¿—Å¿— ¿—À¿—◊¿“¿“b¿“f¿“g¿“Æ¿“Í¿”¿”¿”_¿”ò¿”Ø¿”µ¿”π¿”∫¿”∆¿‘¿‘6¿‘{¿‘è¿‘∞¿‘Õ¿‘Ú¿’U¿’^¿’e¿’i¿’k¿’l¿’º¿÷¿÷#¿÷Q¿÷z¿÷ç¿÷ß¿÷Ω¿÷ﬁ¿÷˚¿◊¿◊¿◊N¿◊T¿◊ü¿◊¿ÿ¿ÿ#¿ÿ`¿ÿÇ¿ÿî¿ÿ±¿ÿÃ¿ÿÍ¿ÿ¯¿ÿ˛¿Ÿ¿ŸB¿ŸF¿ŸG¿ŸS¿ŸÜ¿Ÿö¿Ÿ¨¿Ÿ≤¿ŸÂ¿ŸÈ¿ŸÍ¿Ÿˆ¿⁄)¿⁄=¿⁄O¿⁄U¿⁄à¿⁄å¿⁄ç¿⁄ô¿⁄Ã¿⁄‡¿⁄Ú¿⁄¯¿€+¿€/¿€0¿€<¿€o¿€É¿€ï¿€õ¿€Œ¿€“¿€”¿€ﬂ¿‹"¿‹6¿‹I¿‹O¿‹ã¿‹è¿‹ê¿‹ú¿‹¬¿‹√¿‹œ¿›¿›¿›<¿›B¿›r¿›v¿›w¿›É¿›ú¿›≤¿›Õ¿›—¿›“¿›ﬁ¿›˜¿ﬁ¿ﬁ-¿ﬁ:¿ﬁW¿ﬁ]¿ﬁa¿ﬁb¿ﬁn¿ﬁ∂¿ﬁ˘¿ﬁ˝¿ﬁ˛¿ﬂ
¿ﬂ0¿ﬂR¿ﬂh¿ﬂl¿ﬂm¿ﬂy¿ﬂ∞¿ﬂƒ¿ﬂ“¿ﬂÿ¿ﬂ˙¿ﬂ˛¿ﬂˇ¿‡¿‡K¿‡_¿‡m¿‡s¿‡°¿‡•¿‡¶¿‡≤¿‡˜¿·"¿·g¿·k¿·l¿·x¿·™¿·√¿·Â¿·Î¿‚	¿‚)¿‚@¿‚ó¿‚†¿‚ß¿‚´¿‚≠¿‚Æ¿‚Ï¿‚¿„;¿„á¿„ÿ¿‰%¿‰M¿‰Q¿‰_¿‰c¿‰≠¿‰˜¿Â*¿Âr¿Âx¿Â©¿Â¡¿Â◊¿ÂÚ¿Ê¿Ê1¿ÊP¿Ê¿Êî¿Êï¿Ê€¿Ê·¿Á,¿Á{¿Áã¿ÁØ¿Á¬¿Á‡¿Áˇ¿Ë¿Ë¿Ë+¿ËP¿Ër¿Ëx¿Ë|¿Ë}¿Ë›¿Ë„¿È¿È¿Èi¿Èû¿È∫¿È·¿Í¿Í¿Í¿Í\¿Í|¿Í∏¿Í⁄¿Í‡¿Í‰¿ÍÂ¿Î/¿Î0¿Î<¿ÎÑ¿Îô¿Îª¿Î¿ÎÙ¿Îı¿Ï¿ÏA¿Ïz¿Ïë¿Ïó¿Ïõ¿Ïú¿Ï®¿ÏÌ¿Ì¿Ì_¿Ìs¿Ìî¿Ì±¿Ì÷¿Ó9¿ÓB¿ÓI¿ÓM¿ÓO¿ÓP¿Ó¿ÓÉ¿Ó‘¿Ô%¿Ôp¿Ôï¿Ô÷¿¿¿`¿s¿Ü¿ö¿´¿±¿≤¿Â¿˘¿˙¿Ò¿ÒK¿Òv¿Òæ¿Ò¬¿Òƒ¿Ò≈¿Ú¿Ú(¿Úx¿Ú√¿Ú…¿Û¿Û/¿Û@¿Û_¿Ûä¿Û¡¿Ûˆ¿Ù¿Ù'¿ÙL¿Ùc¿ÙÜ¿Ùø¿ÙÙ¿Ùı¿ıD¿ın¿ıt¿ı¬¿ˆ¿ˆ0¿ˆ6¿ˆz¿ˆ ¿˜¿˜c¿˜Æ¿˜Ã¿¯¿¯.¿¯`¿¯ú¿¯™¿¯∞¿¯À¿¯Î¿¯Ô¿¯¿˘&¿˘Q¿˘o¿˘ò¿˘≥¿˘¡¿˘«¿˘Û¿˙¿˙0¿˙R¿˙X¿˙\¿˙]¿˙∞¿˙Ì¿˚¿˚L¿˚m¿˚{¿˚Å¿˚≥¿˚Õ¿˚ˆ¿¸¿¸¿¸"¿¸#¿¸c¿¸∑¿¸Ì¿˝.¿˝Z¿˝h¿˝n¿˝´¿˝–¿˝˘¿˛¿˛!¿˛%¿˛&¿˛U¿˛•¿˛Ÿ¿ˇ¿ˇB¿ˇP¿ˇV¿ˇë¿ˇ¥¿ˇ›¿ˇˇ¿ ¿ 	¿ 
¿ M¿ î¿ ‘¿¿)¿@¿A¿M¿î¿∆¿«¿¿#¿)¿u¿ù¿£¿Õ¿¿B¿J¿Ç¿º¿ƒ¿ ¿Ú¿(¿^¿f¿û¿ÿ¿‡¿Ê¿Í¿Î¿¿^¿b¿c¿â¿≥¿Ò¿"¿h¿©¿≥¿π¿Ω¿æ¿Â¿¿L¿}¿√¿¿¿¿¿¿=¿e¿§¿”¿	¿	Z¿	d¿	j¿	n¿	o¿	ï¿	Ω¿	˚¿
*¿
p¿
±¿
ª¿
¡¿
≈¿
∆¿
“¿¿B¿n¿é¿ª¿˙¿5¿<¿X¿v¿|¿¿¿ƒ¿∆¿«¿¿>¿Å¿á¿∏¿æ¿)¿H¿^¿ã¿ß¿Ã¿Ô¿¿4¿T¿Ü¿¥¿‹¿˛¿¿?¿C¿D¿í¿«¿Í¿¿3¿S¿a¿g¿Ä¿™¿ ¿Œ¿œ¿¿Y¿ã¿ë¿Â¿4¿P¿t¿á¿•¿¿¿ﬁ¿Ï¿Ú¿
¿*¿.¿/¿|¿ø¿≈¿¿e¿z¿≈¿	¿-¿3¿h¿∏¿Ï¿"¿>¿e¿Ä¿®¿∂¿º¿›¿˝¿¿¿N¿i¿o¿ª¿	¿Q¿É¿ù¿¬¿›¿¿¿¿6¿V¿Z¿[¿ó¿–¿	¿T¿ü¿÷¿⁄¿€¿&¿J¿ë¿ï¿ñ¿·¿¿L¿P¿Q¿â¿¨¿Ÿ¿ˇ¿¿J¿N¿O¿á¿™¿‹¿¿¿M¿Q¿R¿ú¿ø¿ ¿ ¿ 	¿ /¿ U¿ Ñ¿ ≥¿ ÿ¿ Ÿ¿!)¿!6¿!<¿!Ç¿!Æ¿!€¿"¿"W¿"ç¿"Æ¿"⁄¿"¸¿#
¿#¿#,¿#L¿#P¿#Q¿#]¿#ù¿#π¿#«¿#Õ¿#˚¿#ˇ¿$ ¿$¿$S¿$Ö¿$∞¿$‰¿$¿%Y¿%°¿%®¿%¥¿%ˇ¿&H¿&O¿&P¿&w¿&•¿&´¿&“¿' ¿'¿'-¿'[¿'a¿'â¿'∫¿'¿¿'Ê¿(¿(¿(=¿(f¿(l¿(í¿(ø¿(≈¿(¿)'¿)-¿)S¿)Ä¿)Ü¿)Ø¿)‚¿)Ë¿*¿*A¿*G¿*p¿*£¿*©¿*–¿*ˇ¿+¿+=¿+é¿+î¿+º¿+Ì¿+Û¿,¿,O¿,U¿,{¿,®¿,Æ¿,”¿,˛¿-¿-(¿-Z¿-`¿-Ñ¿-∂¿-º¿-È¿.-¿.3¿.`¿.§¿.™¿.Õ¿.˝¿/¿/*¿/W¿/]¿/≥¿/Î¿/Ò¿0¿0Q¿0W¿0Å¿0¥¿0∫¿0‰¿1¿1¿1K¿1Ö¿1ã¿1Ω¿1ˇ¿2¿2&¿2R¿2X¿2¿2´¿2±¿2ﬂ¿3¿3"¿3o¿3æ¿4 ¿4%¿4G¿4M¿4x¿4¶¿4¨¿4’¿4ˇ¿5¿51¿5a¿5g¿5î¿5∆¿5Ã¿5ˆ¿6"¿6(¿6T¿6Ñ¿6ä¿6¥¿6‡¿6Ê¿7¿7<¿7B¿7h¿7å¿7í¿7∑¿7Ÿ¿7ﬂ¿8¿8,¿82¿8p¿8ƒ¿8 ¿9	¿9_¿9e¿9û¿9Ë¿9Ó¿:(¿:t¿:z¿:®¿:‹¿:‚¿;¿;5¿;;¿;v¿;ƒ¿; ¿<¿<S¿<Y¿<è¿<⁄¿<‡¿<‰¿<Â¿<¸¿=¿=¿= ¿==¿=b¿=f¿=g¿=Ç¿=•¿=©¿=™¿=»¿=Ó¿=Ú¿=Û¿>¿>9¿>=¿>>¿>Z¿>~¿>Ç¿>É¿>°¿>«¿>À¿>Ã¿>Ë¿?¿?¿?¿?-¿?Q¿?U¿?V¿?n¿?é¿?í¿?ì¿?™¿?…¿?Õ¿?Œ¿?Á¿@¿@¿@¿@Q¿@ò¿@ú¿@ù¿@‚¿A*¿A.¿A/¿An¿A∞¿A¥¿Aµ¿Aı¿B8¿B<¿B=¿Bt¿B•¿B©¿B™¿B–¿B˜¿B˚¿B¸¿C)¿C^¿Cb¿Cc¿Cê¿C≈¿C…¿CÀ¿CÃ¿D¿D7¿D;¿Dä¿Dæ¿DÚ¿EA¿EN¿Eg¿E}¿Eó¿E¥¿E…¿E ¿F¿Fg¿Fâ¿Fõ¿F∏¿F”¿FÒ¿Fˇ¿G¿G¿G<¿G@¿GA¿GM¿Gî¿G∆¿H	¿H¿H¿H¿H_¿Hä¿Hœ¿H”¿H’¿H÷¿I¿I\¿Ip¿It¿Iª¿J¿J4¿Jh¿J∂¿JÛ¿JÙ¿K ¿KG¿Ky¿KÑ¿K¶¿K÷¿K⁄¿K‹¿K›¿L¿L¿Lb¿L~¿LÇ¿L…¿M¿M:¿MÉ¿Mû¿M¥¿Mœ¿MÓ¿N¿N$¿N(¿N)¿Nn¿Ní¿N•¿N√¿Nﬁ¿N˝¿O¿O¿O)¿OI¿OM¿ON¿OZ¿Oö¿OØ¿OΩ¿O√¿OÒ¿Oı¿Oˆ¿P¿PG¿Pr¿Pπ¿PΩ¿Pø¿P¿¿P˝¿Q¿QK¿Qî¿Q∆¿Q¿QÙ¿R¿R¿RI¿R¿Rœ¿RÍ¿S ¿S¿S6¿SM¿Sb¿Sc¿Sñ¿S±¿Sø¿Sÿ¿SÚ¿T ¿T¿T¿T:¿T>¿T?¿TK¿Tí¿Tƒ¿TÊ¿TÍ¿TÎ¿T˜¿U<¿Ug¿U•¿U©¿U´¿U¨¿U‡¿U‰¿UÚ¿Uˆ¿V4¿Vu¿V¶¿Vﬂ¿VÂ¿W¿W¿W;¿WQ¿Wn¿WÉ¿Wò¿Wô¿WÁ¿X¿X¿XX¿Xñ¿Xµ¿X»¿XÊ¿Y¿Y¿Y)¿Y/¿YL¿Y_¿YÜ¿Y¥¿Y∫¿Y–¿Y‘¿Y’¿Y·¿Z¿Z¿Z[¿Z©¿ZÎ¿[¿[	¿[¿[.¿[I¿[i¿[Ö¿[â¿[ä¿[ñ¿[Õ¿[Ê¿\¿\*¿\g¿\y¿\è¿\™¿\∞¿\È¿\˘¿]#¿]6¿]@¿]D¿]E¿]Q¿]ñ¿]¡¿^¿^¿^	¿^
¿^X¿^ã¿^è¿^€¿^ﬂ¿_*¿_{¿_è¿_ì¿_°¿_•¿_Â¿`(¿`[¿`ñ¿`ú¿`÷¿`Ó¿a¿a-¿aN¿a~¿a∞¿a∆¿a„¿b¿b+¿b@¿bm¿bÜ¿b´¿b‘¿bÈ¿bÍ¿c0¿cf¿cÖ¿cò¿c∂¿c—¿cÎ¿c˘¿cˇ¿d¿d(¿d,¿d-¿dq¿dØ¿dµ¿e¿eH¿eN¿eü¿eÓ¿f"¿fT¿fn¿fì¿fÆ¿f‘¿f‚¿fË¿g¿g¿g!¿g"¿go¿gô¿gπ¿gÀ¿gË¿h¿h¿h-¿h3¿hH¿h^¿hb¿hc¿h≤¿hÀ¿h—¿i¿i[¿i™¿iÏ¿j;¿j|¿jæ¿jÁ¿j¸¿k¿k)¿kX¿ks¿kô¿k¥¿k÷¿k‰¿kÍ¿l¿l¿l¿l ¿ll¿l¶¿l¨¿lÓ¿lÙ¿m¿mN¿mk¿mì¿mÆ¿m“¿m‡¿mÊ¿n¿n¿n¿n¿n*¿n<¿nN¿nb¿nf¿ng¿ns¿nû¿nü¿n’¿n·¿o¿o¿oo¿ou¿o≈¿oˆ¿pE¿p_¿pÅ¿pΩ¿p¡¿p¬¿pŒ¿q¿qW¿qã¿qü¿q•¿q‡¿r¿r[¿ru¿r≠¿r±¿r≤¿ræ¿s¿s7¿s_¿sy¿sµ¿s˜¿t ¿t¿t¿t¿t¿tO¿t}¿tâ¿tÊ¿u;¿uÜ¿u±¿u∏¿uÙ¿v¿vc¿vâ¿v¢¿vø¿v”¿vˇ¿w,¿wL¿wU¿wb¿wn¿wÖ¿w≥¿w‚¿x¿x¿x"¿x0¿xC¿xV¿xÉ¿x·¿y¿y#¿y<¿yU¿y^¿ye¿yu¿yü¿y≤¿yº¿y¿¿y¡¿yÕ¿z¿z=¿zA¿zB¿zN¿zì¿zæ¿{ ¿{U¿{ò¿{Ú¿{ˆ¿{¯¿{˘¿|H¿|L¿|Z¿|^¿|¢¿|Á¿}.¿}/¿}v¿}à¿}é¿}€¿~¿~¿~B¿~\¿~r¿~ã¿~°¿~ø¿~›¿~Ù¿¿ ¿!¿Z¿s¿¿ö¿∏¿∆¿Ã¿„¿˘¿˝¿˛¿ÄR¿Än¿Ä}¿Äó¿Ä≤¿Ä¿¿Ä∆¿Ä⁄¿Ä¿ÄÙ¿Äı¿Å¿Å-¿Å.¿Å:¿Åq¿ÅÀ¿Ç¿Ç¿Ç<¿Ça¿Çh¿Çõ¿Çü¿Ç°    
Ä•Ä∫ÄºÄ‰ÄÁ  Å  Å:  Åb  Åã  Å¥  Å«  Å‹  Å˘  ÇÇ7Çö )ÇùÑÅÖñÇÚ/// A base class for render boxes that resemble their children.
///
/// A proxy box has a single child and simply mimics all the properties of that
/// child by calling through to the child for each function in the render box
/// protocol. For example, a proxy box determines its size by asking its child
/// to layout with the same constraints and then matching the size.
///
/// A proxy box isn't useful on its own because you might as well just replace
/// the proxy box with its child. However, RenderProxyBox is a useful base class
/// for render objects that wish to mimic most, but not all, of the properties
/// of their child.
///
/// See also:
///
///  * [RenderProxySliver], a base class for render slivers that resemble their
///    children. ÜÅ Ü‹ÜÍÄÀ/// Creates a proxy render box.
///
/// Proxy render boxes are rarely created directly because they simply proxy
/// the render box protocol to [child]. Instead, consider using one of the
/// subclasses.ÜÏÜ¯       ì∞Ñ™îX/// A RenderProxyBox subclass that allows you to customize the
/// hit-testing behavior. îUÄ˝ î“îÛv/// Initializes member variables for subclasses.
///
/// By default, the [behavior] is [HitTestBehavior.deferToChild].î˙,ï   ï,ï8  ï
ïïïEïJïPïKïV@ïé%/// How to behave during hit testing.  ïõÅáï¨  ï¥ï∆  ïœï‡  ïõïúó&Tó7  óCóK  ó&ó'ó~Ä⁄óè  ó£&ó¿  ó~ó ò\ëöFÅ„/// Imposes additional constraints on its child.
///
/// A render constrained box proxies most functions in the render box protocol
/// to its child, except that when laying out its child, it tightens the
/// constraints provided by its parent by enforcing the [additionalConstraints]
/// as well.
///
/// For example, if you wanted [child] to have a minimum height of 50.0 logical
/// pixels, you could use `const BoxConstraints(minHeight: 50.0)` as the
/// [additionalConstraints]. övÅü õõÄÑ/// Creates a render box that constrains its child.
///
/// The [additionalConstraints] argument must not be null and must be valid.õõ(  õ2-õK  õhõnõåõÖõoõàõñõúõ«õùõ≤õ≥õ≈õ∆õËõ—õÍúúúúúü%úÆ  úÄÉúl=/// Additional constraints to apply to [child] during layout.   ú»ÄÚúÃ  ú‚úÚ   ùæÅ≤ù—  ùÍùÚ  ùæùøütÅ≤üá  ü†ü®  ütüu°*Åª°=  °W°_  °*°+¢ÈÅª¢¸  ££  ¢È¢Í§®ÅL§π   §®§©•¯Å¶	  ¶¶*  •¯•˘ß	Åtß  ß)ß:  ßBßJ  ß	ß
®ÅÄÊ®í  ®¶&®√  ®Å®Ç ©kå¢´·Ço/// Constrains the child's [BoxConstraints.maxWidth] and
/// [BoxConstraints.maxHeight] if they're otherwise unconstrained.
///
/// This has the effect of giving the child a natural dimension in unbounded
/// environments. For example, by providing a [maxHeight] to a widget that
/// normally tries to be as big as possible, the widget will normally size
/// itself to fit its parent, but when placed in a vertical list, it will take
/// on the given height.
///
/// This is useful when composing widgets that normally try to match their
/// parents' size, so that they behave reasonably in lists (which are
/// unbounded). ¨Ç ¨Ù≠Ä‹/// Creates a render box that imposes a maximum width or maximum height on its
/// child if the child is otherwise unconstrained.
///
/// The [maxWidth] and [maxHeight] arguments not be null and must be
/// non-negative.≠≠  ≠!!≠)  ≠H"≠P  $≠3≠9≠:≠[≠a≠b≠s≠y≠ù≠ã≠É≠z≠Ü≠ó≠é≠ö≠ß≠≠≠”≠¿≠∏≠Æ≠ª≠Õ≠√≠–≠Á≠›≠ÈÆ≠˙ÆÆÆÆ$ÆÆ£Æ™  Ø„ØÍ  Æ*vÆäR/// The value to use for maxWidth if the incoming maxWidth constraint is infinite.   Æ∑Ä´Æª  ÆƒÆÃ   ØfzØ»T/// The value to use for maxHeight if the incoming maxHeight constraint is infinite.   Ø¯ÄÆØ¸  ∞∞   ∞™Åç∞π  ∞À∞€   ≤;ÅC≤@  ≤N#≤g  ≤s"≤ã   ≥ÇÄ∏≥ì  ≥§≥¥  ≥Ç≥É¥>Äò¥O   ¥>¥?¥⁄Å1¥Î  ¥ˇ&µ  ¥⁄¥€ ∂ñ”ºëÜ{/// Attempts to size the child to a specific aspect ratio.
///
/// The render object first tries the largest width permitted by the layout
/// constraints. The height of the render object is determined by applying the
/// given aspect ratio to the width, expressed as a ratio of width to height.
///
/// For example, a 16:9 width:height aspect ratio would have a value of
/// 16.0/9.0. If the maximum width is infinite, the initial width is determined
/// by applying the aspect ratio to the maximum height.
///
/// Now consider a second example, this time with an aspect ratio of 2.0 and
/// layout constraints that require the width to be between 0.0 and 100.0 and
/// the height to be between 0.0 and 100.0. We'll select a width of 100.0 (the
/// biggest allowed) and a height of 50.0 (to match the aspect ratio).
///
/// In that same situation, if the aspect ratio is 0.5, we'll also select a
/// width of 100.0 (still the biggest allowed) and we'll attempt to use a height
/// of 200.0. Unfortunately, that violates the constraints because the child can
/// be at most 100.0 pixels tall. The render object will then take that value
/// and apply the aspect ratio again to obtain a width of 50.0. That width is
/// permitted by the constraints and the child receives a width of 50.0 and a
/// height of 100.0. If the width were not permitted, the render object would
/// continue iterating through the constraints. If the render object does not
/// find a feasible size after consulting each constraint, the render object
/// will eventually select a size for the child that meets the layout
/// constraints but fails to meet the aspect ratio constraints. ºæÅs ΩDΩU/// Creates as render object with a specific aspect ratio.
///
/// The [aspectRatio] argument must be a finite, positive value.Ω\Ωh  ΩrΩÉ  ΩñΩúΩ∞Ω©ΩùΩ¨Ω∫Ω¿Ω“ΩÕΩ¡ΩœΩ‹Ω‚Ω˜Ω„ΩÓΩÔææææ$æ)æ/æ*ø&ø-  æ5ÄÓøÄæ/// The aspect ratio to attempt to use.
///
/// The aspect ratio is expressed as a ratio of width to height. For example,
/// a 16:9 width:height aspect ratio would have a value of 16.0/9.0.   ø=ÄŸøA  øMøU   ¿ @ÄÊ¿ @-  ¿ @F¿ @N  ¿ @¿ @¿ AÄÊ¿ A  ¿ A0¿ A8  ¿ A¿ A¿ AÓÄ‰¿ B  ¿ B¿ B#  ¿ AÓ¿ AÔ¿ B÷Ä‰¿ BÈ  ¿ C¿ C  ¿ B÷¿ B◊¿ CæáK¿ C√  ¿ C’¿ CÂ   ¿ Kn¿ K  ¿ K/¿ K?  ¿ K¿ K¿ KÄ†¿ Kê   ¿ K¿ KÄ¿ L#ÄΩ¿ L4  ¿ LH&¿ Le  ¿ L#¿ L$ ¿ L‰ïv¿ S¶Üº/// Sizes its child to the child's maximum intrinsic width.
///
/// This class is useful, for example, when unlimited width is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable width.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic width, then the child will get less width
/// than it otherwise would. Likewise, if the minimum width constraint is
/// larger than the child's maximum intrinsic width, the child will be given
/// more width than it otherwise would.
///
/// If [stepWidth] is non-null, the child's width will be snapped to a multiple
/// of the [stepWidth]. Similarly, if [stepHeight] is non-null, the child's
/// height will be snapped to a multiple of the [stepHeight].
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicWidth],
///    allowing the [RenderIntrinsicWidth]'s child to be smaller than that of
///    its parent.
///  * [Row], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the width constraints that are passed to the
///    [RenderIntrinsicWidth], allowing the [RenderIntrinsicWidth]'s child's
///    width to be smaller than that of its parent. ¿ S÷Å„ ¿ Tù¿ T±Äæ/// Creates a render object that sizes itself to its child's intrinsic width.
///
/// If [stepWidth] is non-null it must be > 0.0. Similarly If [stepHeight] is
/// non-null it must be > 0.0.¿ T∏¿ T¡  ¿ Tœ¿ Tÿ  ¿ TÁ¿ TÛ  ¿ U ¿ U¿ U+¿ U¿ U¿ U¿ U¿ U&¿ U¿ U(¿ U5¿ U;¿ Ub¿ UO¿ UG¿ U<¿ UJ¿ U]¿ UR¿ U_¿ Uw¿ Ul¿ Uy¿ Uó¿ Uã¿ Uô¿ U¨¿ U±¿ U∑¿ U≤¿ V]¿ Ve  ¿ W»¿ W–  ¿ UΩÄù¿ VBr/// If non-null, force the child's width to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ VsÄÆ¿ Vw  ¿ VÅ¿ Vä   ¿ W%Ä†¿ W´s/// If non-null, force the child's height to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ WﬂÄ±¿ W„  ¿ WÓ¿ W˜   	¿ XîÄ±¿ X¢  ¿ X≠¿ Xµ  ¿ Xª¿ Xƒ   ¿ YIm¿ Y\  ¿ Yu¿ Y}  ¿ YI¿ YJ¿ Y∫ÄŸ¿ YÕ  ¿ YÊ¿ YÓ  ¿ Y∫¿ Yª¿ ZóÅR¿ Z™  ¿ Zƒ¿ ZÃ  ¿ Zó¿ Zò¿ [ÌÅR¿ \   ¿ \¿ \"  ¿ [Ì¿ [Ó¿ ]CÇ¬¿ ]H  ¿ ]V"¿ ]n  ¿ ]z#¿ ]ì   ¿ `	Ä∏¿ `  ¿ `+¿ `;  ¿ `	¿ `
¿ `≈Äò¿ `÷   ¿ `≈¿ `∆¿ aaÄ˜¿ ar  ¿ aÜ&¿ a£  ¿ aa¿ ab ¿ b\åÉ¿ hIÖÁ/// Sizes its child to the child's intrinsic height.
///
/// This class is useful, for example, when unlimited height is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable height.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic height, then the child will get less height
/// than it otherwise would. Likewise, if the minimum height constraint is
/// larger than the child's maximum intrinsic height, the child will be given
/// more height than it otherwise would.
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicHeight],
///    allowing the [RenderIntrinsicHeight]'s child to be smaller than that of
///    its parent.
///  * [Column], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the height constraints that are passed to the
///    [RenderIntrinsicHeight], allowing the [RenderIntrinsicHeight]'s child's
///    height to be smaller than that of its parent. ¿ hzÄì ¿ hÀ¿ h‡N/// Creates a render object that sizes itself to its child's intrinsic height.¿ hÁ¿ hÛ  ¿ i ¿ i¿ i¿ i  ¿ iÅ¿ i$  ¿ i=¿ iE  ¿ i¿ i¿ j3Å¿ jF  ¿ j_¿ jg  ¿ j3¿ j4¿ kUm¿ kh  ¿ kÇ¿ kä  ¿ kU¿ kV¿ k∆Åø¿ kÀ  ¿ kŸ"¿ kÒ  ¿ k˝#¿ l   ¿ mâÄ∏¿ mö  ¿ m´¿ mª  ¿ mâ¿ mä¿ nEÄò¿ nV   ¿ nE¿ nF ¿ n·é>¿ p”ÅÎ/// Makes its child partially transparent.
///
/// This class paints its child into an intermediate buffer and then blends the
/// child back into the scene partially transparent.
///
/// For values of opacity other than 0.0 and 1.0, this class is relatively
/// expensive because it requires painting the child into an intermediate
/// buffer. For the value 0.0, the child is simply not painted at all. For the
/// value 1.0, the child is painted immediately without an intermediate buffer. ¿ p¸Ç ¿ q|¿ qây/// Creates a partially transparent render object.
///
/// The [opacity] argument must be between 0.0 and 1.0, inclusive.¿ qê¿ qò  ¿ q™#¿ q∞  ¿ q”¿ qﬂ  ,¿ q°¿ q»¿ qÏ¿ qÚ¿ r¿ q˚¿ qÛ¿ q˛¿ r¿ r¿ r3¿ r"¿ r¿ r¿ r¿ r-¿ r%¿ r0¿ r=¿ rC¿ rb¿ r[¿ rD¿ r^¿ ru¿ rl¿ rw¿ rü¿ rá¿ r°¿ r«¿ r¿¿ r…¿ rÀ¿ rÃ¿ r—¿ r“¿ rÂ¿ rÌ¿ rÊ¿ r˜¿ r¸¿ s¿ r˝¿ sW
¿ s[  ¿ t¯¿ tˇ  ¿ x!¿ x&  ¿ sK¿ s   ¿ s¿ s	¿ sfÅè¿ t·Å[/// The fraction to scale the child's alpha value.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// The opacity must not be null.
///
/// Values 1.0 and 0.0 are painted with a fast path. Other values
/// require painting the child into an intermediate buffer, which is
/// expensive.   ¿ uÇ+¿ u  ¿ u¿ u   ¿ w:Ä‰¿ wÏÄû/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.   ¿ xAÄ±¿ xE  ¿ x\
¿ xb   ¿ xˆl¿ y  ¿ y¿ y  ¿ xˆ¿ x˜¿ yfÅœ¿ yw  ¿ y}¿ yé  ¿ yñ¿ yû  ¿ yf¿ yg¿ {9ÄÆ¿ {J  ¿ {d¿ {y  ¿ {9¿ {:¿ {ÎÅ2¿ {¸  ¿ |&¿ |-  ¿ {Î¿ {Ï ¿ å ÇË¿ åÓÄ«/// Makes its child partially transparent, driven from an [Animation].
///
/// This is a variant of [RenderOpacity] that uses an [Animation<double>] rather
/// than a [double] to control the opacity. ¿ ç_Åß ¿ ç…¿ çﬁc/// Creates a partially transparent render object.
///
/// The [opacity] argument must not be null.¿ çÂ"¿ é  ¿ é#¿ é  ¿ é6¿ éB  ¿ é+¿ éO¿ éU¿ ée¿ é^¿ éV¿ éa¿ éo¿ éu¿ éî¿ éç¿ év¿ éê¿ éû¿ é£¿ é©¿ é§    ¿ èÀâ◊¿ êíÄ¿/// Applies a mask generated by a [Shader] to its child.
///
/// For example, [RenderShaderMask] can be used to gradually fade out the edge
/// of a child by using a [ui.Gradient.linear] mask. ¿ êæÅÕ ¿ ëc¿ ësÄû/// Creates a render object that applies a mask generated by a [Shader] to its child.
///
/// The [shaderCallback] and [blendMode] arguments must not be null.¿ ëz¿ ëÜ  ¿ ëê&¿ ë©  ¿ ëº(¿ ë«  ¿ ë“¿ ë€¿ ë‹¿ ëÌ¿ ëÛ¿ í
¿ í¿ ëÙ¿ í¿ í¿ í¿ í,¿ í%¿ í¿ í(¿ íF¿ í6¿ íH¿ íj¿ í_¿ íl¿ í~¿ íÉ¿ íâ¿ íÑ¿ î◊¿ îÊ  ¿ ñæ¿ ñ»  ¿ íèJ¿ í∞   ¿ íè¿ íê¿ í›Å˜¿ î≤Å-/// Called to creates the [Shader] that generates the mask.
///
/// The shader callback is called with the current size of the child so that
/// it can customize the shader to the size and location of the child.
///
/// The rectangle will always be at the origin when called by
/// [RenderShaderMask].   ¿ î˘Ä¥¿ î˝  ¿ ï¿ ï   ¿ ï±Å
¿ ñ£Ä€/// The [BlendMode] to use when applying the shader to the child.
///
/// The default, [BlendMode.modulate], is useful for applying an alpha blend
/// to the child. Other blend modes can be used to create other effects.   ¿ ñ÷Ä†¿ ñ⁄  ¿ ñ‰¿ ñÔ   ¿ óz=¿ óè   ¿ óz¿ ó{¿ óªÅÂ¿ óÃ  ¿ ó“¿ ó„  ¿ óÎ¿ óÛ  ¿ óª¿ óº ¿ ô§à¿ ö`Äµ/// Applies a filter to the existing painted content and then paints [child].
///
/// This effect is relatively expensive, especially if the filter is non-local,
/// such as a blur. ¿ öêÅæ ¿ õR¿ õfÄ∑/// Creates a backdrop filter.
///
/// The [filter] argument must not be null.
/// The [blendMode] argument, if provided, must not be null
/// and will default to [BlendMode.srcOver].¿ õi¿ õu  ¿ õ{¿ õî  ¿ õõ'¿ õ¶  ¿ õ±¿ õ∫¿ õª¿ õÃ¿ õ“¿ õ·¿ õ⁄¿ õ”¿ õ›¿ õÍ¿ õ¿ ú¿ õ˚¿ õÒ¿ õ˛¿ ú¿ ú¿ ú¿ ú.¿ ú#¿ ú0¿ úA¿ úF¿ úL¿ úG¿ ùó¿ ù¶  ¿ ü ¿ ü*  ¿ úRR¿ úw   ¿ úR¿ úS¿ ú®ÄÏ¿ ùÇÄº/// The image filter to apply to the existing painted content before painting
/// the child.
///
/// For example, consider using [ui.ImageFilter.blur] to create a backdrop
/// blur effect.   ¿ ù±Äú¿ ùµ  ¿ ùº¿ ùÃ   ¿ ûQÄÃ¿ üÄù/// The blend mode to use to apply the filtered background content onto the background
/// surface.
///
/// {@macro flutter.widgets.BackdropFilter.blendMode}   ¿ ü8Ä†¿ ü<  ¿ üF¿ üQ   ¿ ü‹=¿ üÒ   ¿ ü‹¿ ü›¿ †Å§¿ †.  ¿ †4¿ †E  ¿ †M¿ †U  ¿ †¿ † ¿ °≈éó¿ ¶'ÑR/// An interface for providing custom clips.
///
/// This class is used by a number of clip widgets (e.g., [ClipRect] and
/// [ClipPath]).
///
/// The [getClip] method is called whenever the custom clip needs to be updated.
///
/// The [shouldReclip] method is called when a new instance of the class
/// is provided, to check if the new instance actually represents different
/// information.
///
/// The most efficient way to update the clip provided by this class is to
/// supply a `reclip` argument to the constructor of the [CustomClipper]. The
/// custom object will listen to this animation and update the clip whenever the
/// animation ticks, avoiding both the build and layout phases of the pipeline.
///
/// See also:
///
///  * [ClipRect], which can be customized with a [CustomClipper<Rect>].
///  * [ClipRRect], which can be customized with a [CustomClipper<RRect>].
///  * [ClipOval], which can be customized with a [CustomClipper<Rect>].
///  * [ClipPath], which can be customized with a [CustomClipper<Path>].
///  * [ShapeBorderClipper], for specifying a clip path using a [ShapeBorder].¿ ¶5¿ ¶5¿ ¶OÄ∂ ¿ ¶Ã¿ ¶Ÿp/// Creates a custom clipper.
///
/// The clipper will update its clip whenever [reclip] notifies its listeners.¿ ¶‹¿ ¶È  ¿ ¶¸¿ ¶Ù¿ ¶˛¿ ß	¿ ß   ¿ ß'ÅU¿ ®7ÄÙ/// Register a closure to be notified when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ®C¿ ®Q  ¿ ®&¿ ®'¿ ®ÄÅô¿ ©ŒÅ0/// Remove a previously registered closure from the list of closures that the
/// object notifies when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ©›¿ ©Î  ¿ ©Ω¿ ©æ¿ ™ÄÑ¿ ™éj/// Returns a description of the clip given that the render object being
/// clipped is of the given size. ¿ ™ñ	¿ ™ú   ¿ ™•Ç¿ ¨ÅÅ∆/// Returns an approximation of the clip returned by [getClip], as
/// an axis-aligned Rect. This is used by the semantics layer to
/// determine whether widgets should be excluded.
///
/// By default, this returns a rectangle that is the same size as
/// the RenderObject. If getClip returns a shape that is roughly the
/// same size as the RenderObject (e.g. it's a rounded rectangle
/// with very small arcs in the corners), then this may be adequate. ¿ ¨ò	¿ ¨û   ¿ ¨ΩÉO¿ ØÿÇ˜/// Called whenever a new instance of the custom clipper delegate class is
/// provided to the clip object, or any time that a new clip object is created
/// with a new instance of the custom clipper delegate class (which amounts to
/// the same thing, because the latter is implemented in terms of the former).
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false.
///
/// If the method returns false, then the [getClip] call might be optimized
/// away.
///
/// It's possible that the [getClip] method will get called even if
/// [shouldReclip] returns false or if the [shouldReclip] method is never
/// called at all (e.g. if the box changes size). ¿ ØÂ%¿ ∞   ¿ ∞J¿ ∞#   ¿ ∞¿ ∞ ¿ ∞^Öµ¿ ∞´F/// A [CustomClipper] that clips to the outer path of a [ShapeBorder]. ¿ ∞ﬁÅ ¿ ≤k¿ ≤}Åv/// Creates a [ShapeBorder] clipper.
///
/// The [shape] argument must not be null.
///
/// The [textDirection] argument must be provided non-null if [shape]
/// has a text direction dependency (for example if it is expressed in terms
/// of "start" and "end" instead of "left" and "right"). It may be null if
/// the border will not need the text direction to paint itself.¿ ≤Ñ¿ ≤ì  ¿ ≤ù¿ ≤£  ¿ ≤∏¿ ≤æ¿ ≤Ã¿ ≤≈¿ ≤ø¿ ≤»¿ ≤“V¿ ≥#</// The shape border whose outer path this clipper clips to. ¿ ≥-Ä‚¿ ¥Ä∑/// The text direction to use for getting the outer path for [shape].
///
/// [ShapeBorder]s can depend on the text direction (e.g having a "dent"
/// towards the start of the shape).  ¿ ¥ÄØ¿ ¥Z2/// Returns the outer path of [shape] as the clip. ¿ ¥b	¿ ¥h  ¿ ¥I¿ ¥J¿ ¥«ÅJ¿ ¥ÿ  ¿ ¥Â¿ ¥˙  ¿ ¥«¿ ¥» ¿ ∂ãƒ¿ ∂$ ¿ ∂6¿ ∂6¿ ∂TÄÍ ¿ ∂T¿ ∂e ¿ ∂l¿ ∂x  ¿ ∂Ç¿ ∂ï  ¿ ∂°"¿ ∂ß  ¿ ∂µ¿ ∂π¿ ∂∫¿ ∂Ã¿ ∂“¿ ∂Á¿ ∂‡¿ ∂”¿ ∂„¿ ∂˙¿ ∂Ò¿ ∂¸¿ ∑¿ ∑¿ ∑¿ ∑1¿ ∑6¿ ∑<¿ ∑7¿ ∑≠¿ ∑ø  ¿ ªL¿ ªO  ¿ º¿ º
  ¿ æ]¿ æd  ¿ æs¿ æÄ  ¿ ∑Bh¿ ∑ñ;/// If non-null, determines which clip to use on the child.   ¿ ∑ÀÇ!¿ ∑œ  ¿ ∑◊¿ ∑Í   ¿ ª6¿ ª<    ¿ ªY'¿ ªb    ¿ ªÉ¿ ªá  ¿ ªî
¿ ªö   ¿ πv¿ ∫  ¿ ∫¿ ∫  ¿ π¿ πÒ¿ ∫ja¿ ∫{   ¿ ∫j¿ ∫k¿ ∫œc¿ ∫‘    ¿ ºÄß¿ º-   ¿ º¿ º¿ º«O¿ ºÃ    ¿ ΩÅ?¿ Ω,  ¿ ΩI¿ ΩW  ¿ Ω¿ Ω¿ æéÉI¿ æü  ¿ æÆ¿ æø  ¿ æ«¿ æœ  ¿ æé¿ æè ¿ ¡€á±¿ ¬¡Äﬂ/// Clips its child using a rectangle.
///
/// By default, [RenderClipRect] prevents its child from painting outside its
/// bounds, but the size and location of the clip rect can be customized using a
/// custom [clipper]. ¿ ¬ÙÅp ¿ √Û¿ ƒÄ/// Creates a rectangular clip.
///
/// If [clipper] is null, the clip will match the layout size and position of
/// the child.
///
/// The [clipBehavior] must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ ƒ¿ ƒ  ¿ ƒ¿ ƒ   ¿ ƒ,¿ ƒ3  ¿ ƒG¿ ƒM¿ ƒb¿ ƒ[¿ ƒN¿ ƒ^ ¿ ƒh8¿ ƒ}   ¿ ƒh¿ ƒi¿ ƒ§Å%¿ ƒµ  ¿ ƒΩ¿ ƒœ  ¿ ƒÿ¿ ƒÈ  ¿ ƒ§¿ ƒ•¿ ≈ÕÅˆ¿ ≈ﬁ  ¿ ≈‰¿ ≈ı  ¿ ≈˝¿ ∆  ¿ ≈Õ¿ ≈Œ¿ ««Å√¿ «ÿ  ¿ «Á¿ «¯  ¿ » ¿ »  ¿ ««¿ «» ¿ …éåù¿  {ÄÊ/// Clips its child using a rounded rectangle.
///
/// By default, [RenderClipRRect] uses its own bounds as the base rectangle for
/// the clip, but the size and location of the clip can be customized using a
/// custom [clipper]. ¿  ∞ÇÁ ¿ Ã¿ Ã ÅN/// Creates a rounded-rectangular clip.
///
/// The [borderRadius] defaults to [BorderRadius.zero], i.e. a rectangle with
/// right-angled corners.
///
/// If [clipper] is non-null, then [borderRadius] is ignored.
///
/// The [clipBehavior] argument must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ Ã'¿ Ã.  ¿ Ã85¿ ÃN  ¿ Ãs¿ Ãä  ¿ Ãñ¿ Ãù  ¿ ÃÆ¿ Ãæ  ¿ Ã\¿ Ãh¿ Ãi¿ Ã”¿ ÃŸ¿ ÃÓ¿ ÃÁ¿ Ã⁄¿ ÃÍ¿ Õ¿ Ã¯¿ Õ¿ Õ,¿ Õ¿ Õ.¿ ÕD¿ ÕI¿ ÕZ¿ ÕQ¿ ÕJ¿ ÕS¿ Œ≠"¿ Œ¬  ¿ – ¿ –  ¿ ÕõÅ¿ ŒåÄÀ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This value is ignored if [clipper] is non-null.   ¿ Œ”Ä¥¿ Œ◊  ¿ Œ‰¿ Œ˙   ¿ œãr¿ œ›</// The text direction with which to resolve [borderRadius].   ¿ –!Äñ¿ –%  ¿ –3¿ –C   ¿ –ªg¿ –—   ¿ –ª¿ –º¿ —&Å%¿ —7  ¿ —?¿ —Q  ¿ —Z¿ —k  ¿ —&¿ —'¿ “OÇ¿ “`  ¿ “f¿ “w  ¿ “¿ “á  ¿ “O¿ “P¿ ‘gÅ¬¿ ‘x  ¿ ‘á¿ ‘ò  ¿ ‘†¿ ‘®  ¿ ‘g¿ ‘h ¿ ÷-ä0¿ ◊;Å/// Clips its child using an oval.
///
/// By default, inscribes an axis-aligned oval into its layout dimensions and
/// prevents its child from painting outside that oval, but the size and
/// location of the clip oval can be customized using a custom [clipper]. ¿ ◊nÅÜ ¿ ÿÉ¿ ÿëÅ/// Creates an oval-shaped clip.
///
/// If [clipper] is null, the oval will be inscribed into the layout size and
/// position of the child.
///
/// The [clipBehavior] argument must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ ÿò¿ ÿü  ¿ ÿ©¿ ÿ∞  ¿ ÿº¿ ÿ√  ¿ ÿ◊¿ ÿ›¿ ÿÚ¿ ÿÎ¿ ÿﬁ¿ ÿÓ¿ ÿ¯¿ ÿ˛  ¿ Ÿ¿ Ÿ  ¿ Ÿ◊8¿ ŸÏ   ¿ Ÿ◊¿ Ÿÿ¿ Ÿ'Ä¨¿ Ÿ,  ¿ Ÿ9	¿ Ÿ?   ¿ ⁄ÇC¿ ⁄$  ¿ ⁄,¿ ⁄>  ¿ ⁄G¿ ⁄X  ¿ ⁄¿ ⁄¿ ‹ZÇ¿ ‹k  ¿ ‹q¿ ‹Ç  ¿ ‹ä¿ ‹í  ¿ ‹Z¿ ‹[¿ ﬁtÅÁ¿ ﬁÖ  ¿ ﬁî¿ ﬁ•  ¿ ﬁ≠¿ ﬁµ  ¿ ﬁt¿ ﬁu ¿ ‡_â'¿ ‚2ÅÃ/// Clips its child using a path.
///
/// Takes a delegate whose primary method returns a path that should
/// be used to prevent the child from painting outside the path.
///
/// Clipping to a path is expensive. Certain shapes have more
/// optimized render objects:
///
///  * To clip to a rectangle, consider [RenderClipRect].
///  * To clip to an oval or circle, consider [RenderClipOval].
///  * To clip to a rounded rectangle, consider [RenderClipRRect]. ¿ ‚eÇ ¿ ‰¿ ‰Åé/// Creates a path clip.
///
/// If [clipper] is null, the clip will be a rectangle that matches the layout
/// size and location of the child. However, rather than use this default,
/// consider using a [RenderClipRect], which can achieve the same effect more
/// efficiently.
///
/// The [clipBehavior] argument must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ ‰¿ ‰"  ¿ ‰,¿ ‰3  ¿ ‰?¿ ‰F  ¿ ‰Z¿ ‰`¿ ‰u¿ ‰n¿ ‰a¿ ‰q ¿ ‰{I¿ ‰ê   ¿ ‰{¿ ‰|¿ ‰»Å%¿ ‰Ÿ  ¿ ‰·¿ ‰Û  ¿ ‰¸¿ Â  ¿ ‰»¿ ‰…¿ ÂÒÇ¿ Ê  ¿ Ê¿ Ê  ¿ Ê!¿ Ê)  ¿ ÂÒ¿ ÂÚ¿ Ë	Å{¿ Ë  ¿ Ë)¿ Ë:  ¿ ËB¿ ËJ  ¿ Ë	¿ Ë
 ¿ Èàâï¿ ÍfÄŒ/// A physical model layer casts a shadow based on its [elevation].
///
/// The concrete implementations [RenderPhysicalModel] and [RenderPhysicalShape]
/// determine the actual shape of the physical model.¿ Í¿ Í¿ Í£ÇA ¿ Î*¿ ÎBÄÇ/// The [shape], [elevation], [color], and [shadowColor] must not be null.
/// Additionally, the [elevation] must be non-negative.¿ ÎI¿ ÎY  ¿ Îc¿ Ît  ¿ ÎÇ¿ Îí  ¿ Îú¿ Î¨  ¿ Îº¿ Î√  ¿ Î‡¿ ÎÁ  (¿ Î—¿ Î’¿ Î÷¿ Îˆ¿ Î¸¿ Ï"¿ Ï¿ Ï¿ Î˝¿ Ï
¿ Ï¿ Ï¿ Ï¿ Ï,¿ Ï2¿ Ï@¿ Ï9¿ Ï3¿ Ï<¿ ÏJ¿ ÏP¿ Ïd¿ Ï]¿ ÏQ¿ Ï`¿ Ïn¿ Ït¿ Ïâ¿ ÏÇ¿ Ïu¿ ÏÖ¿ Ïû¿ Ïì¿ Ï†¿ Ïπ¿ Ï≤¿ Ïª¿ Ï÷¿ Ï…¿ Ïÿ¿ Ó¿ Ó  ¿ ÔÆ¿ Ô¥  ¿ ¢¿ ®  ¿ ÏËÅ¿ ÌÎÄÎ/// The z-coordinate relative to the parent at which to place this material.
///
/// The value is non-negative.
///
/// If [debugDisableShadows] is set, this value is ignored and no shadow is
/// drawn (an outline is rendered instead).   ¿ ÓÅN¿ Ó  ¿ Ó)¿ Ó1   ¿ Ôm>¿ Ôè/// The shadow color.   ¿ ÔƒÄ°¿ Ô»  ¿ Ô‘¿ Ô€   ¿ i6¿ è/// The background color.   ¿ ≤Äè¿ ∂  ¿ º¿ √   ¿ ÒEÄ®¿ ÒV  ¿ Òu¿ Òç  ¿ ÒE¿ ÒF¿ ÒÒÅ*¿ Ú  ¿ Ú'¿ Ú3  ¿ ÒÒ¿ ÒÚ ¿ Ûjì‹¿ ÙÄõ/// Creates a physical model layer that clips its child to a rounded
/// rectangle.
///
/// A physical model layer casts a shadow based on its [elevation]. ¿ ÙLÇ‡ ¿ ıH¿ ı[ÄÌ/// Creates a rounded-rectangular clip.
///
/// The [color] is required.
///
/// The [shape], [elevation], [color], [clipBehavior], and [shadowColor]
/// arguments must not be null. Additionally, the [elevation] must be
/// non-negative.¿ ıb¿ ıi  ¿ ıs#¿ ı}  ¿ ıú¿ ı£  ¿ ı¥¿ ı√  ¿ ı‘¿ ı€  ¿ ıÔ¿ ıˇ  ¿ ˆ	+¿ ˆ  1¿ ıÑ¿ ıå¿ ıç¿ ıÊ¿ ˆ¿ ˆ#¿ ˆ(¿ ˆ3¿ ˆ)¿ ˆ=¿ ˆC¿ ˆQ¿ ˆJ¿ ˆD¿ ˆM¿ ˆ[¿ ˆa¿ ˆv¿ ˆo¿ ˆb¿ ˆr¿ ˆÄ¿ ˆÜ¿ ˆ¨¿ ˆô¿ ˆë¿ ˆá¿ ˆî¿ ˆ¶¿ ˆú¿ ˆ©¿ ˆ∂¿ ˆº¿ ˆ ¿ ˆ√¿ ˆΩ¿ ˆ∆¿ ˆ‘¿ ˆ⁄¿ ˆÓ¿ ˆÁ¿ ˆ€¿ ˆÍ¿ ˆˇ¿ ˆ¯¿ ˜¿ ˜¿ ˜¿ ˜¿ ˜€¿ ˜‰  ¿ ˘‰¿ ˘Ú  ¿ ˜0Ä®¿ ˜»ÄÇ/// The shape of the layer.
///
/// Defaults to [BoxShape.rectangle]. The [borderRadius] affects the corners
/// of the rectangle.   ¿ ˜ÓÄí¿ ˜Ú  ¿ ˜¯¿ ¯   ¿ ¯ÑÅ]¿ ˘√Å/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This property is ignored if the [shape] is not [BoxShape.rectangle].
///
/// The value null is treated like [BorderRadius.zero].   ¿ ˙Äë¿ ˙  ¿ ˙¿ ˙#   ¿ ˙òÅv¿ ˙Æ   ¿ ˙ò¿ ˙ô¿ ¸Å%¿ ¸#  ¿ ¸+¿ ¸=  ¿ ¸F¿ ¸W  ¿ ¸¿ ¸¿ ˝;àÏ¿ ˝L  ¿ ˝R¿ ˝c  ¿ ˝k¿ ˝s  ¿ ˝;¿ ˝<¿+Å¿<  ¿P'¿m  ¿+¿, ¿Héâ¿MÄ˛/// Creates a physical shape layer that clips its child to a [Path].
///
/// A physical shape layer casts a shadow based on its [elevation].
///
/// See also:
///
///  * [RenderPhysicalModel], which is optimized for rounded rectangles and
///    circles. ¿åÇ` ¿	Ä¿	ìÄÁ/// Creates an arbitrary shape clip.
///
/// The [color] and [clipper] parameters are required.
///
/// The [clipper], [elevation], [color] and [shadowColor] must not be null.
/// Additionally, the [elevation] must be non-negative.¿	ö¿	°  ¿	´*¿	œ  ¿	€¿	‚  ¿	Û¿	˙  ¿
¿
  ¿
(+¿
/  "¿
¿
<¿
B¿
G¿
R¿
H¿
\¿
b¿
r¿
k¿
c¿
n¿
|¿
Ç¿
®¿
ï¿
ç¿
É¿
ê¿
¢¿
ò¿
•¿
≤¿
∏¿
∆¿
ø¿
π¿
¬¿
–¿
÷¿
Í¿
„¿
◊¿
Ê ¿
I¿   ¿
¿
Ò¿=Å%¿N  ¿V¿h  ¿q¿Ç  ¿=¿>¿fàì¿w  ¿}¿é  ¿ñ¿û  ¿f¿g¿˝Ä“¿  ¿"'¿?  ¿˝¿˛ ¿üí«¿ËB/// Paints a [Decoration] either before or after its child paints. ¿ÇÊ ¿H¿ZÅ#/// Creates a decorated box.
///
/// The [decoration], [position], and [configuration] arguments must not be
/// null. By default the decoration paints behind the child.
///
/// The [ImageConfiguration] will be passed to the decoration (with the size
/// filled in) to let it resolve images.¿a¿v  ¿Ö;¿ô  ¿∆;¿⁄  ¿¿  %¿£¿µ¿∂¿È¿˚¿¸¿ ¿&¿9¿2¿'¿5¿C¿I¿Z¿S¿J¿V¿d¿j¿Ä¿y¿k¿|¿ñ¿ä¿ò¿µ¿´¿∑¿◊¿»¿Ÿ¿Ô¿Ù¿˙¿ı¿ ¿  ¿ç¿ò  ¿¯¿  ¿4!¿G  ¿q¿pA/// What decoration to paint.
///
/// Commonly a [BoxDecoration].   ¿ßÄ“¿´  ¿∂¿¬   ¿}x¿ﬂH/// Whether to paint the box decoration behind or in front of the child.   ¿Ä¶¿  ¿%¿9   ¿¬Åo¿Å+/// The settings to pass to the decoration when painting, so that it can
/// resolve images appropriately. See [ImageProvider.resolve] and
/// [BoxPainter.paint].
///
/// The [ImageConfiguration.textDirection] field is also used by
/// direction-sensitive [Decoration]s for painting and hit-testing.   ¿YÄµ¿]  ¿k¿   ¿Åÿ¿#   ¿¿¿ ÓÄè¿ ˇ  ¿!¿!  ¿ Ó¿ Ô¿!ÅÜæ¿!í  ¿!ò¿!©  ¿!±¿!π  ¿!Å¿!Ç¿(CÅ!¿(T  ¿(h&¿(Ö  ¿(C¿(D ¿)h§¿)¶7/// Applies a transformation before painting its child. ¿)—Ç: ¿*A¿*Pi/// Creates a render object that transforms its child.
///
/// The [transform] argument must not be null.¿*W¿*i  ¿*w¿*Ä  ¿*ã¿*ü  ¿*≠¿*Ω  ¿*œ¿*’  ¿*Ú¿+  ¿+¿+   ¿*Ë¿+-¿+3¿+E¿+>¿+4¿+A¿+O¿+T¿+Z¿+U¿-P¿-X  ¿0ÿ¿0Î  ¿2™¿2π  ¿3‡Åv¿5EÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// [applyPaintTransform], and therefore [localToGlobal] and [globalToLocal],
/// always honor the transformation, regardless of the value of this property. ¿5[¿5d  ¿8m¿8|  ¿,Å>¿-;Å/// The origin of the coordinate system (relative to the upper left corner of
/// this render object) in which to apply the matrix.
///
/// Setting an origin is equivalent to conjugating the transform matrix by a
/// translation. This property is provided just for convenience.   ¿-cÄö¿-g  ¿-n¿-w   ¿.Ç‘¿0ΩÇé/// The alignment of the origin, relative to the size of the box.
///
/// This is equivalent to setting an origin based on the size of the box.
/// If it is specified at the same time as an offset, both are applied.
///
/// An [AlignmentDirectional.centerStart] value is the same as an [Alignment]
/// whose [Alignment.x] value is `-1.0` if [textDirection] is
/// [TextDirection.ltr], and `1.0` if [textDirection] is [TextDirection.rtl].
/// Similarly [AlignmentDirectional.centerEnd] is the same as an [Alignment]
/// whose [Alignment.x] value is `1.0` if [textDirection] is
/// [TextDirection.ltr], and `-1.0` if [textDirection] is [TextDirection.rtl].   ¿0˘ÄÆ¿0˝  ¿1¿1   ¿1´Ä¸¿2áÄ¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿2ÀÄ∂¿2œ  ¿2›¿2Ì   ¿3ÖW¿3ö   ¿3Ö¿3Ü¿5rÇ)¿6™Å'/// The matrix to transform the child by during painting. The provided value
/// is copied on assignment.
///
/// There is no getter for [transform], because [Matrix4] is mutable, and
/// mutations outside of the control of the render object could not reliably
/// be reflected in the rendering. ¿6¥¿6Ω   ¿7üÄÀ¿8JÄë/// The filter quality with which to apply the transform as a bitmap operation.
///
/// {@macro flutter.widgets.Transform.optional.FilterQuality}   ¿8éÅ8¿8í  ¿8†¿8∞   ¿>NÇÓ¿>[    ¿9 Äû¿: ./// Sets the transform to the identity matrix.   ¿:lÄΩ¿:¥@/// Concatenates a rotation about the x axis into the transform. ¿:º¿:ƒ   ¿;-ÄΩ¿;u@/// Concatenates a rotation about the y axis into the transform. ¿;}¿;Ö   ¿;ÓÄΩ¿<6@/// Concatenates a rotation about the z axis into the transform. ¿<>¿<F   ¿<ØÄﬁ¿<ˆ?/// Concatenates a translation by (x, y, z) into the transform. ¿= ¿=  ¿=¿=  ¿=¿=$  ¿=¿='¿=ëÄπ¿=≈,/// Concatenates a scale into the transform. ¿=À¿=”  ¿=◊	¿=‡  ¿=‚	¿=Î   ¿A@ÅY¿AQ  ¿AY¿Ak  ¿At¿AÖ  ¿A@¿AA¿BùÅÆ¿BÆ  ¿Bæ¿B–  ¿BŸ¿BÍ  ¿Bù¿Bû¿DOÜó¿D`  ¿Df¿Dw  ¿D¿Dá  ¿DO¿DP¿JÍ|¿J˚  ¿K¿K  ¿K ¿K)  ¿JÍ¿JÎ¿KjÇ¿K{  ¿Kè&¿K¨  ¿Kj¿Kk ¿MÖ£7¿M–D/// Scales and positions its child within itself according to [fit]. ¿M˚Ç- ¿Nq¿NÄo/// Scales and positions its child within itself.
///
/// The [fit] and [alignment] arguments must not be null.¿Ná¿Nè  ¿N®.¿Nª  ¿N‹¿NÏ  ¿N˛¿O
  ¿O¿O  +¿Nî¿Nö¿Nõ¿N∆¿Nœ¿N–¿O(¿O,¿O-¿O:¿O@¿OL¿OE¿OA¿OH¿OV¿O\¿On¿Og¿O]¿Oj¿Ox¿O~¿Oì¿Oå¿O¿Oè¿O¢¿Où¿O§¿Oª¿O∞¿OΩ¿Oﬁ¿Oœ¿O‡¿P¿Oˆ¿P¿P¿P ¿P&¿P!¿P,¿P7  ¿R¡¿R»  ¿U∑¿U…  ¿Wû¿W≠  ¿aó¿aù  ¿a≥¿aº  ¿bf¿bk ¿b{¿b¿bÄ¿R__¿R≤E/// How to inscribe the child into the space allocated during layout.   ¿R–Å5¿R‘  ¿Rÿ¿R‡   ¿T	Å´¿UúÅl/// How to align the child within its parent's bounds.
///
/// An alignment of (0.0, 0.0) aligns the child to the top-left corner of its
/// parent's bounds. An alignment of (1.0, 0.5) aligns the child to the middle
/// of the right edge of its parent's bounds.
///
/// If this is set to an [AlignmentDirectional] object, then
/// [textDirection] must not be null.   ¿U◊Äƒ¿U€  ¿UÂ¿U¯   ¿VüÄ¸¿W{Ä¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿WøÄ≤¿W√  ¿W—¿W·   ¿aÀÄò¿bEj/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none], and must not be null.   ¿bàÄº¿bå  ¿bô
¿bü   ¿PNÄä¿PS    ¿P‹U¿P·    ¿Q5Å&¿Q:  ¿QL
¿QT   ¿X∑Ö≤¿X»  ¿XŸ¿XÈ  ¿X∑¿X∏¿^mÉ&¿^~   ¿^m¿^n¿cHR¿cM    ¿cûÑD¿c£    ¿gÊÅ‰¿gˆ  ¿h¿h   ¿h(¿h0   ¿iŒÇW¿iﬂ  ¿iÂ¿iˆ  ¿i˛¿j  ¿iŒ¿iœ¿l)Å∑¿l:  ¿lJ¿l\  ¿le¿lv  ¿l)¿l*¿m‰ÄÜ¿mı  ¿n¿n  ¿m‰¿mÂ¿nnÄ‹¿n  ¿nì¿nû  ¿n§¿n≠  ¿nn¿no¿oNÅl¿o_  ¿os&¿oê  ¿oN¿oO ¿pæåÕ¿r}Å∏/// Applies a translation transformation before painting its child.
///
/// The translation is expressed as an [Offset] scaled to the child's size. For
/// example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.
///
/// Hit tests will only be detected inside the bounds of the
/// [RenderFractionalTranslation], even if the contents are offset such that
/// they overflow. ¿r¥ÅP ¿s1¿sLv/// Creates a render object that translates its child's painting.
///
/// The [translation] argument must not be null.¿sS¿sd  ¿st¿sz  ¿só¿s£  ¿sç¿s∞¿s∂¿s ¿s√¿s∑¿s∆¿s·¿s‘¿s„¿s˜¿s¸¿t¿s˝¿u	¿u  ¿wPÅv¿xµÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// applyPaintTransform(), and therefore localToGlobal() and globalToLocal(),
/// always honor the transformation, regardless of the value of this property. ¿tÄ˛¿tÍÄŒ/// The translation to apply to the child, scaled to the child's size.
///
/// For example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.   ¿u Ä√¿u$  ¿u0¿u8   ¿uÁÅe¿u¯  ¿v ¿v  ¿v¿v,  ¿uÁ¿uË¿xÀÅ ¿x‹  ¿xÏ¿x˛  ¿y¿y  ¿xÀ¿xÃ¿zôÅ¿z™  ¿z∞¿z¡  ¿z…¿z—  ¿zô¿zö¿{ØÄµ¿{¿  ¿{‘¿{ﬂ  ¿{Â¿{Ó  ¿{Ø¿{∞¿|hÅ!¿|y  ¿|ç&¿|™  ¿|h¿|i ¿É¿èl¿ÖÙÇ-/// Calls callbacks in response to common pointer events.
///
/// It responds to events that can construct gestures, such as when the
/// pointer is pointer is pressed and moved, and then released or canceled.
///
/// It does not respond to events that are exclusive to mouse, such as when the
/// mouse enters and exits a region without pressing any buttons. For
/// these events, use [RenderMouseRegion].
///
/// If it has a child, defers to the child for sizing behavior.
///
/// If it does not have a child, grows to fit the parent-provided constraints. ¿Ü8ÅÕ ¿Ü—¿ÜÊÄí/// Creates a render object that forwards pointer events to callbacks.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿ÜÌ¿ÜÛ  ¿á¿á  ¿á¿á#  ¿á3¿á9  ¿áL¿áR  ¿áf¿ál  ¿áÜ¿áå  ¿áß¿á≠  ¿á≈¿áÀ  ¿áﬂ¿áÊ  ¿áÛ¿á˙   	¿à	Ä“¿àŒÄ§/// Called when a pointer comes into contact with the screen (for touch
/// pointers), or has its button pressed (for mouse pointers) at this widget's
/// location. ¿à‡w¿âJM/// Called when a pointer that triggered an [onPointerDown] changes position. ¿â\Äê¿â·h/// Called when a pointer that triggered an [onPointerDown] is no longer in
/// contact with the screen. ¿âÒw¿äZK/// Called when a pointer that has not an [onPointerDown] changes position. ¿ämÄ´¿ã	{/// Called when the input from a pointer that triggered an [onPointerDown] is
/// no longer directed towards this receiver. ¿ã|¿ãÑB/// Called when a pan/zoom begins such as from a trackpad gesture. ¿ãûb¿ãÍ&/// Called when a pan/zoom is updated. ¿åZ¿åL$/// Called when a pan/zoom finishes. ¿ådg¿åº9/// Called when a pointer signal occurs over this object.  ¿å–h¿å·  ¿å˜¿ç  ¿å–¿å—¿ç<Éû¿çM  ¿çY¿çg  ¿çm¿ç{  ¿ç<¿ç=¿êﬁÇL¿êÔ  ¿ë&¿ë   ¿êﬁ¿êﬂ ¿ì.îò¿ñÇ›/// Calls callbacks in response to pointer events that are exclusive to mice.
///
/// It responds to events that are related to hovering, i.e. when the mouse
/// enters, exits (with or without pressing buttons), or moves over a region
/// without pressing buttons.
///
/// It does not respond to common events that construct gestures, such as when
/// the pointer is pressed, moved, then released or canceled. For these events,
/// use [RenderPointerListener].
///
/// If it has a child, it defers to the child for sizing behavior.
///
/// If it does not have a child, it grows to fit the parent-provided constraints.
///
/// See also:
///
///  * [MouseRegion], a widget that listens to hover events using
///    [RenderMouseRegion]. ¿ñtÇı ¿ó¿óêÅ /// Creates a render object that forwards pointer events to callbacks.
///
/// All parameters are optional. By default this method creates an opaque
/// mouse region with no callbacks and cursor being [MouseCursor.defer]. The
/// [cursor] must not be null.¿óó¿óù  ¿ó©¿óØ  ¿óª¿ó¡  ¿óÃ&¿óŸ  ¿ó¯ ¿ó˛  ¿ò¿ò$  ¿ò6¿ò=  ¿òG9¿òY  '¿ó·¿óÏ¿óÌ¿ò¿ò,¿òj¿òy¿òz¿òâ¿òè¿òû¿òó¿òê¿òö¿ò®¿òÆ¿òΩ¿ò∂¿òØ¿òπ¿òœ¿ò«¿ò—¿òˆ¿ò‡¿ò¯¿ô¿ô¿ô¿ô.¿ô3¿ôg¿ô<¿ô4¿ôN¿ô>¿ôQ¿ô`¿ôa¿ùΩ¿ù¬  ¿†G.¿†n ¿†G¿†H¿†zÄŒ¿°AÄ£/// Triggered when a pointer has moved onto or within the region without
/// buttons pressed.
///
/// This callback is not triggered by the movement of the object. ¿°M,¿°s ¿°M¿°N¿°Ø¿°ª  ¿£¿£
  ¿öﬁÇ‹¿ù®Ç§/// Whether this object should prevent [RenderMouseRegion]s visually behind it
/// from detecting the pointer, thus affecting how their [onHover], [onEnter],
/// and [onExit] behave.
///
/// If [opaque] is true, this object will absorb the mouse pointer and
/// prevent this object's siblings (or any other objects that are not
/// ancestors or descendants of this object) from detecting the mouse
/// pointer even when the pointer is within their areas.
///
/// If [opaque] is false, this object will not affect how [RenderMouseRegion]s
/// behind it behave, which will detect the mouse pointer as long as the
/// pointer is within their areas.
///
/// This defaults to true.   ¿ùÕÄ∫¿ù—  ¿ùÿ
¿ùﬁ   ¿ûãÄò¿ü`/// How to behave during hit testing.
///
/// This defaults to [HitTestBehavior.opaque] if null.   ¿ü&Å¿ü*  ¿ü:¿üL   ¿°~.¿°ö   ¿°~¿°¿°∆Äı¿°   ¿°—¿°ﬁ   ¿¢øC¿¢‘   ¿¢ø¿¢¿¿ômÄñ¿ô~  ¿ôÜ¿ôò  ¿ô°¿ô≤  ¿ôm¿ôn¿öÄ”¿ö  ¿ö$¿ö2  ¿ö8¿öF  ¿ö¿ö¿£$m¿£5  ¿£<¿£K  ¿£$¿£%¿£ïÅ$¿£¶   ¿£ï¿£ñ¿§Ωh¿§Œ  ¿§‰¿§Ù  ¿§Ω¿§æ¿•)Çõ¿•:  ¿•N&¿•k  ¿•)¿•* ¿ß»†ï¿Æ#ÜT/// Creates a separate display list for its child.
///
/// This render object creates a separate display list for its child, which
/// can improve performance if the subtree repaints at different times than
/// the surrounding parts of the tree. Specifically, when the child does not
/// repaint but its parent does, we can re-use the display list we recorded
/// previously. Similarly, when the child repaints but the surround tree does
/// not, we can re-record its display list without re-recording the display list
/// for the surround tree.
///
/// In some cases, it is necessary to place _two_ (or more) repaint boundaries
/// to get a useful effect. Consider, for example, an e-mail application that
/// shows an unread count and a list of e-mails. Whenever a new e-mail comes in,
/// the list would update, but so would the unread count. If only one of these
/// two parts of the application was behind a repaint boundary, the entire
/// application would repaint each time. On the other hand, if both were behind
/// a repaint boundary, a new e-mail would only change those two parts of the
/// application and the rest of the application would not repaint.
///
/// To tell if a particular RenderRepaintBoundary is useful, run your
/// application in debug mode, interacting with it in typical ways, and then
/// call [debugDumpRenderTree]. Each RenderRepaintBoundary will include the
/// ratio of cases where the repaint boundary was useful vs the cases where it
/// was not. These counts can also be inspected programmatically using
/// [debugAsymmetricPaintCount] and [debugSymmetricPaintCount] respectively. ¿ÆTl ¿ÆÖ¿Æö./// Creates a repaint boundary around [child].¿Æù¿Æ©  ¿Æ≥¿Æ∏¿Ææ¿Æπ¿∫«!¿∫À ¿∫Á¿Ω˝"¿æ ¿æ¿Æƒ/¿ÆŸ   ¿Æƒ¿Æ≈¿∏9Çã¿∫éÇ6/// The number of times that this render object repainted at the same time as
/// its parent. Repaint boundaries are only useful when the parent and child
/// paint at different times. When both paint at the same time, the repaint
/// boundary is redundant, and may be actually making performance worse.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugAsymmetricPaintCount]
/// for the corresponding count of times where only the parent or only the
/// child painted.   ¿∫ÌÉ¿Ω¬Ç≤/// The number of times that either this render object repainted without the
/// parent being painted, or the parent repainted without this object being
/// painted. When a repaint boundary is used at a seam in the render tree
/// where the parent tends to repaint at entirely different times than the
/// child, it can improve performance by reducing the number of paint
/// operations that have to be recorded each frame.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugSymmetricPaintCount] for
/// the corresponding count of times where both the parent and the child
/// painted together.   ¿Æ˜â>¿∑fáÁ/// Capture an image of the current state of this render object and its
/// children.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImage], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to a PNG:
///
/// ```dart
/// class PngHome extends StatefulWidget {
///   const PngHome({super.key});
///
///   @override
///   State<PngHome> createState() => _PngHomeState();
/// }
///
/// class _PngHomeState extends State<PngHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   Future<void> _capturePng() async {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = await boundary.toImage();
///     final ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);
///     final Uint8List pngBytes = byteData!.buffer.asUint8List();
///     print(pngBytes);
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _capturePng,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImage] for a similar API at the layer level.
///  * [dart:ui.Scene.toImage] for more information about the image returned. ¿∑p¿∑x  ¿∑Ñ¿æ$ÅI¿æ‹Ä™/// Resets the [debugSymmetricPaintCount] and [debugAsymmetricPaintCount]
/// counts to zero.
///
/// Only valid when asserts are enabled. Does nothing in release builds.   ¿øqÅ6¿øÇ  ¿ø¶¿ø¨  ¿ø¬¿ø»  ¿øq¿ør¿øº¿ø◊¿¿´á∞¿¿º  ¿¿–&¿¿Ì  ¿¿´¿¿¨ ¿»_ç¿ÀÇ¥/// A render object that is invisible during hit testing.
///
/// When [ignoring] is true, this render object (and its subtree) is invisible
/// to hit testing. It still consumes space during layout and paints its child
/// as usual. It just cannot be the target of located events, because its render
/// object returns false from [hitTest].
///
/// When [ignoringSemantics] is true, the subtree will be invisible to
/// the semantics layer (and thus e.g. accessibility tools). If
/// [ignoringSemantics] is null, it uses the value of [ignoring].
///
/// See also:
///
///  * [RenderAbsorbPointer], which takes the pointer events but prevents any
///    nodes in the subtree from seeing them. ¿ÀIÅÀ ¿Ã-¿Ã@Ä€/// Creates a render object that is invisible to hit testing.
///
/// The [ignoring] argument must not be null. If [ignoringSemantics] is null,
/// this render object will be ignored for semantics if [ignoring] is true.¿ÃG¿ÃS  ¿Ã]¿Ãc  ¿Ãw¿Ã~  ¿Ãm¿Ã°¿Ãó¿Ã£¿Ã«¿Ã¥¿Ã…¿Ã„¿ÃË¿ÃÓ¿ÃÈ¿Œ¿Œ#  ¿–<¿–B  ¿ÕÅ¿ŒÄ€/// Whether this render object is ignored during hit testing.
///
/// Regardless of whether this render object is ignored during hit testing, it
/// will still consume space during layout and be visible during painting.   ¿Œ0ÄË¿Œ4  ¿Œ=
¿ŒC   ¿œÅ¿–Ä‡/// Whether the semantics of this render object is ignored when compiling the semantics tree.
///
/// If null, defaults to value of [ignoring].
///
/// See [SemanticsNode] for additional information about the semantics tree.   ¿–XÅ'¿–\  ¿–n¿–u   ¿—ÉF¿—å    ¿—ÕÄò¿—ﬁ  ¿—Ê¿—¯  ¿“¿“  ¿—Õ¿—Œ¿”Ä£¿”&  ¿”@¿”U  ¿”¿”¿”ºÅ¨¿”Õ  ¿”·&¿”˛  ¿”º¿”Ω ¿’lç@¿÷)Ä∂/// Lays the child out as if it was in the tree, but without painting anything,
/// without making the child available for hit testing, and without taking any
/// room in the parent. ¿÷SÄº ¿÷|¿÷ä&/// Creates an offstage render object.¿÷ë¿÷ó  ¿÷´¿÷∑  ¿÷°¿÷ƒ¿÷ ¿÷€¿÷‘¿÷À¿÷◊¿÷Ô¿÷Â¿÷Ò¿◊¿◊¿◊¿◊¿ÿÑ¿ÿâ  ¿◊Ån¿ÿkÅ@/// Whether the child is hidden from the rest of the tree.
///
/// If true, the child is laid out as if it was in the tree, but without
/// painting anything, without making the child available for hit testing, and
/// without taking any room in the parent.
///
/// If false, the child is included in the tree as normal.   ¿ÿñÄØ¿ÿö  ¿ÿ£
¿ÿ©   ¿‹í/¿‹ß   ¿‹í¿‹ì¿ŸIÄü¿Ÿ\  ¿Ÿu¿Ÿ}  ¿ŸI¿ŸJ¿ŸÏÄü¿Ÿˇ  ¿⁄¿⁄   ¿ŸÏ¿ŸÌ¿⁄èÄü¿⁄¢  ¿⁄º¿⁄ƒ  ¿⁄è¿⁄ê¿€2Äü¿€E  ¿€_¿€g  ¿€2¿€3¿€’Äπ¿€È  ¿‹	¿‹  ¿€’¿€÷¿‹≈Ä∞¿‹÷  ¿‹Á¿‹˜  ¿‹≈¿‹∆¿›yW¿›ä   ¿›y¿›z¿›‘Äå¿›Â   ¿›‘¿›’¿ﬁdÄò¿ﬁu  ¿ﬁ}¿ﬁè  ¿ﬁò¿ﬁ©  ¿ﬁd¿ﬁe¿ﬂ k¿ﬂ  ¿ﬂ¿ﬂ(  ¿ﬂ ¿ﬂ¿ﬂoÄé¿ﬂÄ  ¿ﬂÜ¿ﬂó  ¿ﬂü¿ﬂß  ¿ﬂo¿ﬂp¿‡Ä£¿‡  ¿‡,¿‡A  ¿‡¿‡¿‡®Ä¬¿‡π  ¿‡Õ&¿‡Í  ¿‡®¿‡©¿·nÅ<¿·ê   ¿·n¿·o ¿‚Æã†¿‰˝ÇH/// A render object that absorbs pointers during hit testing.
///
/// When [absorbing] is true, this render object prevents its subtree from
/// receiving pointer events by terminating hit testing at itself. It still
/// consumes space during layout and paints its child as usual. It just prevents
/// its children from being the target of located events, because its render
/// object returns true from [hitTest].
///
/// See also:
///
///  * [RenderIgnorePointer], which has the opposite effect: removing the
///    subtree from considering entirely for the purposes of hit testing. ¿Â,Åg ¿Â´¿Âæx/// Creates a render object that absorbs pointers during hit testing.
///
/// The [absorbing] argument must not be null.¿Â≈¿Â—  ¿Â€¿Â·  ¿Âˆ¿Â˝  ¿ÂÏ¿Ê¿Ê¿Ê.¿Ê'¿Ê¿Ê*¿ÊC¿Ê8¿ÊE¿Êj¿ÊW¿Êl¿ÊÜ¿Êã¿Êë¿Êå¿Á±¿Á∂  ¿È†¿È¶  ¿ÊóÅ¿ÁñÄÎ/// Whether this render object absorbs pointers during hit testing.
///
/// Regardless of whether this render object absorbs pointers during hit
/// testing, it will still consume space during layout and be visible during
/// painting.   ¿ÁƒÄ∑¿Á»  ¿Á“
¿Áÿ   ¿ËÅ¿ÈuÄ·/// Whether the semantics of this render object is ignored when compiling the semantics tree.
///
/// If null, defaults to value of [absorbing].
///
/// See [SemanticsNode] for additional information about the semantics tree.   ¿ÈºÅ'¿È¿  ¿È“¿ÈŸ   ¿ÍÁG¿Í    ¿Î2Ä¡¿ÎC  ¿ÎK¿Î]  ¿Îf¿Îw  ¿Î2¿Î3¿Î˜Ä£¿Ï  ¿Ï"¿Ï7  ¿Î˜¿Î¯¿ÏûÅÆ¿ÏØ  ¿Ï√&¿Ï‡  ¿Ïû¿Ïü ¿ÓPÉs¿ÔõÅD/// Holds opaque meta data in the render tree.
///
/// Useful for decorating the render tree with information that will be consumed
/// later. For example, you could store information in the render tree that will
/// be used when the user interacts with the render tree but has no visual
/// impact prior to the interaction. ¿ÔÿÄÿ ¿b¿pÄÉ/// Creates a render object that hold opaque meta data.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿w¿}  ¿ä¿ë  ¿û¿•   ¿¥C¿Ô0/// Opaque meta data ignored by the render tree.  ¿¸Ä≈¿Ò  ¿Ò!&¿Ò>  ¿¸¿˝ ¿Ò≈õ ¿Ú.b/// Listens for the specified gestures from the semantics server (e.g.
/// an accessibility tool). ¿ÚzÇy ¿Û¿Û,Äé/// Creates a render object that listens for specific semantic gestures.
///
/// The [scrollFactor] and [behavior] arguments must not be null.¿Û3¿Û:  ¿ÛD¿ÛY  ¿Ûc%¿Û~  ¿Ûé1¿Û™  ¿Û≈/¿Û·  ¿Û˙¿Ù   ¿Ù¿Ù  ¿Ù¿Ù.¿Ù4¿ÙI¿ÙB¿Ù5¿ÙE¿ÙZ¿ÙS¿Ù\¿Ùw¿Ùj¿Ùy¿Ù•¿Ùç¿Ùß¿Ù‹¿Ù∆¿Ùﬁ¿¯	#¿¯  ¿˘S¿˘g  ¿˙Ô&¿˚	  ¿¸π2¿¸‘  ¿˛ß0¿˛¬  ¿ Å2¿2Å/// The fraction of the dimension of this render box to use when
/// scrolling. For example, if this is 0.8 and the box is 200 pixels
/// wide, then when a left-scroll action is received from the
/// accessibility system, it will translate into a 160 pixel
/// leftwards drag. 
¿Ù˜É¿˜ËÇº/// If non-null, the set of actions to allow. Other actions will be omitted,
/// even if their callback is provided.
///
/// For example, if [onTap] is non-null but [validActions] does not contain
/// [SemanticsAction.tap], then the semantic description of this node will
/// not claim to support taps.
///
/// This is normally used to filter the actions made available by
/// [onHorizontalDragUpdate] and [onVerticalDragUpdate]. Normally, these make
/// both the right and left, or up and down, actions available. For example,
/// if [onHorizontalDragUpdate] is set but [validActions] only contains
/// [SemanticsAction.scrollLeft], then the [SemanticsAction.scrollRight]
/// action will be omitted.   ¿¯0Äæ¿¯4  ¿¯A¿¯X   ¿¯Ú^¿˘@3/// Called when the user taps on the render object.   ¿˘qÄÍ¿˘u  ¿˘{¿˘ê   ¿˙_Äç¿˙–P/// Called when the user presses on the render object for a long period of time.   ¿˚Å¿˚  ¿˚)¿˚D   ¿¸%Äë¿¸Ñ=/// Called when the user scrolls to the left or to the right.   ¿¸ÔÅ5¿¸Û  ¿˝
 ¿˝&   ¿˛(|¿˛v,/// Called when the user scrolls up or down.   ¿˛€Å-¿˛ﬂ  ¿˛Ù ¿ˇ   ¿CÉ¶¿T  ¿s¿ã  ¿C¿D¿Ìt¿Ú  ¿¿   ¿eÅW¿j    ¿¿ÅW¿≈    ¿ÅR¿     ¿	qÅS¿	v    ¿
»Å˚¿
Ÿ  ¿
Ì&¿
  ¿
»¿
… ¿«∑¿
</// Add annotations to the [SemanticsNode] for this subtree. ¿@É ¿+¿EÄ‡/// Creates a render object that attaches a semantic annotation.
///
/// The [container] argument must not be null.
///
/// If the [SemanticsProperties.attributedLabel] is not null, the [textDirection] must also not be null.¿L¿X  ¿b'¿Ä  ¿è¿ï  ¿´¿±  ¿–¿÷  ¿Û¿  ¿†¿≈¿Ë¿¿¿1¿*¿ ¿-¿G¿<¿I¿p¿\¿r¿†¿é¿¢¿À¿º¿Õ¿¿‰¿Ú¿¿¿¿
¿…¿›  ¿v¿{  ¿$¿)  ¿Ö¿ä  ¿ "¿   ¿ 1"¿ C  ¿ W+¿ i  ¿ Ü+¿ ò  ¿ µ!¿ «  ¿"è¿"û  
¿FÄÄ¿¨K/// All of the [SemanticsProperties] for this [RenderSemanticsAnnotations].   ¿ÏÄ·¿  ¿˚¿   ¿—Å¢¿[År/// If 'container' is true, this [RenderObject] will introduce a new
/// node in the semantics tree. Otherwise, the semantics will be
/// merged with the semantics of any ancestors.
///
/// Whether descendants of this [RenderObject] can add their semantic information
/// to the [SemanticsNode] introduced by this configuration is controlled by
/// [explicitChildNodes].   ¿âÄ§¿ç  ¿ó
¿ù   ¿1Ç¿˜Ç¢/// Whether descendants of this [RenderObject] are allowed to add semantic
/// information to the [SemanticsNode] annotated by this widget.
///
/// When set to false descendants are allowed to annotate [SemanticsNode]s of
/// their parent with the semantic information they want to contribute to the
/// semantic tree.
/// When set to true the only way for descendants to contribute semantic
/// information to the semantic tree is to introduce new explicit
/// [SemanticsNode]s to the tree.
///
/// This setting is often used in combination with
/// [SemanticsConfiguration.isSemanticBoundary] to create semantic boundaries
/// that are either writable or not for children.   ¿@Ä¿¿D  ¿W
¿]   ¿Å~¿\ÅB/// Whether descendants of this [RenderObject] should have their semantic
/// information ignored.
///
/// When this flag is set to true, all child semantics nodes are ignored.
/// This can be used as a convenience for cases where a child is wrapped in
/// an [ExcludeSemantics] widget and then another [Semantics] widget.   ¿üÄ∫¿£  ¿¥
¿∫   ¿ €Å±¿"lÅm/// If non-null, sets the [SemanticsNode.textDirection] semantic to the given
/// value.
///
/// This must not be null if [SemanticsProperties.attributedLabel],
/// [SemanticsProperties.attributedHint],
/// [SemanticsProperties.attributedValue],
/// [SemanticsProperties.attributedIncreasedValue], or
/// [SemanticsProperties.attributedDecreasedValue] are not null.   ¿"∞Äü¿"¥  ¿"¬¿"“   ¿]Å|¿b  ¿z¿è   ¿›Ä∑¿Ô  ¿	¿   ¿òÄ∑¿™  ¿ƒ¿Ÿ   ¿SÄ˙¿e  ¿è¿§   ¿QÄˇ¿c  ¿ç¿¢   ¿TÄ≥¿f  ¿¿î   ¿#SÄ´¿#d  ¿#~¿#ì  ¿#S¿#T¿$ò·¿$  ¿$2¿$J  ¿$¿$¿<Á7¿<Ï    ¿="C¿='    ¿=i?¿=n    ¿=¨E¿=±    ¿=ıG¿=˙    ¿>@A¿>E    ¿>ÖE¿>ä    ¿>ŒA¿>”    ¿?A¿?    ¿?X9¿?]    ¿?ï7¿?ö    ¿?–;¿?’    ¿@Äå¿@  ¿@9¿@?   ¿@üÄé¿@§  ¿@ ¿@–   ¿A1ÄÇ¿A6  ¿AV¿A\   ¿A∑ÄÑ¿Aº  ¿A›¿A„   ¿B?i¿BD  ¿BY¿Bh   ¿B¨N¿B±  ¿B¡¿B…   ¿B˛c¿C    ¿Cec¿Cj     ¿CÃÖ¿DƒÄÒ/// Causes the semantics of all earlier render objects below the same semantic
/// boundary to be dropped.
///
/// This is useful in a stack where an opaque mask should prevent interactions
/// with the render objects painted below the mask. ¿DÙÄ‘ ¿EP¿EdW/// Create a render object that blocks semantics for nodes below it in paint
/// order.¿Ek¿Ew  ¿EÅ¿Eá  ¿Eë¿E®¿Eû¿E™¿Eª¿E¿¿E∆¿E¡¿Fã¿Fê  ¿EÃÄº¿FrÄò/// Whether this render object is blocking semantics of previously painted
/// [RenderObject]s below a common semantics boundary from the semantic tree.   ¿FùÄ¢¿F°  ¿F™
¿F∞   ¿GCÄ…¿GT  ¿Gs¿Gã  ¿GC¿GD¿HÄ¬¿H!  ¿H5&¿HR  ¿H¿H ¿H÷É¿J:Å]/// Causes the semantics of all descendants to be merged into this
/// node such that the entire subtree becomes a single leaf in the
/// semantics tree.
///
/// Useful for combining the semantics of multiple render objects that
/// form part of a single conceptual widget, e.g. a checkbox, a label,
/// and the gesture detector that goes with them. ¿JjÄà ¿J∏¿JÃK/// Creates a render object that merges the semantics from its descendants.¿Jœ¿J€  ¿JÂ¿JÍ¿J¿JÎ  ¿JˆÄ„¿K  ¿K&¿K>  ¿Jˆ¿J˜ ¿K›Ñ·¿M
Å&/// Excludes this subtree from the semantic tree.
///
/// When [excluding] is true, this render object (and its subtree) is excluded
/// from the semantic tree.
///
/// Useful e.g. for hiding text that is redundant with other text next
/// to it (e.g. text included only for the visual effect). ¿M<ÄÎ ¿MÖ¿MõF/// Creates a render object that ignores the semantics of its subtree.¿M¢¿MÆ  ¿M∏¿Mæ  ¿M…¿M·¿M÷¿M„¿Mı¿M˙¿N ¿M˚¿Nî¿Nô  ¿N+f¿NyB/// Whether this render object is excluded from the semantic tree.   ¿NßÄ•¿N´  ¿Nµ
¿Nª   ¿OPÄ§¿Oa  ¿O{¿Oê  ¿OP¿OQ¿O¯Äƒ¿P	  ¿P&¿P:  ¿O¯¿O˘ ¿P¿ÑÍ¿ROÅà/// A render objects that annotates semantics with an index.
///
/// Certain widgets will automatically provide a child index for building
/// semantics. For example, the [ScrollView] uses the index of the first
/// visible child semantics node to determine the
/// [SemanticsConfiguration.scrollIndex].
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics. ¿RÅÄ‡ ¿R—¿RÁM/// Creates a render object that annotates the child semantics with an index.¿RÓ¿R˙  ¿S¿S  ¿S¿S%¿S3¿S,¿S&¿S/¿SD¿S=¿SF¿ST¿SY¿S_¿SZ¿S≥
¿S∑  ¿SeK¿S†0/// The index used to annotated child semantics.   ¿S¡|¿S≈  ¿SÀ	¿S–   ¿TAÄ®¿TR  ¿Tq¿Tâ  ¿TA¿TB¿TÌÄª¿T˛  ¿U&¿U/  ¿TÌ¿TÓ ¿U¨à\¿V{Ä»/// Provides an anchor for a [RenderFollowerLayer].
///
/// See also:
///
///  * [CompositedTransformTarget], the corresponding widget.
///  * [LeaderLayer], the layer that this render object creates. ¿V®ÄÔ ¿W
¿W[/// Creates a render object that uses a [LeaderLayer].
///
/// The [link] must not be null.¿W"¿W6  ¿W?¿WK  ¿WX¿W^¿Wk¿Wd¿W_¿Wg¿W{¿Wu¿W}¿Wä¿Wè¿Wï¿Wê¿X∑¿X¡  ¿ZÌ¿ZÛ  ¿WõÅ¿X¶ÄÚ/// The link object that connects this [RenderLeaderLayer] with one or more
/// [RenderFollowerLayer]s.
///
/// This property must not be null. The object must not be associated with
/// another [RenderLeaderLayer] that is also being painted.   ¿X Å	¿XŒ  ¿X”¿Xﬁ   ¿Y◊4¿YÏ   ¿Y◊¿Yÿ¿[}¿[   ¿[¿[¿[åÅ∑¿[ù  ¿[£¿[¥  ¿[º¿[ƒ  ¿[å¿[ç¿]GÄø¿]X  ¿]l&¿]â  ¿]G¿]H ¿^
ùÌ¿`.Ç/// Transform the child so that its origin is [offset] from the origin of the
/// [RenderLeaderLayer] with the same [LayerLink].
///
/// The [RenderLeaderLayer] in question must be earlier in the paint order.
///
/// Hit testing on descendants of this render object will only work if the
/// target position is within the box that this render object's parent considers
/// to be hittable.
///
/// See also:
///
///  * [CompositedTransformFollower], the corresponding widget.
///  * [FollowerLayer], the layer that this render object creates. ¿`]Çã ¿`ÿ¿`Ît/// Creates a render object that uses a [FollowerLayer].
///
/// The [link] and [offset] arguments must not be null.¿`Ú¿a  ¿a¿a  ¿a1¿a9  ¿aR*¿a]  ¿aÇ,¿aç  ¿a¥¿a¿  /¿a'¿aA¿aG¿aH¿ak¿at¿au¿aù¿a¶¿aß¿aÕ¿a”¿a‡¿aŸ¿a‘¿a‹¿aÍ¿a¿b	¿b¿aÒ¿b¿b¿b¿b(¿b!¿b¿b$¿b8¿b2¿b:¿bY¿bG¿b[¿b|¿bt¿b~¿bõ¿bç¿bù¿b¬¿b≤¿bƒ¿b€¿b‡¿bÊ¿b·¿cá¿cë  ¿fV¿f[  ¿gª¿g¬  ¿kZ¿kd  ¿mP¿mZ  ¿bÏÄò¿cvw/// The link object that connects this [RenderFollowerLayer] with a
/// [RenderLeaderLayer] earlier in the paint order.   ¿cöÄë¿cû  ¿c£¿cÆ   ¿d/Ç$¿f-Å‚/// Whether to show the render object's contents when there is no
/// corresponding [RenderLeaderLayer] with the same [link].
///
/// When the render object is linked, the child is positioned such that it has
/// the same global position as the linked [RenderLeaderLayer].
///
/// When the render object is not linked, then: if [showWhenUnlinked] is true,
/// the child is visible and not repositioned; if it is false, then child is
/// hidden, and its hit testing is also disabled.   ¿fpÄ∞¿ft  ¿fÖ
¿fã   ¿g$Äî¿g¶r/// The offset to apply to the origin of the linked [RenderLeaderLayer] to
/// obtain this render object's origin.   ¿gÕÄî¿g—  ¿gÿ¿g‡   ¿heÇÚ¿k9Ç©/// The anchor point on the linked [RenderLeaderLayer] that [followerAnchor]
/// will line up with.
///
/// {@template flutter.rendering.RenderFollowerLayer.leaderAnchor}
/// For example, when [leaderAnchor] and [followerAnchor] are both
/// [Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
/// with the linked [RenderLeaderLayer]. When [leaderAnchor] is
/// [Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
/// [RenderFollowerLayer] will be left aligned with the linked
/// [RenderLeaderLayer], and its top edge will line up with the
/// [RenderLeaderLayer]'s bottom edge.
/// {@endtemplate}
///
/// Defaults to [Alignment.topLeft].   ¿kuÄ©¿ky  ¿kÜ¿kë   ¿l"Å+¿m+ÄÓ/// The anchor point on this [RenderFollowerLayer] that will line up with
/// [followerAnchor] on the linked [RenderLeaderLayer].
///
/// {@macro flutter.rendering.RenderFollowerLayer.leaderAnchor}
///
/// Defaults to [Alignment.topLeft].   ¿mmÄØ¿mq  ¿mÄ¿mã   ¿ni4¿n~   ¿ni¿nj¿n°|¿nˆ3/// The layer we created when we were last painted.  ¿n◊¿nÿ¿n E¿n1   ¿n ¿n!¿o!Åü¿piÅ3/// Return the transform that was used in the last composition phase, if any.
///
/// If the [FollowerLayer] has not yet been created, was never composited, or
/// was unable to determine the transform (see
/// [FollowerLayer.getLastTransform]), this returns the identity matrix (see
/// [Matrix4.identity].   ¿pƒÅÏ¿p’  ¿p›¿pÔ  ¿p¯¿q	  ¿pƒ¿p≈¿r¥ÅV¿r≈  ¿r’¿rÁ  ¿r¿s  ¿r¥¿rµ¿tÖ±¿t  ¿t%¿t6  ¿t>¿tF  ¿t¿t¿y√}¿y‘  ¿yË¿yÛ  ¿y˘¿z  ¿y√¿yƒ¿zDÅ±¿zU  ¿zi&¿zÜ  ¿zD¿zE ¿{˘Üß¿|ÌÄÌ/// Render object which inserts an [AnnotatedRegionLayer] into the layer tree.
///
/// See also:
///
///  * [Layer.find], for an example of how this value is retrieved.
///  * [AnnotatedRegionLayer], the layer this render object creates.¿}¿}¿}1ÅÓ ¿~D¿~YÅ/// Creates a new [RenderAnnotatedRegion] to insert [value] into the
/// layer tree.
///
/// If [sized] is true, the layer is provided with the size of this render
/// object to clip the results of [Layer.find].
///
/// Neither [value] nor [sized] can be null.¿~`¿~l  ¿~v¿~Ö  ¿~è¿~õ  ¿~®¿~Æ¿~º¿~µ¿~Ø¿~∏¿~∆¿~Ã¿~⁄¿~”¿~Õ¿~÷¿~Î¿~‰¿~Ì¿¿~˚¿¿¿¿¿¿u¿w  ¿Äp¿Äu  ¿Ä˜4¿Å ¿Ä˜¿Ä¯¿Å'¿#O¿b6/// A value which can be retrieved using [Layer.find].   ¿Å{¿Ö  ¿å
¿è   ¿Ä m¿Ä]Q/// Whether the render object will pass its [size] to the [AnnotatedRegionLayer].   ¿Ät¿ÄÉ  ¿Äâ
¿Äè   ¿Å0Ån¿ÅA  ¿ÅG¿ÅX  ¿Å`¿Åh  ¿Å0¿Å1  ë~Ç0ëß#/// How to behave during hit tests.  ëªÄñíEÄÖ/// Targets that defer to their children receive events within their bounds
/// only if one of their children is hit by the hit test. íVÄΩìÄ∞/// Opaque targets can be hit by hit tests, causing them to both receive
/// events within their bounds and prevent targets visually behind them from
/// also receiving events. ìÄìì†ÄÉ/// Translucent targets both receive events within their bounds and permit
/// targets visually behind them to also receive events.    ¿”Ä ¿˝$/// Where to paint a box decoration.  ¿>¿H1/// Paint the box decoration behind the children. ¿WC¿ê6/// Paint the box decoration in front of the children.        	¿ è
Äø¿ èõÄà/// Signature for a function that creates a [Shader] for a given [Rect].
///
/// Used by [RenderShaderMask] and the [ShaderMask] widget.  ¿ èº¿ è¬   ¿}çÄª¿~q/// Signature for listening to [PointerDownEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿~0¿~B   ¿~JÄª¿~ƒq/// Signature for listening to [PointerMoveEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿~Ì¿~ˇ   ¿Äµ¿o/// Signature for listening to [PointerUpEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿¶¿∂   ¿æÄ¡¿Ä:s/// Signature for listening to [PointerCancelEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Äe¿Äy   ¿ÄÅÄ”¿Åy/// Signature for listening to [PointerPanZoomStartEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Å4¿ÅN   ¿ÅVÄ÷¿ÅŸz/// Signature for listening to [PointerPanZoomUpdateEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Ç¿Ç&   ¿Ç.ÄÕ¿ÇÆw/// Signature for listening to [PointerPanZoomEndEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Ç›¿Çı   ¿Ç˝Ä¡¿Éys/// Signature for listening to [PointerSignalEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿É§¿É∏   á ä\àíÄ¸/// Implementation of [RenderProxyBox].
///
/// Use this mixin in situations where the proxying behavior
/// of [RenderProxyBox] is desired but inheriting from [RenderProxyBox] is
/// impractical (e.g. because you want to mix in other classes as well).à¶à¶   àÎÅà¸  ââ  àÎàÏâÄ°ä  ää$  ââÒäïÄ°ä®  ä¡ä…  äïäñã:Ä°ãM  ãgão  ã:ã;ãﬂÄ°ãÚ  åå  ãﬂã‡åÑÄÊåò  å∏å∆  åÑåÖçnÄ¿ç  çêç†  çnçoé2Ä’éC   é2é3èÄÍèùÄà/// Calculate the size the [RenderProxyBox] would have under the given
/// [BoxConstraints] for the case where it does not have a child. è≥è√   è˘Äùê
  êê,  ê5êF  è˘è˙êöOê´  êøêÕ  ê”ê‹  êöêõêÌÄçê˛  ëë  ëë%  êÌêÓàzà{¿ }!é˝¿ ~bÅ:/// Implementation of [RenderAnimatedOpacity] and [RenderSliverAnimatedOpacity].
///
/// This mixin allows the logic of animating opacity to be used with different
/// layout models, e.g. the way that [RenderAnimatedOpacity] uses it for [RenderBox]
/// and [RenderSliverAnimatedOpacity] uses it for [RenderSliver].¿ ~}¿ ~} ¿ ~∫¿ ~ø  ¿ %!¿ +  ¿ Ç¿ Ç-  ¿ Ö¿ Ö  ¿ ~ X¿ ~ﬂ   ¿ ~ ¿ ~À¿ Ä+ÅÏ¿ ÇÅ¨/// The animation that drives this render object's opacity.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// To change the opacity of a child in a static manner, not animated,
/// consider [RenderOpacity] instead.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ Ç9ÅC¿ Ç=  ¿ ÇE¿ ÇX   ¿ ÉÄÅÇ¿ ÑœÅ5/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ Ö&Ä±¿ Ö*  ¿ ÖA
¿ ÖG   ¿ KÄ‹¿ c  ¿ z)¿ ú  ¿ K¿ L¿ Ö€Äª¿ ÖÏ  ¿ ÖÛ¿ Ü  ¿ Ö€¿ Ö‹¿ Üö_¿ Ü´   ¿ Üö¿ Üõ¿ Ü˝Ç¿ á    ¿ âv¿ â"  ¿ â.¿ â<  ¿ â¿ â¿ âãÄë¿ âú  ¿ â¢¿ â≥  ¿ âª¿ â√  ¿ âã¿ âå¿ ä ÄÆ¿ ä1  ¿ äK¿ ä`  ¿ ä ¿ ä!¿ ä“ÅJ¿ ä„  ¿ ä˜&¿ ã  ¿ ä“¿ ä” ¿ ÛH¿ Û+ ¿ Û?¿ ÛD¿ ÛE¿ ÛN¿ ÛF¿ ÛH¿ ÛP¿ ÛV¿ Û[¿ Ûf¿ Û\  ì∞ <ÄÜÄ§Ä•ÄÊÄÁÅÅ:ÅbÅãÅ≥Å¥Å«Å‹Å˘ÇÇÇ<ÇLÇ`ÇtÇÜÇúÇùÇ›Ç·É1ÉÉŒÑÑÑeÑ∂ÖÖÖÖ+Ö/ÖÖêÜÜ&Ü,Ü{Ü»Ü⁄ááááá áHáLáâá‘ààzàåàÈàıâ"ânâëâºâ„âÈâÌâÓâ˙ä-äFäxä~äéäíäìäüä“äÎãã#ã3ã7ã8ãDãwãêã¬ã»ãÿã‹ã›ãÈåå5ågåmå}åÅåÇåéå—åÍç%ç+çgçkçlçxçÆç«çˆç¸é+é/é0é<éUéné¶é¿éÕé˛èèè	èRèñè—èÚèˆè˜êêSêìêóêòê§êÍêÎê˜ë.ëGëqëwë{ë}ë~ë¢ëπííCíSíTíüíÓììììcìûì≠ìØì∞ìÔî	îSîÜîåî–îˆï(ï>ïSïTï|ïòïôï•ïÌñ	ñ,ñÑñ∆ñ˚óó	óó#ó$ó0ó{ó|óàóÕó¯òUòYò[ò\òçòëò‡ô)ôyôÜôäô⁄ö#ö@ötö™ö∞öˇõõ.õaõèõ úúúúWúùú∆ú˙ùù=ùhùvù|ù†ù∑ùªùºù»ù˚ûUûÉûâû ûÊüüUü[ümüqürü~ü±††9†?†Ä†ú†–°°°#°'°(°4°g°√°Ú°¯¢:¢W¢å¢…¢œ¢‚¢Ê¢Á¢Û£&£Ç£±£∑£˘§§K§à§é§°§•§¶§≤§À•••u•è•ú•Î•Ò•ı•ˆ¶¶8¶Q¶†¶≠¶¸ßßßßßSß~ßéßßßŸßÒ®®U®]®p®z®~®®ã®–®˚©d©h©j©k©§©Á©Î™8™É™Œ´´6´:´Ö´À´€¨¨\¨ë¨ó¨ﬁ¨Ú≠≠≠D≠l≠†≠÷≠ÛÆÆ'Æ(Æ}Æ°ÆµÆ‘ÆˇØØ+Ø1ØHØ_ØcØdØªØ·Øˆ∞∞A∞`∞n∞t∞å∞£∞ß∞®∞È±±*±ï±Ω≤-≤4≤8≤9≤õ≤¥≥≥5≥;≥{≥≥Ä≥å≥¬≥€≥˚¥0¥7¥;¥<¥H¥a¥z¥ö¥Ã¥”¥◊¥ÿ¥‰µ)µTµ≠∂∂∂∂∂J∂N∂ö∂È∑7∑;∑É∑”∏∏∏\∏™∏˘π@πDπêπ·∫2∫Ä∫Œªªjª∏ººKºãººº˘ºˇΩBΩXΩnΩèΩ≥Ω’Ω˙ææ2æ3æ]æcæ≥æ˙ø$ø;ø]øxøëø≠øŒø‹ø‚ø¸¿ @¿ @¿ @¿ @$¿ @W¿ @r¿ @ñ¿ @ú¿ @µ¿ @Á¿ @Ì¿ @˝¿ A¿ A¿ A¿ AA¿ A\¿ AÄ¿ AÜ¿ Aü¿ A—¿ A◊¿ AÁ¿ AÎ¿ AÏ¿ A¯¿ B+¿ BE¿ Bh¿ Bn¿ Bá¿ Bπ¿ Bø¿ Bœ¿ B”¿ B‘¿ B‡¿ C¿ C-¿ CP¿ CV¿ Co¿ C°¿ Cß¿ C∑¿ Cª¿ Cº¿ CÛ¿ D!¿ D1¿ D|¿ Dò¿ DŒ¿ E%¿ Ev¿ E»¿ EÊ¿ EÒ¿ E˘¿ F¿ F¿ F¿ F6¿ FY¿ F_¿ F`¿ Fâ¿ Fú¿ Fù¿ FÍ¿ G6¿ GM¿ Gg¿ Gå¿ Gô¿ Gø¿ G‰¿ GÍ¿ GÎ¿ H9¿ HÉ¿ Hœ¿ HÊ¿ HÁ¿ I¿ I3¿ IX¿ I^¿ I_¿ Iâ¿ IØ¿ I‘¿ I⁄¿ I€¿ J¿ J'¿ JL¿ JR¿ JS¿ J}¿ J£¿ J»¿ JŒ¿ Jœ¿ K¿ K
¿ K¿ K¿ KM¿ Kx¿ K|¿ K}¿ Kâ¿ K¢¿ KÃ¿ KÂ¿ L¿ L¿ L ¿ L!¿ L-¿ Lr¿ Lù¿ L›¿ L·¿ L„¿ L‰¿ M ¿ M$¿ Mq¿ M¡¿ Mı¿ M˘¿ NE¿ Nï¿ N·¿ O+¿ Ox¿ O†¿ O§¿ OÙ¿ P@¿ P~¿ PÇ¿ Pœ¿ Q¿ Ql¿ QÉ¿ Qá¿ Qï¿ Qô¿ QË¿ R/¿ R}¿ Rê¿ R‹¿ S¿ Sl¿ S†¿ S‘¿ T$¿ T*¿ Tz¿ Tõ¿ T¥¿ TÀ¿ T„¿ T˘¿ U.¿ Ue¿ UÑ¿ U•¿ U∫¿ Uª¿ V¿ V¿ V4¿ V[¿ Vq¿ Ví¿ Vº¿ V€¿ VÈ¿ VÔ¿ W¿ W¿ W"¿ W#¿ Wo¿ Wu¿ Wù¿ W∆¿ W›¿ Wˇ¿ X)¿ XI¿ XW¿ X]¿ Xv¿ Xç¿ Xë¿ Xí¿ XÀ¿ XÁ¿ Xˇ¿ Y¿ Y¿ YB¿ YF¿ YG¿ YS¿ YÜ¿ Y≥¿ Y∑¿ Y∏¿ Yƒ¿ Y˜¿ Z¿ Z"¿ Z(¿ Zf¿ Zê¿ Zî¿ Zï¿ Z°¿ Z‘¿ ZÌ¿ Zˇ¿ [¿ [ ¿ [Y¿ [_¿ [{¿ [∫¿ [Ê¿ [Í¿ [Î¿ [˜¿ \*¿ \C¿ \U¿ \[¿ \v¿ \Ø¿ \µ¿ \—¿ ]¿ ]<¿ ]@¿ ]A¿ ]¢¿ ]ª¿ ]„¿ ^4¿ ^T¿ ^•¿ ^≠¿ ^Œ¿ _ ¿ _A¿ _ï¿ _ù¿ _Ã¿ _Ÿ¿ _¸¿ `¿ `¿ `¿ `¿ `I¿ `b¿ `ó¿ `∑¿ `æ¿ `¬¿ `√¿ `œ¿ `Ë¿ a¿ a3¿ aS¿ aZ¿ a^¿ a_¿ ak¿ a∞¿ a€¿ b¿ bU¿ bY¿ b[¿ b\¿ bë¿ bï¿ b„¿ c3¿ ch¿ cl¿ c∏¿ d¿ dV¿ d°¿ dÔ¿ e¿ e¿ ei¿ e∑¿ f¿ f¿ f!¿ f/¿ f3¿ fÇ¿ f ¿ g¿ g,¿ g{¿ gø¿ h¿ hC¿ hx¿ h…¿ h„¿ h˘¿ i¿ i¿ i¿ iN¿ ig¿ iy¿ i¿ iõ¿ iŸ¿ iﬂ¿ i¸¿ j,¿ j0¿ j1¿ j=¿ jp¿ jâ¿ jõ¿ j°¿ jΩ¿ j˚¿ k¿ k¿ kN¿ kR¿ kS¿ k_¿ kí¿ kø¿ k√¿ kƒ¿ l%¿ l>¿ lg¿ lπ¿ l⁄¿ m¿ m¿ mL¿ mY¿ m|¿ mÇ¿ mÜ¿ má¿ mì¿ m…¿ m‚¿ n¿ n7¿ n>¿ nB¿ nC¿ nO¿ nh¿ nÅ¿ n≥¿ n”¿ n⁄¿ nﬁ¿ n‡¿ n·¿ o¿ o¿ o`¿ oï¿ oô¿ o‰¿ p.¿ p}¿ pÕ¿ p˙¿ q/¿ q5¿ qz¿ qå¿ q¶¿ qœ¿ qÂ¿ r¿ r6¿ re¿ rÄ¿ rπ¿ r¿ s¿ s¿ s¿ sT¿ sU¿ sc¿ sd¿ sô¿ sü¿ sÔ¿ t¿ t¿ t2¿ t8¿ t|¿ t√¿ t‘¿ tˆ¿ u	¿ u'¿ uB¿ ul¿ uâ¿ uó¿ uù¿ uŸ¿ v¿ v¿ vM¿ vÖ¿ v≠¿ v≥¿ v…¿ w¿ w-¿ w3¿ w7¿ w8¿ w~¿ wÑ¿ w¬¿ w»¿ w·¿ x¿ x?¿ xj¿ xñ¿ x§¿ x™¿ xœ¿ xÔ¿ xÛ¿ xÙ¿ y ¿ y&¿ yH¿ y_¿ yc¿ yd¿ yp¿ yß¿ y¿¿ yŒ¿ y‘¿ yÎ¿ z4¿ zH¿ zV¿ z\¿ z]¿ z{¿ z€¿ zÎ¿ {¿ {(¿ {2¿ {6¿ {7¿ {C¿ {É¿ {«¿ {ﬁ¿ {‰¿ {Ë¿ {È¿ {ı¿ |:¿ |e¿ |ù¿ }¿ }¿ } ¿ }!¿ }r¿ }v¿ }≈¿ ~¿ ~\¿ ~∏¿ ~«¿ ~»¿ ~‘¿ #¿ H¿ I¿ U¿ ®¿ Í¿ Ä¿ Ä$¿ Ä(¿ Ä)¿ Äg¿ Äm¿ ÄΩ¿ Ä÷¿ Ä‹¿ Å%¿ ÅM¿ ÅS¿ Å£¿ ÅÍ¿ Ç¿ Ç7¿ Ç`¿ Ç{¿ Çò¿ Ç¶¿ Ç¨¿ Ç‘¿ É¿ É¿ É¿ É2¿ É]¿ Éc¿ Éy¿ É}¿ É~¿ Éƒ¿ É ¿ Ñ¿ Ñ¿ Ñ'¿ Ñ-¿ Ñ}¿ Ñƒ¿ Ö¿ Ö$¿ ÖO¿ Ö{¿ Öâ¿ Öè¿ Ö¥¿ Ö‘¿ Öÿ¿ ÖŸ¿ ÖÂ¿ Ü
¿ Ü#¿ ÜL¿ Üì¿ Üó¿ Üò¿ Ü§¿ Ü∂¿ Ü‚¿ Üˆ¿ Ü˙¿ Ü˚¿ á¿ á7¿ áq¿ áè¿ á”¿ à¿ àT¿ à~¿ àÜ¿ àÆ¿ àÿ¿ à¸¿ â¿ â
¿ â¿ â¿ â¿ âD¿ âf¿ âÑ¿ âà¿ ââ¿ âï¿ âÃ¿ â„¿ âÒ¿ â˜¿ ä¿ ä¿ ä¿ ä*¿ äj¿ äÆ¿ ä≈¿ äÀ¿ äœ¿ ä–¿ ä‹¿ ã!¿ ãL¿ ãú¿ å¿ å¿ å¿ å ¿ åg¿ åk¿ åº¿ åË¿ ç]¿ çí¿ çò¿ ç«¿ ç·¿ é	¿ é2¿ éH¿ éh¿ éó¿ é≠¿ é…¿ è¿ è¿ è	¿ è
¿ èS¿ èW¿ èì¿ è ¿ èÀ¿ ê¿ ê¿ êW¿ êå¿ êº¿ ë¿ ë¿ ëa¿ ëv¿ ëå¿ ë∏¿ ëÊ¿ í¿ í/¿ íX¿ íw¿ íå¿ íç¿ íô¿ í⁄¿ í€¿ ì¿ ì¿ ìn¿ ì∑¿ ìΩ¿ ì˝¿ î¿ îe¿ îù¿ î’¿ î˜¿ ï$¿ ï?¿ ïc¿ ïq¿ ïw¿ ïî¿ ï™¿ ïÆ¿ ïØ¿ ïÛ¿ ï˘¿ ñH¿ ñì¿ ñº¿ ñ‘¿ ñ˜¿ ó¿ ó1¿ ó?¿ óE¿ ó]¿ ós¿ ów¿ óx¿ óÑ¿ ó∏¿ óπ¿ ó≈¿ ó¸¿ ò¿ ò5¿ òX¿ òe¿ òú¿ òø¿ ò·¿ ô¿ ô)¿ ôU¿ ôj¿ ôv¿ ôÉ¿ ôó¿ ôù¿ ô°¿ ô£¿ ô§¿ ôÚ¿ ôˆ¿ öF¿ öZ¿ öé¿ öØ¿ öµ¿ ö„¿ õ!¿ õP¿ õ∆¿ õ‰¿ ú¿ ú¿ ú;¿ úO¿ úP¿ ú\¿ ú•¿ ú¶¿ úˆ¿ ù¿ ù¿ ùZ¿ ùm¿ ùï¿ ùØ¿ ù‘¿ ùÔ¿ û¿ û¿ û¿ û4¿ ûJ¿ ûN¿ ûO¿ û®¿ û∑¿ ûΩ¿ ûı¿ ü¿ ü6¿ üY¿ üt¿ üì¿ ü°¿ üß¿ üø¿ ü’¿ üŸ¿ ü⁄¿ üÊ¿ †¿ †¿ †'¿ †^¿ †w¿ †ó¿ †æ¿ †›¿ °¿ °8¿ °J¿ °v¿ °ã¿ °ó¿ °§¿ °∏¿ °æ¿ °¬¿ °ƒ¿ °≈¿ °Ú¿ °ˆ¿ ¢?¿ ¢P¿ ¢T¿ ¢•¿ ¢©¿ ¢Ú¿ £>¿ £O¿ £S¿ £û¿ £Ï¿ §=¿ §ç¿ §ë¿ §ü¿ §£¿ §Ï¿ •7¿ •Ä¿ •…¿ ¶¿ ¶M¿ ¶m¿ ¶s¿ ¶ƒ¿ ß¿ ß¿ ß$¿ ß%¿ ßh¿ ßn¿ ßΩ¿ ®¿ ®$¿ ®0¿ ®}¿ ®~¿ ®Œ¿ ®ˇ¿ ©¿ ©T¿ ©§¿ ©ª¿ ©«¿ ™¿ ™¿ ™f¿ ™ä¿ ™¢¿ ™£¿ ™Ë¿ ´+¿ ´_¿ ´e¿ ´©¿ ´¿ ¨3¿ ¨z¿ ¨∫¿ ¨ª¿ ≠¿ ≠Y¿ ≠™¿ ≠˚¿ Æ¿ ÆI¿ Æò¿ Æ•¿ Æ´¿ Æ˘¿ Ø¿ Ø¿ ØQ¿ Øù¿ Ø—¿ ∞¿ ∞¿ ∞¿ ∞[¿ ∞]¿ ∞^¿ ∞•¿ ∞‹¿ ±¿ ±	¿ ±6¿ ±<¿ ±Ñ¿ ±”¿ ≤ ¿ ≤c¿ ≤Ä¿ ≤ô¿ ≤±¿ ≤œ¿ ≤–¿ ≥¿ ≥*¿ ≥+¿ ≥s¿ ≥y¿ ≥ƒ¿ ≥Î¿ ¥¿ ¥¿ ¥G¿ ¥S¿ ¥o¿ ¥¿¿ ¥ƒ¿ ¥≈¿ ¥—¿ µ¿ µ?¿ µR¿ µX¿ µ©¿ µ”¿ ∂¿ ∂¿ ∂¿ ∂¿ ∂R¿ ∂h¿ ∂~¿ ∂ù¿ ∂≈¿ ∂Í¿ ∑¿ ∑*¿ ∑?¿ ∑@¿ ∑~¿ ∑´¿ ∑…¿ ∑˜¿ ∏¿ ∏'¿ ∏-¿ ∏`¿ ∏{¿ ∏±¿ ∏Â¿ π!¿ πP¿ πh¿ πn¿ πÇ¿ π¥¿ π„¿ πÈ¿ πÌ¿ πÓ¿ π˙¿ ∫¿ ∫8¿ ∫c¿ ∫g¿ ∫h¿ ∫t¿ ∫Ü¿ ∫¥¿ ∫»¿ ∫Ã¿ ∫Õ¿ ∫Á¿ ∫˘¿ ª¿ ª/¿ ª3¿ ª4¿ ªJ¿ ªV¿ ªW¿ ªÅ¿ ª¢¿ ªƒ¿ ª·¿ ª˘¿ ªˇ¿ º¿ º¿ º¿ º&¿ º?¿ ºp¿ ºã¿ º¶¿ º∫¿ º¿¿ ºƒ¿ º≈¿ º‹¿ Ω¿ Ω¿ Ω¿ Ω$¿ Ω_¿ Ω{¿ Ωë¿ Ω¶¿ Ω¿¿ Ω€¿ æ¿ æP¿ æV¿ æZ¿ æ[¿ æq¿ æå¿ æò¿ æÿ¿ æË¿ ø¿ ø-¿ øD¿ øh¿ øﬂ¿ ¿¿ ¿(¿ ¿2¿ ¿N¿ ¿v¿ ¿ò¿ ¿∂¿ ¿À¿ ¿Á¿ ¡¿ ¡+¿ ¡:¿ ¡G¿ ¡ô¿ ¡£¿ ¡∑¿ ¡ ¿ ¡‘¿ ¡ÿ¿ ¡⁄¿ ¡€¿ ¬¿ ¬¿ ¬T¿ ¬•¿ ¬ª¿ ¬Ú¿ √¿ √¿ √j¿ √{¿ √Å¿ √¡¿ √Ò¿ ƒ¿ ƒ¿ ƒ(¿ ƒ@¿ ƒe¿ ƒf¿ ƒr¿ ƒ°¿ ƒ¢¿ ƒÆ¿ ƒˆ¿ ≈¿ ≈'¿ ≈D¿ ≈l¿ ≈Ç¿ ≈ä¿ ≈ê¿ ≈∆¿ ≈ ¿ ≈À¿ ≈◊¿ ∆¿ ∆'¿ ∆N¿ ∆e¿ ∆ã¿ ∆ß¿ ∆π¿ ∆À¿ ∆‚¿ «¿ «5¿ «@¿ «O¿ «{¿ «ë¿ «ô¿ «¶¿ «∫¿ «¿¿ «ƒ¿ «≈¿ «—¿ »¿ »!¿ »<¿ »k¿ »î¿ »€¿ …X¿ …b¿ …j¿ …}¿ …á¿ …ã¿ …ç¿ …é¿ …Ω¿ …¡¿  ¿  _¿  u¿  Æ¿  ÿ¿  ﬁ¿ À.¿ ÀJ¿ ÀP¿ Àê¿ Àñ¿ Àﬂ¿ Ã¿ Ã#¿ Ã4¿ Ão¿ Ãí¿ Ã™¿ ÃÃ¿ ÃÒ¿ Õ¿ Õ=¿ Õ^¿ Õî¿ Õò¿ Õô¿ Õ…¿ Õœ¿ Œ¿ Œ5¿ Œ;¿ Œq¿ Œ´¿ Œ—¿ œ¿ œ¿ œ?¿ œM¿ œS¿ œn¿ œÑ¿ œà¿ œâ¿ œ»¿ œ˛¿ –¿ –K¿ –n¿ –|¿ –Ç¿ –û¿ –¥¿ –∏¿ –π¿ –≈¿ —#¿ —$¿ —0¿ —x¿ —î¿ —©¿ —∆¿ —Ó¿ “¿ “¿ “¿ “H¿ “L¿ “M¿ “Y¿ “ê¿ “©¿ “–¿ “Á¿ ”¿ ”*¿ ”<¿ ”X¿ ”j¿ ”Å¿ ”ß¿ ”’¿ ”‡¿ ”Ô¿ ‘¿ ‘1¿ ‘9¿ ‘F¿ ‘Z¿ ‘`¿ ‘d¿ ‘e¿ ‘q¿ ‘±¿ ‘¡¿ ‘‹¿ ’¿ ’4¿ ’|¿ ’˜¿ ÷¿ ÷	¿ ÷¿ ÷&¿ ÷*¿ ÷,¿ ÷-¿ ÷P¿ ÷T¿ ÷¢¿ ÷Î¿ ◊5¿ ◊l¿ ◊è¿ ◊ï¿ ◊Â¿ ÿ¿ ÿ¿ ÿQ¿ ÿÅ¿ ÿî¿ ÿ•¿ ÿ∏¿ ÿ–¿ ÿı¿ ÿˆ¿ Ÿ¿ Ÿ$¿ Ÿ%¿ ŸF¿ Ÿe¿ Ÿ¿ Ÿ≤¿ Ÿ∏¿ Ÿ–¿ Ÿ‘¿ Ÿ’¿ Ÿ·¿ ⁄¿ ⁄¿ ⁄¿ ⁄e¿ ⁄x¿ ⁄ì¿ ⁄º¿ €¿ €*¿ €Z¿ €ã¿ €í¿ €«¿ ‹¿ ‹¿ ‹¿ ‹S¿ ‹W¿ ‹X¿ ‹d¿ ‹õ¿ ‹¥¿ ‹€¿ ‹Ú¿ ›¿ ›4¿ ›F¿ ›X¿ ›x¿ ›è¿ ›µ¿ ›‚¿ ›Ì¿ ›¸¿ ﬁ(¿ ﬁ>¿ ﬁF¿ ﬁS¿ ﬁg¿ ﬁm¿ ﬁq¿ ﬁr¿ ﬁ~¿ ﬁæ¿ ﬁŒ¿ ﬁÈ¿ ﬂ¿ ﬂA¿ ﬂñ¿ ‡)¿ ‡3¿ ‡;¿ ‡N¿ ‡X¿ ‡\¿ ‡^¿ ‡_¿ ‡Å¿ ‡Ö¿ ‡ ¿ ·¿ ·¿ ·M¿ ·k¿ ·o¿ ·©¿ ·È¿ ‚,¿ ‚c¿ ‚~¿ ‚Ñ¿ ‚’¿ „"¿ „r¿ „Ö¿ „ã¿ „‘¿ ‰¿ ‰¿ ‰(¿ ‰;¿ ‰S¿ ‰x¿ ‰y¿ ‰Ö¿ ‰≈¿ ‰∆¿ ‰“¿ Â¿ Â6¿ ÂK¿ Âh¿ Âê¿ Â¶¿ ÂÆ¿ Â¥¿ ÂÍ¿ ÂÓ¿ ÂÔ¿ Â˚¿ Ê2¿ ÊK¿ Êr¿ Êâ¿ ÊØ¿ ÊÀ¿ Ê›¿ Ê˚¿ Á¿ Á$¿ ÁJ¿ Áw¿ ÁÇ¿ Áë¿ ÁΩ¿ Á”¿ Á€¿ ÁË¿ Á¸¿ Ë¿ Ë¿ Ë¿ Ë¿ ËS¿ Ëc¿ Ë~¿ Ë≠¿ Ë÷¿ È¿ ÈR¿ È\¿ Èd¿ Èw¿ ÈÅ¿ ÈÖ¿ Èá¿ Èà¿ ÈÃ¿ È–¿ Í!¿ ÍW¿ Í°¿ ÍÓ¿ Î(¿ ÎE¿ Î_¿ Î~¿ Îò¿ Î∏¿ Î‹¿ ÎÔ¿ Ï%¿ ÏC¿ Ïg¿ Ïå¿ Ï´¿ Ï¬¿ ÏÂ¿ ÏÊ¿ Ì5¿ Ì;¿ Ì\¿ Ìb¿ Ì∞¿ Ìﬁ¿ Ó¿ Ó¿ Ó9¿ Ód¿ ÓÇ¿ Óê¿ Óñ¿ Ó“¿ ÓÍ¿ Ô"¿ ÔJ¿ ÔP¿ Ôf¿ Ôj¿ Ôk¿ ÔÉ¿ Ô¨¿ Ô¬¿ Ô„¿ Ô˛¿ ¿ ,¿ 2¿ L¿ b¿ f¿ g¿ É¿ †¿ ∞¿ À¿ Ê¿ Ò ¿ Ò¿ Ò¿ Ò(¿ Ò>¿ ÒB¿ ÒC¿ ÒO¿ Òñ¿ Ò»¿ ÒÍ¿ ÒÓ¿ ÒÔ¿ Ò˚¿ ÚA¿ Úm¿ Ú™¿ Úﬁ¿ Û¿ Û¿ Û¿ Û¿ Ûi¿ Ûj¿ ÛØ¿ Ûæ¿ Û¬¿ Ù¿ ÙJ¿ Ùt¿ Ùz¿ Ùô¿ Ùü¿ ÙÍ¿ ı2¿ ıF¿ ı^¿ ıo¿ ıò¿ ı∞¿ ı–¿ ıÎ¿ ˆ¿ ˆ6¿ ˆT¿ ˆy¿ ˆØ¿ ˆÕ¿ ˆÒ¿ ˜¿ ˜-¿ ˜.¿ ˜L¿ ˜R¿ ˜°¿ ˜π¿ ˜Ÿ¿ ˜Ï¿ ¯
¿ ¯%¿ ¯?¿ ¯M¿ ¯S¿ ¯g¿ ¯}¿ ¯Å¿ ¯Ç¿ ¯≤¿ ¯∏¿ ˘¿ ˘¿ ˘$¿ ˘o¿ ˘u¿ ˘Ø¿ ˘‚¿ ˙¿ ˙+¿ ˙L¿ ˙Z¿ ˙`¿ ˙{¿ ˙ë¿ ˙ï¿ ˙ñ¿ ˙¢¿ ˙Ω¿ ˙“¿ ˙Ó¿ ˚¿ ˚#¿ ˚s¿ ˚è¿ ˚Ω¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸d¿ ¸Ä¿ ¸ï¿ ¸≤¿ ¸⁄¿ ¸¿ ¸¯¿ ¸˛¿ ˝4¿ ˝8¿ ˝9¿ ˝E¿ ˝|¿ ˝ï¿ ˝©¿ ˝∑¿ ˝Ω¿ ˝æ¿ ˝—¿ ˛¿ ˛:¿ ˛|¿ ˛ö¿ ˛™¿ ˛À¿ ˛Í¿ ˇ¿ ˇ'¿ ˇ;¿ ˇ_¿ ˇå¿ ˇª¿ ˇ»¿ ˇ“¿ ˇ¿ ˇ¯¿ ¿ ¿ ¿ @¿ l¿ µ¿ ¿?¿~¿ï¿π¿‘¿›¿ˆ¿¿&¿9¿V¿_¿e¿±¿À¿„¿¯¿¿ ¿&¿I¿a¿o¿â¿ó¿»¿Â¿!¿p¿ø¿¿@¿J¿p¿y¿£¿≈¿Ã¿Õ¿›¿¿¿$¿(¿)¿5¿{¿ß¿Î¿A¿E¿G¿H¿ç¿ë¿’¿Ÿ¿Á¿Î¿7¿G¿ä¿±¿∑¿¿ˆ¿	D¿	~¿	ñ¿	ß¿	◊¿	Ô¿

¿
$¿
U¿
u¿
´¿
…¿
Ì¿
Ó¿
˙¿:¿;¿G¿è¿´¿¿¿›¿¿¿#¿)¿_¿c¿d¿p¿ß¿¿¿‘¿‚¿Ë¿È¿¸¿)¿[¿y¿â¿™¿…¿Ï¿¿¿<¿i¿ò¿•¿Ø¿Õ¿’¿Ë¿Ú¿Û¿¿I¿í¿›¿¿[¿r¿ñ¿±¿∫¿”¿Á¿¸¿¿,¿5¿;¿á¿°¿∏¿Ã¿Î¿Ù¿˙¿¿4¿B¿\¿j¿õ¿∏¿Ù¿C¿í¿÷¿¿¿C¿L¿u¿ó¿û¿ü¿Ø¿Ÿ¿Ï¿ˆ¿˙¿˚¿¿M¿y¿Ã¿–¿“¿”¿¯¿¿F¿T¿U¿é¿ú¿û¿ü¿‚¿¿3¿9¿á¿∆¿Ã¿¿F¿]¿Å¿¬¿¿¿<¿]¿É¿§¿¡¿Ë¿˝¿˛¿¿¿7¿=¿_¿ã¿•¿ ¿Â¿¿¿¿2¿G¿`¿v¿z¿{¿∆¿ˆ¿¿A¿\¿z¿à¿é¿•¿ª¿ø¿¿¿¿O¿i¿o¿≤¿¯¿2¿W¿á¿¢¿≈¿”¿Ÿ¿ı¿¿¿¿¿.¿G¿\¿p¿µ¿˛¿ J¿ ñ¿ —¿ Á¿ Î¿ Ï¿ ¯¿!¿!z¿!~¿!¿!ã¿!¬¿!‚¿"¿"B¿"ô¿"Œ¿"È¿"˚¿#3¿#H¿#T¿#ò¿#™¿#È¿$#¿$ã¿$©¿%¿%e¿%¬¿%—¿&K¿&¿¿&Œ¿&ÿ¿&Ì¿&˘¿'¿'?¿'G¿'M¿'o¿'§¿'Ë¿(
¿(.¿(6¿(<¿(@¿(A¿(M¿(í¿(Ω¿)¿)a¿)e¿)g¿)h¿)†¿)œ¿*¿*¿*?¿*S¿*s¿*á¿*©¿*À¿*Ó¿+¿+&¿+H¿+^¿+~¿+û¿+∆¿+Ó¿,¿,¿,¿,]¿,ï¿,õ¿,Í¿--¿-N¿-a¿-¿-õ¿-©¿-Ø¿-ƒ¿-⁄¿-˙¿-˛¿-ˇ¿.C¿.I¿.ï¿.ﬂ¿.Â¿/5¿/u¿/≈¿0¿0S¿0§¿0÷¿0˜¿1#¿1B¿1P¿1V¿1n¿1Ñ¿1§¿1®¿1©¿1Â¿1Î¿2:¿2r¿2®¿2…¿2ı¿3¿3&¿3,¿3H¿3^¿3~¿3Ç¿3É¿3è¿3›¿3ﬁ¿4+¿4t¿4ó¿4ù¿4Ì¿5>¿5X¿5Y¿5p¿5ø¿5ﬁ¿5‰¿60¿6¿6§¿6Ó¿7	¿7(¿76¿7<¿7b¿7x¿7ò¿7ú¿7ù¿7Ô¿7ı¿85¿8k¿8å¿8∏¿8€¿8È¿8Ô¿9+¿9G¿9¿9ß¿9≠¿9√¿9«¿9»¿9˘¿:¿:/¿:E¿:e¿:i¿:j¿:≠¿:Œ¿:¿;¿;&¿;*¿;+¿;n¿;è¿;±¿;«¿;Á¿;Î¿;Ï¿</¿<P¿<r¿<à¿<®¿<¨¿<≠¿<Ô¿=0¿=T¿=j¿=ä¿=é¿=è¿=æ¿=Ò¿>¿>'¿>G¿>K¿>L¿>q¿>Ω¿>ı¿?¿?¿?C¿?^¿?ê¿?ñ¿?Ø¿?‘¿@¿@C¿@I¿@k¿@ê¿@À¿@—¿@Ï¿A ¿A&¿A9¿A=¿A>¿AJ¿Aí¿A…¿B¿BD¿B^¿Bñ¿Bö¿Bõ¿Bß¿B˜¿C6¿C_¿C†¿C∫¿Cˆ¿D8¿DA¿DH¿DL¿DM¿DY¿Dê¿D©¿Dﬂ¿E¿EO¿Er¿E«¿F¿FA¿Fl¿FÜ¿Fö¿F¶¿Fœ¿FÌ¿G¿G¿G1¿GÇ¿Gè¿G†¿G÷¿GÓ¿G¯¿H¿Hg¿H´¿HË¿I¿I7¿IB¿Ik¿I∂¿I‚¿IÛ¿J,¿J6¿Jn¿JÇ¿J∞¿J«¿J’¿J›¿J„¿JÁ¿JË¿JÙ¿K5¿Kc¿Kg¿Kh¿Kt¿Kπ¿K‰¿L+¿Ln¿L¬¿M'¿M~¿MÇ¿MÑ¿MÖ¿M ¿M˘¿N-¿N3¿No¿NÉ¿N§¿Nÿ¿N˙¿O¿O3¿OO¿Oq¿Oñ¿O©¿O»¿OÔ¿P¿P)¿P*¿PK¿PL¿P`¿PÜ¿Pî¿Pö¿P’¿PŸ¿P⁄¿P˘¿Q¿Q.¿Q2¿Q3¿QZ¿Qm¿Qä¿Qü¿Q∫¿Q”¿QÎ¿R¿R$¿R<¿RR¿RX¿R\¿R]¿R•¿Rø¿RŒ¿RË¿S¿S¿S*¿S0¿SQ¿Sc¿S•¿Sæ¿SÀ¿S‰¿S¸¿T¿T¿T¿T@¿TF¿Tñ¿TÁ¿U¿U¿U\¿UÑ¿Uµ¿U’¿V ¿V¿V:¿VH¿VN¿Vf¿V}¿Vò¿Vú¿Vù¿VŸ¿Vﬂ¿W.¿Wf¿Wú¿WΩ¿WÈ¿X¿X¿X ¿X<¿XS¿Xn¿Xr¿Xs¿X¥¿Xµ¿X¡¿X˜¿Y¿YZ¿Y[¿Yß¿Yı¿ZA¿Zb¿Zá¿Zô¿Z˙¿[¿['¿[<¿[H¿[f¿[í¿[“¿[ﬁ¿[¯¿\ ¿\¿\¿\5¿\|¿\Ó¿])¿]F¿]a¿]{¿]ö¿]∏¿]“¿^(¿^0¿^=¿^`¿^f¿^j¿^k¿^w¿^ê¿^©¿^Ï¿_¿_ ¿_g¿_€¿`¿`'¿`D¿`_¿`y¿`ò¿`∂¿`–¿a(¿a9¿aA¿aZ¿ag¿aä¿aê¿aî¿aï¿a±¿a»¿a…¿aˇ¿b¿b:¿bd¿bÜ¿bß¿b¬¿b‰¿c¿c¿c;¿cA¿cE¿cF¿ca¿cÄ¿có¿cõ¿cú¿c∏¿c÷¿c‰¿cÍ¿cÎ¿d¿d&¿dM¿dZ¿dl¿dñ¿d⁄¿e$¿ep¿e”¿f;¿f¢¿f‘¿g1¿gV¿gé¿gŸ¿gﬂ¿g„¿g‰¿h9¿hÑ¿h£¿h«¿h·¿hÒ¿i¿i¿ih¿iq¿i~¿i∞¿i∂¿i«¿iÀ¿iÃ¿iÿ¿j¿jO¿j]¿jc¿j{¿jñ¿j“¿jˆ¿k¿k ¿k<¿k^¿k©¿kÕ¿k÷¿k„¿l¿l"¿l&¿l'¿l3¿lÉ¿lΩ¿l—¿l◊¿lÔ¿m¿m5¿mO¿mã¿mÕ¿m÷¿m›¿m·¿m‚¿mÓ¿n¿n6¿ng¿nk¿nl¿nx¿nπ¿nÿ¿nÛ¿o ¿o¿oA¿oG¿oK¿oL¿oX¿où¿o»¿o˛¿pR¿p∑¿pª¿pΩ¿pæ¿q¿q¿qV¿qü¿q÷¿q⁄¿r¿rd¿rw¿r≤¿rˆ¿r¸¿s/¿sO¿sp¿sì¿s©¿sÕ¿s¿t¿t¿tO¿tU¿t§¿t›¿u¿u¿u@¿u[¿u|¿uä¿uê¿u™¿u¿¿u‡¿u‰¿uÂ¿uÒ¿v9¿v|¿vπ¿v˜¿w¿wI¿wM¿wN¿wõ¿w‰¿x¿x¿x]¿xÆ¿x»¿x…¿x’¿y%¿yD¿yj¿yä¿yÿ¿yÍ¿z¿z@¿zÇ¿zã¿zí¿zñ¿zó¿z£¿z⁄¿z˘¿{¿{5¿{f¿{ò¿{¢¿{®¿{¨¿{≠¿{π¿{˙¿|¿|6¿|Z¿|a¿|e¿|f¿|r¿|∑¿|‚¿}/¿}Ü¿}ä¿}å¿}ç¿}«¿}À¿}ˇ¿~I¿~J¿~Ñ¿~à¿~º¿¿¿?¿C¿w¿Ω¿æ¿˙¿˛¿Ä2¿ÄÄ¿ÄÅ¿Ä√¿Ä«¿Ä˚¿ÅU¿ÅV¿Åô¿Åù¿Å—¿Ç-¿Ç.¿Çn¿Çr¿Ç¶¿Ç¸¿Ç˝¿É9¿É=¿Éq¿Éø¿É¿¿É˙¿É˛¿ÑF¿Ñí¿Ññ¿ÑÊ¿Ö,¿ÖW¿Ö[¿Öõ¿Öü¿ÖÓ¿Ü6¿Ü¿ÜÖ¿Üœ¿ÜÈ¿á¿á¿á/¿áH¿áb¿áÇ¿á£¿á¡¿á€¿áÔ¿à ¿à¿à¿àQ¿à¢¿à≤¿à›¿àﬁ¿â.¿âY¿âZ¿â®¿â«¿âÓ¿âÔ¿ä=¿äj¿äk¿äª¿äÎ¿ã¿ã¿ã`¿ãõ¿ãú¿ã≈¿å¿å¿å*¿åa¿åb¿åû¿åÕ¿åŒ¿å⁄¿ç¿ç5¿ç9¿ç:¿çF¿çÉ¿çØ¿ç‘¿ç˝¿é¿é(¿éQ¿éW¿éz¿é°¿éß¿éÕ¿é˜¿é˝¿è$¿èO¿èU¿èÇ¿è≥¿èπ¿èÁ¿ê¿ê¿êJ¿êy¿ê¿ê¶¿ê—¿ê◊¿ê€¿ê‹¿êË¿ë-¿ëX¿ëÑ¿ëó¿ë≤¿ë—¿ë¿í¿í,¿íO¿í~¿íØ¿í⁄¿í˝¿ì¿ì¿ì'¿ì+¿ì-¿ì.¿ì|¿ìÄ¿ìÃ¿î¿î7¿î;¿îä¿î⁄¿î˚¿îˇ¿ïB¿ïF¿ïò¿ïú¿ï™¿ïÆ¿ï¿ñ¿ñr¿ñª¿ñ¡¿ó¿ó\¿ó}¿óì¿ó•¿ó∑¿ó»¿óÙ¿ò¿ò2¿òC¿òÇ¿ò°¿ò¿¿òŸ¿ô¿ô'¿ôj¿ôk¿ôw¿ôø¿ö ¿ö¿ö¿ö¿öN¿öz¿ö≥¿ö—¿ö◊¿ö€¿ö‹¿õ-¿õ~¿õô¿õü¿õË¿ú0¿úx¿ú≥¿úπ¿ù
¿ùU¿ùz¿ùÄ¿ùù¿ùª¿ùÀ¿ùÊ¿û¿û¿ûf¿û~¿ûÑ¿ûà¿ûâ¿û±¿û∑¿û¿ü$¿üT¿üö¿ü∫¿ü’¿†"¿†:¿†@¿†D¿†E¿†Q¿†w¿†x¿†√¿†⁄¿†‡¿°$¿°J¿°K¿°W¿°{¿°|¿°à¿°≠¿°ƒ¿°Ê¿¢¿¢¿¢]¿¢ö¿¢≤¿¢∏¿¢º¿¢Ω¿¢…¿£¿£!¿£"¿£.¿£S¿£l¿£é¿£í¿£ì¿£ü¿£±¿£¸¿§W¿§¿§¢¿§∂¿§∫¿§ª¿§«¿•¿•"¿•&¿•'¿•3¿•x¿•£¿•œ¿•‚¿•˝¿¶¿¶1¿¶I¿¶R¿¶k¿¶s¿¶‹¿ß1¿ß¡¿ß≈¿ß«¿ß»¿ß˚¿ßˇ¿®K¿®ó¿®‰¿©0¿©~¿©œ¿©Í¿©Ó¿™=¿™ã¿™‹¿´+¿´v¿´∆¿¨¿¨W¿¨[¿¨°¿¨Ó¿≠:¿≠â¿≠–¿Æ¿ÆR¿ÆÉ¿Æ¡¿Æ¬¿ÆŒ¿ÆÙ¿Æı¿Ø?¿ØO¿ØU¿Ø•¿Ø·¿ØÁ¿∞8¿∞f¿∞l¿∞∫¿∞Û¿±B¿±ë¿±≥¿±π¿±œ¿±’¿≤¿≤>¿≤D¿≤R¿≤¿≤£¿≤©¿≤ª¿≤Ù¿≤¸¿≥¿≥5¿≥`¿≥f¿≥ë¿¥
¿¥E¿¥¢¿¥Á¿µ¿µ¿µ¿µ$¿µQ¿µs¿µè¿µ™¿µÀ¿µÛ¿∂G¿∂X¿∂g¿∂t¿∂~¿∂Ü¿∂ê¿∂¢¿∂®¿∂∏¿∂æ¿∑¿∑S¿∑ç¿∑´¿∑Ê¿∏2¿∏6¿∏7¿∏á¿∏÷¿π$¿πo¿πu¿π¬¿πŒ¿π‘¿∫"¿∫o¿∫Ñ¿∫≈¿∫Í¿∫Î¿ª:¿ªà¿ª‘¿º!¿ºi¿ºü¿º•¿ºÚ¿º˛¿Ω¿ΩU¿Ω†¿Ω∏¿Ω˚¿æ!¿æ"¿æn¿æÑ¿æä¿æ’¿æÚ¿ø¿ø'¿øM¿ø`¿øj¿øn¿øo¿ø{¿ø‚¿øÚ¿¿¿¿G¿¿V¿¿¿¿á¿¿ö¿¿§¿¿®¿¿©¿¿µ¿¿˙¿¡%¿¡D¿¡T¿¡q¿¡∏¿¬!¿¬0¿¬§¿¬ƒ¿√¿√d¿√â¿√Ò¿ƒ¿ƒd¿ƒä¿≈'¿≈L¿≈∂¿≈Î¿∆L¿∆]¿∆¡¿∆À¿«f¿«ß¿«Ø¿«¬¿«Ã¿«Â¿»R¿»X¿»\¿»^¿»_¿»ô¿»ù¿»Ï¿…;¿…å¿…µ¿…π¿  ¿ @¿ Ç¿ Ü¿ î¿ ò¿ Ê¿À¿ÀG¿Àá¿Àç¿À›¿Ã+¿ÃC¿ÃY¿Ãs¿Ãê¿Ã≠¿Ã‹¿ÃÚ¿Õ¿Õ¿Õ¿ÕV¿Õ\¿Õ≠¿Õ˙¿Œ¿Œ.¿ŒK¿Œf¿ŒÑ¿Œí¿Œò¿ŒØ¿ŒÌ¿œ¿œ¿œ¿œ¿œz¿œÄ¿œ∞¿œ∂¿–¿–:¿–V¿–}¿–§¿–≤¿–∏¿–¯¿—¿—T¿—v¿—|¿—Ä¿—Å¿— ¿—À¿—◊¿“¿“b¿“f¿“g¿“Æ¿“Í¿”¿”¿”_¿”ò¿”Ø¿”µ¿”π¿”∫¿”∆¿‘¿‘6¿‘{¿‘è¿‘∞¿‘Õ¿‘Ú¿’U¿’^¿’e¿’i¿’k¿’l¿’º¿÷¿÷#¿÷Q¿÷z¿÷ç¿÷ß¿÷Ω¿÷ﬁ¿÷˚¿◊¿◊¿◊N¿◊T¿◊ü¿◊¿ÿ¿ÿ#¿ÿ`¿ÿÇ¿ÿî¿ÿ±¿ÿÃ¿ÿÍ¿ÿ¯¿ÿ˛¿Ÿ¿ŸB¿ŸF¿ŸG¿ŸS¿ŸÜ¿Ÿö¿Ÿ¨¿Ÿ≤¿ŸÂ¿ŸÈ¿ŸÍ¿Ÿˆ¿⁄)¿⁄=¿⁄O¿⁄U¿⁄à¿⁄å¿⁄ç¿⁄ô¿⁄Ã¿⁄‡¿⁄Ú¿⁄¯¿€+¿€/¿€0¿€<¿€o¿€É¿€ï¿€õ¿€Œ¿€“¿€”¿€ﬂ¿‹"¿‹6¿‹I¿‹O¿‹ã¿‹è¿‹ê¿‹ú¿‹¬¿‹√¿‹œ¿›¿›¿›<¿›B¿›r¿›v¿›w¿›É¿›ú¿›≤¿›Õ¿›—¿›“¿›ﬁ¿›˜¿ﬁ¿ﬁ-¿ﬁ:¿ﬁW¿ﬁ]¿ﬁa¿ﬁb¿ﬁn¿ﬁ∂¿ﬁ˘¿ﬁ˝¿ﬁ˛¿ﬂ
¿ﬂ0¿ﬂR¿ﬂh¿ﬂl¿ﬂm¿ﬂy¿ﬂ∞¿ﬂƒ¿ﬂ“¿ﬂÿ¿ﬂ˙¿ﬂ˛¿ﬂˇ¿‡¿‡K¿‡_¿‡m¿‡s¿‡°¿‡•¿‡¶¿‡≤¿‡˜¿·"¿·g¿·k¿·l¿·x¿·™¿·√¿·Â¿·Î¿‚	¿‚)¿‚@¿‚ó¿‚†¿‚ß¿‚´¿‚≠¿‚Æ¿‚Ï¿‚¿„;¿„á¿„ÿ¿‰%¿‰M¿‰Q¿‰_¿‰c¿‰≠¿‰˜¿Â*¿Âr¿Âx¿Â©¿Â¡¿Â◊¿ÂÚ¿Ê¿Ê1¿ÊP¿Ê¿Êî¿Êï¿Ê€¿Ê·¿Á,¿Á{¿Áã¿ÁØ¿Á¬¿Á‡¿Áˇ¿Ë¿Ë¿Ë+¿ËP¿Ër¿Ëx¿Ë|¿Ë}¿Ë›¿Ë„¿È¿È¿Èi¿Èû¿È∫¿È·¿Í¿Í¿Í¿Í\¿Í|¿Í∏¿Í⁄¿Í‡¿Í‰¿ÍÂ¿Î/¿Î0¿Î<¿ÎÑ¿Îô¿Îª¿Î¿ÎÙ¿Îı¿Ï¿ÏA¿Ïz¿Ïë¿Ïó¿Ïõ¿Ïú¿Ï®¿ÏÌ¿Ì¿Ì_¿Ìs¿Ìî¿Ì±¿Ì÷¿Ó9¿ÓB¿ÓI¿ÓM¿ÓO¿ÓP¿Ó¿ÓÉ¿Ó‘¿Ô%¿Ôp¿Ôï¿Ô÷¿¿¿`¿s¿Ü¿ö¿´¿±¿≤¿Â¿˘¿˙¿Ò¿ÒK¿Òv¿Òæ¿Ò¬¿Òƒ¿Ò≈¿Ú¿Ú(¿Úx¿Ú√¿Ú…¿Û¿Û/¿Û@¿Û_¿Ûä¿Û¡¿Ûˆ¿Ù¿Ù'¿ÙL¿Ùc¿ÙÜ¿Ùø¿ÙÙ¿Ùı¿ıD¿ın¿ıt¿ı¬¿ˆ¿ˆ0¿ˆ6¿ˆz¿ˆ ¿˜¿˜c¿˜Æ¿˜Ã¿¯¿¯.¿¯`¿¯ú¿¯™¿¯∞¿¯À¿¯Î¿¯Ô¿¯¿˘&¿˘Q¿˘o¿˘ò¿˘≥¿˘¡¿˘«¿˘Û¿˙¿˙0¿˙R¿˙X¿˙\¿˙]¿˙∞¿˙Ì¿˚¿˚L¿˚m¿˚{¿˚Å¿˚≥¿˚Õ¿˚ˆ¿¸¿¸¿¸"¿¸#¿¸c¿¸∑¿¸Ì¿˝.¿˝Z¿˝h¿˝n¿˝´¿˝–¿˝˘¿˛¿˛!¿˛%¿˛&¿˛U¿˛•¿˛Ÿ¿ˇ¿ˇB¿ˇP¿ˇV¿ˇë¿ˇ¥¿ˇ›¿ˇˇ¿ ¿ 	¿ 
¿ M¿ î¿ ‘¿¿)¿@¿A¿M¿î¿∆¿«¿¿#¿)¿u¿ù¿£¿Õ¿¿B¿J¿Ç¿º¿ƒ¿ ¿Ú¿(¿^¿f¿û¿ÿ¿‡¿Ê¿Í¿Î¿¿^¿b¿c¿â¿≥¿Ò¿"¿h¿©¿≥¿π¿Ω¿æ¿Â¿¿L¿}¿√¿¿¿¿¿¿=¿e¿§¿”¿	¿	Z¿	d¿	j¿	n¿	o¿	ï¿	Ω¿	˚¿
*¿
p¿
±¿
ª¿
¡¿
≈¿
∆¿
“¿¿B¿n¿é¿ª¿˙¿5¿<¿X¿v¿|¿¿¿ƒ¿∆¿«¿¿>¿Å¿á¿∏¿æ¿)¿H¿^¿ã¿ß¿Ã¿Ô¿¿4¿T¿Ü¿¥¿‹¿˛¿¿?¿C¿D¿í¿«¿Í¿¿3¿S¿a¿g¿Ä¿™¿ ¿Œ¿œ¿¿Y¿ã¿ë¿Â¿4¿P¿t¿á¿•¿¿¿ﬁ¿Ï¿Ú¿
¿*¿.¿/¿|¿ø¿≈¿¿e¿z¿≈¿	¿-¿3¿h¿∏¿Ï¿"¿>¿e¿Ä¿®¿∂¿º¿›¿˝¿¿¿N¿i¿o¿ª¿	¿Q¿É¿ù¿¬¿›¿¿¿¿6¿V¿Z¿[¿ó¿–¿	¿T¿ü¿÷¿⁄¿€¿&¿J¿ë¿ï¿ñ¿·¿¿L¿P¿Q¿â¿¨¿Ÿ¿ˇ¿¿J¿N¿O¿á¿™¿‹¿¿¿M¿Q¿R¿ú¿ø¿ ¿ ¿ 	¿ /¿ U¿ Ñ¿ ≥¿ ÿ¿ Ÿ¿!)¿!6¿!<¿!Ç¿!Æ¿!€¿"¿"W¿"ç¿"Æ¿"⁄¿"¸¿#
¿#¿#,¿#L¿#P¿#Q¿#]¿#ù¿#π¿#«¿#Õ¿#˚¿#ˇ¿$ ¿$¿$S¿$Ö¿$∞¿$‰¿$¿%Y¿%°¿%®¿%¥¿%ˇ¿&H¿&O¿&P¿&w¿&•¿&´¿&“¿' ¿'¿'-¿'[¿'a¿'â¿'∫¿'¿¿'Ê¿(¿(¿(=¿(f¿(l¿(í¿(ø¿(≈¿(¿)'¿)-¿)S¿)Ä¿)Ü¿)Ø¿)‚¿)Ë¿*¿*A¿*G¿*p¿*£¿*©¿*–¿*ˇ¿+¿+=¿+é¿+î¿+º¿+Ì¿+Û¿,¿,O¿,U¿,{¿,®¿,Æ¿,”¿,˛¿-¿-(¿-Z¿-`¿-Ñ¿-∂¿-º¿-È¿.-¿.3¿.`¿.§¿.™¿.Õ¿.˝¿/¿/*¿/W¿/]¿/≥¿/Î¿/Ò¿0¿0Q¿0W¿0Å¿0¥¿0∫¿0‰¿1¿1¿1K¿1Ö¿1ã¿1Ω¿1ˇ¿2¿2&¿2R¿2X¿2¿2´¿2±¿2ﬂ¿3¿3"¿3o¿3æ¿4 ¿4%¿4G¿4M¿4x¿4¶¿4¨¿4’¿4ˇ¿5¿51¿5a¿5g¿5î¿5∆¿5Ã¿5ˆ¿6"¿6(¿6T¿6Ñ¿6ä¿6¥¿6‡¿6Ê¿7¿7<¿7B¿7h¿7å¿7í¿7∑¿7Ÿ¿7ﬂ¿8¿8,¿82¿8p¿8ƒ¿8 ¿9	¿9_¿9e¿9û¿9Ë¿9Ó¿:(¿:t¿:z¿:®¿:‹¿:‚¿;¿;5¿;;¿;v¿;ƒ¿; ¿<¿<S¿<Y¿<è¿<⁄¿<‡¿<‰¿<Â¿<¸¿=¿=¿= ¿==¿=b¿=f¿=g¿=Ç¿=•¿=©¿=™¿=»¿=Ó¿=Ú¿=Û¿>¿>9¿>=¿>>¿>Z¿>~¿>Ç¿>É¿>°¿>«¿>À¿>Ã¿>Ë¿?¿?¿?¿?-¿?Q¿?U¿?V¿?n¿?é¿?í¿?ì¿?™¿?…¿?Õ¿?Œ¿?Á¿@¿@¿@¿@Q¿@ò¿@ú¿@ù¿@‚¿A*¿A.¿A/¿An¿A∞¿A¥¿Aµ¿Aı¿B8¿B<¿B=¿Bt¿B•¿B©¿B™¿B–¿B˜¿B˚¿B¸¿C)¿C^¿Cb¿Cc¿Cê¿C≈¿C…¿CÀ¿CÃ¿D¿D7¿D;¿Dä¿Dæ¿DÚ¿EA¿EN¿Eg¿E}¿Eó¿E¥¿E…¿E ¿F¿Fg¿Fâ¿Fõ¿F∏¿F”¿FÒ¿Fˇ¿G¿G¿G<¿G@¿GA¿GM¿Gî¿G∆¿H	¿H¿H¿H¿H_¿Hä¿Hœ¿H”¿H’¿H÷¿I¿I\¿Ip¿It¿Iª¿J¿J4¿Jh¿J∂¿JÛ¿JÙ¿K ¿KG¿Ky¿KÑ¿K¶¿K÷¿K⁄¿K‹¿K›¿L¿L¿Lb¿L~¿LÇ¿L…¿M¿M:¿MÉ¿Mû¿M¥¿Mœ¿MÓ¿N¿N$¿N(¿N)¿Nn¿Ní¿N•¿N√¿Nﬁ¿N˝¿O¿O¿O)¿OI¿OM¿ON¿OZ¿Oö¿OØ¿OΩ¿O√¿OÒ¿Oı¿Oˆ¿P¿PG¿Pr¿Pπ¿PΩ¿Pø¿P¿¿P˝¿Q¿QK¿Qî¿Q∆¿Q¿QÙ¿R¿R¿RI¿R¿Rœ¿RÍ¿S ¿S¿S6¿SM¿Sb¿Sc¿Sñ¿S±¿Sø¿Sÿ¿SÚ¿T ¿T¿T¿T:¿T>¿T?¿TK¿Tí¿Tƒ¿TÊ¿TÍ¿TÎ¿T˜¿U<¿Ug¿U•¿U©¿U´¿U¨¿U‡¿U‰¿UÚ¿Uˆ¿V4¿Vu¿V¶¿Vﬂ¿VÂ¿W¿W¿W;¿WQ¿Wn¿WÉ¿Wò¿Wô¿WÁ¿X¿X¿XX¿Xñ¿Xµ¿X»¿XÊ¿Y¿Y¿Y)¿Y/¿YL¿Y_¿YÜ¿Y¥¿Y∫¿Y–¿Y‘¿Y’¿Y·¿Z¿Z¿Z[¿Z©¿ZÎ¿[¿[	¿[¿[.¿[I¿[i¿[Ö¿[â¿[ä¿[ñ¿[Õ¿[Ê¿\¿\*¿\g¿\y¿\è¿\™¿\∞¿\È¿\˘¿]#¿]6¿]@¿]D¿]E¿]Q¿]ñ¿]¡¿^¿^¿^	¿^
¿^X¿^ã¿^è¿^€¿^ﬂ¿_*¿_{¿_è¿_ì¿_°¿_•¿_Â¿`(¿`[¿`ñ¿`ú¿`÷¿`Ó¿a¿a-¿aN¿a~¿a∞¿a∆¿a„¿b¿b+¿b@¿bm¿bÜ¿b´¿b‘¿bÈ¿bÍ¿c0¿cf¿cÖ¿cò¿c∂¿c—¿cÎ¿c˘¿cˇ¿d¿d(¿d,¿d-¿dq¿dØ¿dµ¿e¿eH¿eN¿eü¿eÓ¿f"¿fT¿fn¿fì¿fÆ¿f‘¿f‚¿fË¿g¿g¿g!¿g"¿go¿gô¿gπ¿gÀ¿gË¿h¿h¿h-¿h3¿hH¿h^¿hb¿hc¿h≤¿hÀ¿h—¿i¿i[¿i™¿iÏ¿j;¿j|¿jæ¿jÁ¿j¸¿k¿k)¿kX¿ks¿kô¿k¥¿k÷¿k‰¿kÍ¿l¿l¿l¿l ¿ll¿l¶¿l¨¿lÓ¿lÙ¿m¿mN¿mk¿mì¿mÆ¿m“¿m‡¿mÊ¿n¿n¿n¿n¿n*¿n<¿nN¿nb¿nf¿ng¿ns¿nû¿nü¿n’¿n·¿o¿o¿oo¿ou¿o≈¿oˆ¿pE¿p_¿pÅ¿pΩ¿p¡¿p¬¿pŒ¿q¿qW¿qã¿qü¿q•¿q‡¿r¿r[¿ru¿r≠¿r±¿r≤¿ræ¿s¿s7¿s_¿sy¿sµ¿s˜¿t ¿t¿t¿t¿t¿tO¿t}¿tâ¿tÊ¿u;¿uÜ¿u±¿u∏¿uÙ¿v¿vc¿vâ¿v¢¿vø¿v”¿vˇ¿w,¿wL¿wU¿wb¿wn¿wÖ¿w≥¿w‚¿x¿x¿x"¿x0¿xC¿xV¿xÉ¿x·¿y¿y#¿y<¿yU¿y^¿ye¿yu¿yü¿y≤¿yº¿y¿¿y¡¿yÕ¿z¿z=¿zA¿zB¿zN¿zì¿zæ¿{ ¿{U¿{ò¿{Ú¿{ˆ¿{¯¿{˘¿|H¿|L¿|Z¿|^¿|¢¿|Á¿}.¿}/¿}v¿}à¿}é¿}€¿~¿~¿~B¿~\¿~r¿~ã¿~°¿~ø¿~›¿~Ù¿¿ ¿!¿Z¿s¿¿ö¿∏¿∆¿Ã¿„¿˘¿˝¿˛¿ÄR¿Än¿Ä}¿Äó¿Ä≤¿Ä¿¿Ä∆¿Ä⁄¿Ä¿ÄÙ¿Äı¿Å¿Å-¿Å.¿Å:¿Åq¿ÅÀ¿Ç¿Ç¿Ç<¿Ça¿Çh¿Çõ¿Çü¿Ç°    .RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBase_transparentPaintRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegion úv